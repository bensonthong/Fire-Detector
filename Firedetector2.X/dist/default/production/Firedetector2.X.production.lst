

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu May 13 11:39:05 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           	psect	idataCOMRAM
    59  002D5E                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _array
    63  002D5E  01                 	db	1
    64  002D5F  4F                 	db	79
    65  002D60  12                 	db	18
    66  002D61  06                 	db	6
    67  002D62  4C                 	db	76
    68  002D63  24                 	db	36
    69  002D64  20                 	db	32
    70  002D65  0F                 	db	15
    71  002D66  00                 	db	0
    72  002D67  04                 	db	4
    73                           
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	opt stack 0
    77  001000  00                 	db	0
    78  001001                     _dpowers:
    79                           	opt stack 0
    80  001001  0001               	dw	1
    81  001003  0000               	dw	0
    82  001005  000A               	dw	10
    83  001007  0000               	dw	0
    84  001009  0064               	dw	100
    85  00100B  0000               	dw	0
    86  00100D  03E8               	dw	1000
    87  00100F  0000               	dw	0
    88  001011  2710               	dw	10000
    89  001013  0000               	dw	0
    90  001015  86A0               	dw	34464
    91  001017  0001               	dw	1
    92  001019  4240               	dw	16960
    93  00101B  000F               	dw	15
    94  00101D  9680               	dw	38528
    95  00101F  0098               	dw	152
    96  001021  E100               	dw	57600
    97  001023  05F5               	dw	1525
    98  001025  CA00               	dw	51712
    99  001027  3B9A               	dw	15258
   100  001029                     __end_of_dpowers:
   101                           	opt stack 0
   102  001029                     __npowers_:
   103                           	opt stack 0
   104  001029  00                 	db	0
   105  00102A  80                 	db	128
   106  00102B  3F                 	db	63
   107  00102C  CD                 	db	205
   108  00102D  CC                 	db	204
   109  00102E  3D                 	db	61
   110  00102F  D7                 	db	215
   111  001030  23                 	db	35
   112  001031  3C                 	db	60
   113  001032  12                 	db	18
   114  001033  83                 	db	131
   115  001034  3A                 	db	58
   116  001035  B7                 	db	183
   117  001036  D1                 	db	209
   118  001037  38                 	db	56
   119  001038  C6                 	db	198
   120  001039  27                 	db	39
   121  00103A  37                 	db	55
   122  00103B  38                 	db	56
   123  00103C  86                 	db	134
   124  00103D  35                 	db	53
   125  00103E  C0                 	db	192
   126  00103F  D6                 	db	214
   127  001040  33                 	db	51
   128  001041  CC                 	db	204
   129  001042  2B                 	db	43
   130  001043  32                 	db	50
   131  001044  70                 	db	112
   132  001045  89                 	db	137
   133  001046  30                 	db	48
   134  001047  E7                 	db	231
   135  001048  DB                 	db	219
   136  001049  2E                 	db	46
   137  00104A  E5                 	db	229
   138  00104B  3C                 	db	60
   139  00104C  1E                 	db	30
   140  00104D  42                 	db	66
   141  00104E  A2                 	db	162
   142  00104F  0D                 	db	13
   143  001050                     __end_of__npowers_:
   144                           	opt stack 0
   145  001050                     __powers_:
   146                           	opt stack 0
   147  001050  00                 	db	0
   148  001051  80                 	db	128
   149  001052  3F                 	db	63
   150  001053  00                 	db	0
   151  001054  20                 	db	32
   152  001055  41                 	db	65
   153  001056  00                 	db	0
   154  001057  C8                 	db	200
   155  001058  42                 	db	66
   156  001059  00                 	db	0
   157  00105A  7A                 	db	122
   158  00105B  44                 	db	68
   159  00105C  40                 	db	64
   160  00105D  1C                 	db	28
   161  00105E  46                 	db	70
   162  00105F  50                 	db	80
   163  001060  C3                 	db	195
   164  001061  47                 	db	71
   165  001062  24                 	db	36
   166  001063  74                 	db	116
   167  001064  49                 	db	73
   168  001065  97                 	db	151
   169  001066  18                 	db	24
   170  001067  4B                 	db	75
   171  001068  BC                 	db	188
   172  001069  BE                 	db	190
   173  00106A  4C                 	db	76
   174  00106B  6B                 	db	107
   175  00106C  6E                 	db	110
   176  00106D  4E                 	db	78
   177  00106E  03                 	db	3
   178  00106F  15                 	db	21
   179  001070  50                 	db	80
   180  001071  79                 	db	121
   181  001072  AD                 	db	173
   182  001073  60                 	db	96
   183  001074  F3                 	db	243
   184  001075  49                 	db	73
   185  001076  71                 	db	113
   186  001077                     __end_of__powers_:
   187                           	opt stack 0
   188  0000                     _ADCON0	set	4034
   189  0000                     _ADCON0bits	set	4034
   190  0000                     _ADCON1	set	4033
   191  0000                     _ADCON2	set	4032
   192  0000                     _ADRESH	set	4036
   193  0000                     _ADRESL	set	4035
   194  0000                     _CCP2CON	set	4026
   195  0000                     _CCPR2L	set	4027
   196  0000                     _INTCON2bits	set	4081
   197  0000                     _INTCONbits	set	4082
   198  0000                     _OSCCON	set	4051
   199  0000                     _PIE1bits	set	3997
   200  0000                     _PIR1bits	set	3998
   201  0000                     _PORTAbits	set	3968
   202  0000                     _PORTBbits	set	3969
   203  0000                     _PORTC	set	3970
   204  0000                     _PORTCbits	set	3970
   205  0000                     _PORTD	set	3971
   206  0000                     _PORTDbits	set	3971
   207  0000                     _PORTE	set	3972
   208  0000                     _PR2	set	4043
   209  0000                     _RCSTA	set	4011
   210  0000                     _RCSTAbits	set	4011
   211  0000                     _SPBRG	set	4015
   212  0000                     _SPBRGH	set	4016
   213  0000                     _T0CON	set	4053
   214  0000                     _T0CONbits	set	4053
   215  0000                     _T2CON	set	4042
   216  0000                     _TMR0H	set	4055
   217  0000                     _TMR0L	set	4054
   218  0000                     _TRISA	set	3986
   219  0000                     _TRISB	set	3987
   220  0000                     _TRISC	set	3988
   221  0000                     _TRISCbits	set	3988
   222  0000                     _TRISD	set	3989
   223  0000                     _TRISE	set	3990
   224  0000                     _TXREG	set	4013
   225  0000                     _TXSTA	set	4012
   226  0000                     _TXSTAbits	set	4012
   227  0000                     _RBPU	set	32655
   228  0000                     _TRMT	set	32097
   229  001077                     STR_1:
   230                           
   231                           ; BSR set to: 0
   232  001077  46                 	db	70	;'F'
   233  001078  6C                 	db	108	;'l'
   234  001079  61                 	db	97	;'a'
   235  00107A  6D                 	db	109	;'m'
   236  00107B  65                 	db	101	;'e'
   237  00107C  20                 	db	32
   238  00107D  53                 	db	83	;'S'
   239  00107E  65                 	db	101	;'e'
   240  00107F  6E                 	db	110	;'n'
   241  001080  73                 	db	115	;'s'
   242  001081  6F                 	db	111	;'o'
   243  001082  72                 	db	114	;'r'
   244  001083  20                 	db	32
   245  001084  56                 	db	86	;'V'
   246  001085  6F                 	db	111	;'o'
   247  001086  6C                 	db	108	;'l'
   248  001087  74                 	db	116	;'t'
   249  001088  61                 	db	97	;'a'
   250  001089  67                 	db	103	;'g'
   251  00108A  65                 	db	101	;'e'
   252  00108B  20                 	db	32
   253  00108C  3D                 	db	61	;'='
   254  00108D  20                 	db	32
   255  00108E  25                 	db	37
   256  00108F  66                 	db	102	;'f'
   257  001090  20                 	db	32
   258  001091  46                 	db	70	;'F'
   259  001092  20                 	db	32
   260  001093  0D                 	db	13
   261  001094  0A                 	db	10
   262  001095  00                 	db	0
   263                           
   264                           ; #config settings
   265  001096  00                 	db	0	; dummy byte at the end
   266  0000                     
   267                           	psect	cinit
   268  002BD0                     __pcinit:
   269                           	opt stack 0
   270  002BD0                     start_initialization:
   271                           	opt stack 0
   272  002BD0                     __initialization:
   273                           	opt stack 0
   274                           
   275                           ; Clear objects allocated to BANK0 (1 bytes)
   276  002BD0  0100               	movlb	0
   277  002BD2  6B97               	clrf	__pbssBANK0& (0+255),b
   278                           
   279                           ; Clear objects allocated to COMRAM (1 bytes)
   280  002BD4  6A6E               	clrf	__pbssCOMRAM& (0+255),c
   281                           
   282                           ; Initialize objects allocated to COMRAM (10 bytes)
   283                           ; load TBLPTR registers with __pidataCOMRAM
   284  002BD6  0E5E               	movlw	low __pidataCOMRAM
   285  002BD8  6EF6               	movwf	tblptrl,c
   286  002BDA  0E2D               	movlw	high __pidataCOMRAM
   287  002BDC  6EF7               	movwf	tblptrh,c
   288  002BDE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   289  002BE0  6EF8               	movwf	tblptru,c
   290  002BE2  EE00  F064         	lfsr	0,__pdataCOMRAM
   291  002BE6  EE10 F00A          	lfsr	1,10
   292  002BEA                     copy_data0:
   293  002BEA  0009               	tblrd		*+
   294  002BEC  CFF5 FFEE          	movff	tablat,postinc0
   295  002BF0  50E5               	movf	postdec1,w,c
   296  002BF2  50E1               	movf	fsr1l,w,c
   297  002BF4  E1FA               	bnz	copy_data0
   298  002BF6                     end_of_initialization:
   299                           	opt stack 0
   300  002BF6                     __end_of__initialization:
   301                           	opt stack 0
   302  002BF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   303  002BF8  6EF8               	movwf	tblptru,c
   304  002BFA  0100               	movlb	0
   305  002BFC  EFA8  F00F         	goto	_main	;jump to C main() function
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	bssCOMRAM
   315  00006E                     __pbssCOMRAM:
   316                           	opt stack 0
   317  00006E                     _FLASHING:
   318                           	opt stack 0
   319  00006E                     	ds	1
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           postdec1	equ	0xFE5
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	dataCOMRAM
   329  000064                     __pdataCOMRAM:
   330                           	opt stack 0
   331  000064                     _array:
   332                           	opt stack 0
   333  000064                     	ds	10
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342                           	psect	bssBANK0
   343  000097                     __pbssBANK0:
   344                           	opt stack 0
   345  000097                     _Manual_Alarm:
   346                           	opt stack 0
   347  000097                     	ds	1
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	cstackBANK0
   357  000080                     __pcstackBANK0:
   358                           	opt stack 0
   359  000080                     _printf$1580:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0x0
   363  000080                     	ds	3
   364  000083                     printf@ap:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x3
   368  000083                     	ds	2
   369  000085                     printf@flag:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x5
   373  000085                     	ds	2
   374  000087                     printf@prec:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x7
   378  000087                     	ds	2
   379  000089                     printf@val:
   380                           	opt stack 0
   381                           
   382                           ; 4 bytes @ 0x9
   383  000089                     	ds	4
   384  00008D                     printf@exp:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0xD
   388  00008D                     	ds	2
   389  00008F                     printf@tmpval:
   390                           	opt stack 0
   391                           
   392                           ; 4 bytes @ 0xF
   393  00008F                     	ds	4
   394  000093                     printf@fval:
   395                           	opt stack 0
   396                           
   397                           ; 3 bytes @ 0x13
   398  000093                     	ds	3
   399  000096                     printf@c:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x16
   403  000096                     	ds	1
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           postdec1	equ	0xFE5
   410                           fsr1l	equ	0xFE1
   411                           
   412                           	psect	cstackCOMRAM
   413  000001                     __pcstackCOMRAM:
   414                           	opt stack 0
   415  000001                     ??_chkisr:
   416  000001                     
   417                           ; 0 bytes @ 0x0
   418  000001                     	ds	14
   419  00000F                     ??_Display_Upper_Digit:
   420  00000F                     ?_get_full_ADC:
   421                           	opt stack 0
   422  00000F                     ?___awmod:
   423                           	opt stack 0
   424  00000F                     ?___lwdiv:
   425                           	opt stack 0
   426  00000F                     ?___lwmod:
   427                           	opt stack 0
   428  00000F                     ?___ftpack:
   429                           	opt stack 0
   430  00000F                     ?___ftneg:
   431                           	opt stack 0
   432  00000F                     ?__tdiv_to_l_:
   433                           	opt stack 0
   434  00000F                     ?__div_to_l_:
   435                           	opt stack 0
   436  00000F                     ?___lldiv:
   437                           	opt stack 0
   438  00000F                     ?___llmod:
   439                           	opt stack 0
   440  00000F                     putch@c:
   441                           	opt stack 0
   442  00000F                     Select_ADC_Channel@channel:
   443                           	opt stack 0
   444  00000F                     Display_Lower_Digit@digit:
   445                           	opt stack 0
   446  00000F                     Delay_One_Sec@I:
   447                           	opt stack 0
   448  00000F                     OpenUSART@spbrg:
   449                           	opt stack 0
   450  00000F                     ___awmod@dividend:
   451                           	opt stack 0
   452  00000F                     ___lwdiv@dividend:
   453                           	opt stack 0
   454  00000F                     ___lwmod@dividend:
   455                           	opt stack 0
   456  00000F                     __div_to_l_@f1:
   457                           	opt stack 0
   458  00000F                     ___ftpack@arg:
   459                           	opt stack 0
   460  00000F                     __tdiv_to_l_@f1:
   461                           	opt stack 0
   462  00000F                     ___ftge@ff1:
   463                           	opt stack 0
   464  00000F                     ___ftneg@f1:
   465                           	opt stack 0
   466  00000F                     ___lldiv@dividend:
   467                           	opt stack 0
   468  00000F                     ___llmod@dividend:
   469                           	opt stack 0
   470                           
   471                           ; 4 bytes @ 0xE
   472  00000F                     	ds	1
   473  000010                     Display_Upper_Digit@digit:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0xF
   477  000010                     	ds	1
   478  000011                     ??_get_full_ADC:
   479  000011                     OpenUSART@config:
   480                           	opt stack 0
   481  000011                     Display_Upper_Digit@bit6:
   482                           	opt stack 0
   483  000011                     ___awmod@divisor:
   484                           	opt stack 0
   485  000011                     ___lwdiv@divisor:
   486                           	opt stack 0
   487  000011                     ___lwmod@divisor:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x10
   491  000011                     	ds	1
   492  000012                     ___ftpack@exp:
   493                           	opt stack 0
   494  000012                     __div_to_l_@f2:
   495                           	opt stack 0
   496  000012                     __tdiv_to_l_@f2:
   497                           	opt stack 0
   498  000012                     ___ftge@ff2:
   499                           	opt stack 0
   500                           
   501                           ; 3 bytes @ 0x11
   502  000012                     	ds	1
   503  000013                     ___awmod@counter:
   504                           	opt stack 0
   505  000013                     ___ftpack@sign:
   506                           	opt stack 0
   507  000013                     ___lwdiv@counter:
   508                           	opt stack 0
   509  000013                     ___lwmod@counter:
   510                           	opt stack 0
   511  000013                     get_full_ADC@result:
   512                           	opt stack 0
   513  000013                     ___lldiv@divisor:
   514                           	opt stack 0
   515  000013                     ___llmod@divisor:
   516                           	opt stack 0
   517                           
   518                           ; 4 bytes @ 0x12
   519  000013                     	ds	1
   520  000014                     ??___ftpack:
   521  000014                     ___awmod@sign:
   522                           	opt stack 0
   523  000014                     ___lwdiv@quotient:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x13
   527  000014                     	ds	1
   528  000015                     ??__tdiv_to_l_:
   529  000015                     ??___ftge:
   530  000015                     ?___awdiv:
   531                           	opt stack 0
   532  000015                     ___awdiv@dividend:
   533                           	opt stack 0
   534  000015                     __div_to_l_@quot:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0x14
   538  000015                     	ds	2
   539  000017                     ?___awtoft:
   540                           	opt stack 0
   541  000017                     ?___lltoft:
   542                           	opt stack 0
   543  000017                     ___llmod@counter:
   544                           	opt stack 0
   545  000017                     ___awdiv@divisor:
   546                           	opt stack 0
   547  000017                     ___awtoft@c:
   548                           	opt stack 0
   549  000017                     ___lldiv@quotient:
   550                           	opt stack 0
   551  000017                     ___lltoft@c:
   552                           	opt stack 0
   553                           
   554                           ; 4 bytes @ 0x16
   555  000017                     	ds	1
   556  000018                     __tdiv_to_l_@quot:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x17
   560  000018                     	ds	1
   561  000019                     ___awdiv@counter:
   562                           	opt stack 0
   563  000019                     __div_to_l_@cntr:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x18
   567  000019                     	ds	1
   568  00001A                     ___awdiv@sign:
   569                           	opt stack 0
   570  00001A                     ___awtoft@sign:
   571                           	opt stack 0
   572  00001A                     __div_to_l_@exp1:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x19
   576  00001A                     	ds	1
   577  00001B                     ??___lltoft:
   578  00001B                     ___lldiv@counter:
   579                           	opt stack 0
   580  00001B                     ___awdiv@quotient:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1A
   584  00001B                     	ds	1
   585  00001C                     __tdiv_to_l_@cntr:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x1B
   589  00001C                     	ds	1
   590  00001D                     ?___wmul:
   591                           	opt stack 0
   592  00001D                     __tdiv_to_l_@exp1:
   593                           	opt stack 0
   594  00001D                     ___wmul@multiplier:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x1C
   598  00001D                     	ds	2
   599  00001F                     ___lltoft@exp:
   600                           	opt stack 0
   601  00001F                     ___wmul@multiplicand:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x1E
   605  00001F                     	ds	2
   606  000021                     ___wmul@product:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x20
   610  000021                     	ds	2
   611  000023                     ?___ftmul:
   612                           	opt stack 0
   613  000023                     ___ftmul@f1:
   614                           	opt stack 0
   615                           
   616                           ; 3 bytes @ 0x22
   617  000023                     	ds	3
   618  000026                     ___ftmul@f2:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x25
   622  000026                     	ds	3
   623  000029                     ??___ftmul:
   624                           
   625                           ; 0 bytes @ 0x28
   626  000029                     	ds	3
   627  00002C                     ___ftmul@exp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x2B
   631  00002C                     	ds	1
   632  00002D                     ___ftmul@f3_as_product:
   633                           	opt stack 0
   634                           
   635                           ; 3 bytes @ 0x2C
   636  00002D                     	ds	3
   637  000030                     ___ftmul@cntr:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x2F
   641  000030                     	ds	1
   642  000031                     ___ftmul@sign:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x30
   646  000031                     	ds	1
   647  000032                     ?___ftdiv:
   648                           	opt stack 0
   649  000032                     ?_fround:
   650                           	opt stack 0
   651  000032                     ?_scale:
   652                           	opt stack 0
   653  000032                     ___ftdiv@f1:
   654                           	opt stack 0
   655                           
   656                           ; 3 bytes @ 0x31
   657  000032                     	ds	3
   658  000035                     ___ftdiv@f2:
   659                           	opt stack 0
   660  000035                     _fround$1578:
   661                           	opt stack 0
   662  000035                     _scale$1579:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0x34
   666  000035                     	ds	3
   667  000038                     ??___ftdiv:
   668  000038                     scale@scl:
   669                           	opt stack 0
   670  000038                     _fround$1577:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0x37
   674  000038                     	ds	1
   675  000039                     ?___fttol:
   676                           	opt stack 0
   677  000039                     ___fttol@f1:
   678                           	opt stack 0
   679                           
   680                           ; 3 bytes @ 0x38
   681  000039                     	ds	2
   682  00003B                     fround@prec:
   683                           	opt stack 0
   684  00003B                     ___ftdiv@cntr:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x3A
   688  00003B                     	ds	1
   689  00003C                     ?___ftadd:
   690                           	opt stack 0
   691  00003C                     ___ftadd@f1:
   692                           	opt stack 0
   693  00003C                     ___ftdiv@f3:
   694                           	opt stack 0
   695                           
   696                           ; 3 bytes @ 0x3B
   697  00003C                     	ds	1
   698  00003D                     ??___fttol:
   699                           
   700                           ; 0 bytes @ 0x3C
   701  00003D                     	ds	2
   702  00003F                     ___ftdiv@exp:
   703                           	opt stack 0
   704  00003F                     ___ftadd@f2:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0x3E
   708  00003F                     	ds	1
   709  000040                     ___ftdiv@sign:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x3F
   713  000040                     	ds	2
   714  000042                     ??___ftadd:
   715  000042                     ___fttol@sign1:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x41
   719  000042                     	ds	1
   720  000043                     ___fttol@lval:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x42
   724  000043                     	ds	2
   725  000045                     ___ftadd@sign:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x44
   729  000045                     	ds	1
   730  000046                     ___ftadd@exp2:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x45
   734  000046                     	ds	1
   735  000047                     ___ftadd@exp1:
   736                           	opt stack 0
   737  000047                     ___fttol@exp1:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x46
   741  000047                     	ds	1
   742  000048                     ?___ftsub:
   743                           	opt stack 0
   744  000048                     ___ftsub@f1:
   745                           	opt stack 0
   746                           
   747                           ; 3 bytes @ 0x47
   748  000048                     	ds	3
   749  00004B                     ___ftsub@f2:
   750                           	opt stack 0
   751                           
   752                           ; 3 bytes @ 0x4A
   753  00004B                     	ds	3
   754  00004E                     ?_printf:
   755                           	opt stack 0
   756  00004E                     printf@f:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x4D
   760  00004E                     	ds	5
   761  000053                     ??_printf:
   762                           
   763                           ; 0 bytes @ 0x52
   764  000053                     	ds	6
   765  000059                     main@num_step1:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x58
   769  000059                     	ds	2
   770  00005B                     main@U:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x5A
   774  00005B                     	ds	1
   775  00005C                     main@L:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x5B
   779  00005C                     	ds	1
   780  00005D                     main@U_675:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0x5C
   784  00005D                     	ds	1
   785  00005E                     main@L_676:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x5D
   789  00005E                     	ds	1
   790  00005F                     main@voltage_mv1:
   791                           	opt stack 0
   792                           
   793                           ; 3 bytes @ 0x5E
   794  00005F                     	ds	3
   795  000062                     main@people:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x61
   799  000062                     	ds	2
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           postinc0	equ	0xFEE
   805                           postdec1	equ	0xFE5
   806                           fsr1l	equ	0xFE1
   807                           
   808 ;;
   809 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   810 ;;
   811 ;; *************** function _main *****************
   812 ;; Defined at:
   813 ;;		line 106 in file "FireDetector2.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  L               1   93[COMRAM] unsigned char 
   818 ;;  U               1   92[COMRAM] unsigned char 
   819 ;;  L               1   91[COMRAM] unsigned char 
   820 ;;  U               1   90[COMRAM] unsigned char 
   821 ;;  voltage_mv1     3   94[COMRAM] float 
   822 ;;  num_step1       2   88[COMRAM] int 
   823 ;;  people          2   97[COMRAM] unsigned int 
   824 ;; Return value:  Size  Location     Type
   825 ;;		None               void
   826 ;; Registers used:
   827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:       11 bytes
   838 ;; Hardware stack levels required when called:    6
   839 ;; This function calls:
   840 ;;		_Delay_One_Sec
   841 ;;		_Display_Lower_Digit
   842 ;;		_Display_Upper_Digit
   843 ;;		_Do_Flashing
   844 ;;		_Init_ADC
   845 ;;		_Select_ADC_Channel
   846 ;;		_Wait_One_Second_With_Beep
   847 ;;		___awtoft
   848 ;;		___ftdiv
   849 ;;		___ftge
   850 ;;		___ftmul
   851 ;;		___lwdiv
   852 ;;		___lwmod
   853 ;;		_get_full_ADC
   854 ;;		_init_IO
   855 ;;		_init_Interrupt
   856 ;;		_init_UART
   857 ;;		_printf
   858 ;; This function is called by:
   859 ;;		Startup code after reset
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text0
   864  001F50                     __ptext0:
   865                           	opt stack 0
   866  001F50                     _main:
   867                           	opt stack 25
   868                           
   869                           ;FireDetector2.c: 108: OSCCON=0x70;
   870                           
   871                           ; BSR set to: 0
   872                           ;incstack = 0
   873  001F50  0E70               	movlw	112
   874  001F52  6ED3               	movwf	4051,c	;volatile
   875                           
   876                           ;FireDetector2.c: 109: RBPU = 0;
   877  001F54  9EF1               	bcf	intcon2,7,c	;volatile
   878                           
   879                           ;FireDetector2.c: 110: init_IO();
   880  001F56  EC7B  F016         	call	_init_IO	;wreg free
   881                           
   882                           ;FireDetector2.c: 111: Init_ADC();
   883  001F5A  ECB9  F016         	call	_Init_ADC	;wreg free
   884                           
   885                           ;FireDetector2.c: 112: init_UART();
   886  001F5E  EC86  F016         	call	_init_UART	;wreg free
   887                           
   888                           ;FireDetector2.c: 113: init_Interrupt();
   889  001F62  ECB4  F016         	call	_init_Interrupt	;wreg free
   890                           
   891                           ;FireDetector2.c: 115: unsigned int people = 0 ;
   892  001F66  0E00               	movlw	0
   893  001F68  6E63               	movwf	main@people+1,c
   894  001F6A  0E00               	movlw	0
   895  001F6C  6E62               	movwf	main@people,c
   896  001F6E  D000               	goto	l3829
   897  001F70                     l3829:
   898                           
   899                           ;FireDetector2.c: 119: Select_ADC_Channel(0);
   900  001F70  0E00               	movlw	0
   901  001F72  ECA9  F016         	call	_Select_ADC_Channel
   902                           
   903                           ;FireDetector2.c: 120: int num_step1 = get_full_ADC();
   904  001F76  EC2B  F016         	call	_get_full_ADC	;wreg free
   905  001F7A  C00F  F059         	movff	?_get_full_ADC,main@num_step1
   906  001F7E  C010  F05A         	movff	?_get_full_ADC+1,main@num_step1+1
   907                           
   908                           ;FireDetector2.c: 121: float voltage_mv1 = (num_step1 * 4.0)/1000;
   909  001F82  0E00               	movlw	0
   910  001F84  6E26               	movwf	___ftmul@f2,c
   911  001F86  0E80               	movlw	128
   912  001F88  6E27               	movwf	___ftmul@f2+1,c
   913  001F8A  0E40               	movlw	64
   914  001F8C  6E28               	movwf	___ftmul@f2+2,c
   915  001F8E  C059  F017         	movff	main@num_step1,___awtoft@c
   916  001F92  C05A  F018         	movff	main@num_step1+1,___awtoft@c+1
   917  001F96  ECCA  F015         	call	___awtoft	;wreg free
   918  001F9A  C017  F023         	movff	?___awtoft,___ftmul@f1
   919  001F9E  C018  F024         	movff	?___awtoft+1,___ftmul@f1+1
   920  001FA2  C019  F025         	movff	?___awtoft+2,___ftmul@f1+2
   921  001FA6  EC71  F011         	call	___ftmul	;wreg free
   922  001FAA  C023  F032         	movff	?___ftmul,___ftdiv@f1
   923  001FAE  C024  F033         	movff	?___ftmul+1,___ftdiv@f1+1
   924  001FB2  C025  F034         	movff	?___ftmul+2,___ftdiv@f1+2
   925  001FB6  0E00               	movlw	0
   926  001FB8  6E35               	movwf	___ftdiv@f2,c
   927  001FBA  0E7A               	movlw	122
   928  001FBC  6E36               	movwf	___ftdiv@f2+1,c
   929  001FBE  0E44               	movlw	68
   930  001FC0  6E37               	movwf	___ftdiv@f2+2,c
   931  001FC2  EC60  F012         	call	___ftdiv	;wreg free
   932  001FC6  C032  F05F         	movff	?___ftdiv,main@voltage_mv1
   933  001FCA  C033  F060         	movff	?___ftdiv+1,main@voltage_mv1+1
   934  001FCE  C034  F061         	movff	?___ftdiv+2,main@voltage_mv1+2
   935                           
   936                           ;FireDetector2.c: 131: PORTAbits.RA5 = 1;
   937  001FD2  8A80               	bsf	3968,5,c	;volatile
   938                           
   939                           ;FireDetector2.c: 132: PORTCbits.RC2 = 1;
   940  001FD4  8482               	bsf	3970,2,c	;volatile
   941                           
   942                           ;FireDetector2.c: 133: if(voltage_mv1 < 1.1){
   943  001FD6  C05F  F00F         	movff	main@voltage_mv1,___ftge@ff1
   944  001FDA  C060  F010         	movff	main@voltage_mv1+1,___ftge@ff1+1
   945  001FDE  C061  F011         	movff	main@voltage_mv1+2,___ftge@ff1+2
   946  001FE2  0ECD               	movlw	205
   947  001FE4  6E12               	movwf	___ftge@ff2,c
   948  001FE6  0E8C               	movlw	140
   949  001FE8  6E13               	movwf	___ftge@ff2+1,c
   950  001FEA  0E3F               	movlw	63
   951  001FEC  6E14               	movwf	___ftge@ff2+2,c
   952  001FEE  EC7F  F013         	call	___ftge	;wreg free
   953  001FF2  B0D8               	btfsc	status,0,c
   954  001FF4  D008               	goto	l125
   955                           
   956                           ;FireDetector2.c: 135: PORTDbits.RD7 = 1;
   957  001FF6  8E83               	bsf	3971,7,c	;volatile
   958                           
   959                           ;FireDetector2.c: 136: Wait_One_Second_With_Beep();
   960  001FF8  EC90  F016         	call	_Wait_One_Second_With_Beep	;wreg free
   961                           
   962                           ;FireDetector2.c: 137: PORTDbits.RD7 = 0;
   963  001FFC  9E83               	bcf	3971,7,c	;volatile
   964                           
   965                           ;FireDetector2.c: 138: Wait_One_Second_With_Beep();
   966  001FFE  EC90  F016         	call	_Wait_One_Second_With_Beep	;wreg free
   967                           
   968                           ;FireDetector2.c: 139: PORTAbits.RA5 = 1;
   969  002002  8A80               	bsf	3968,5,c	;volatile
   970                           
   971                           ;FireDetector2.c: 140: }
   972  002004  D002               	goto	l126
   973  002006                     l125:
   974                           
   975                           ;FireDetector2.c: 141: else{
   976                           ;FireDetector2.c: 142: PORTAbits.RA5 = 0;
   977  002006  9A80               	bcf	3968,5,c	;volatile
   978                           
   979                           ;FireDetector2.c: 143: PORTDbits.RD7 = 0;
   980  002008  9E83               	bcf	3971,7,c	;volatile
   981  00200A                     l126:
   982                           
   983                           ;FireDetector2.c: 144: }
   984                           ;FireDetector2.c: 146: if(PORTBbits.RB1 == 0){
   985  00200A  B281               	btfsc	3969,1,c	;volatile
   986  00200C  D003               	goto	l3851
   987                           
   988                           ;FireDetector2.c: 147: people+=1;
   989  00200E  4A62               	infsnz	main@people,f,c
   990  002010  2A63               	incf	main@people+1,f,c
   991  002012  D000               	goto	l3851
   992  002014                     l3851:
   993                           
   994                           ;FireDetector2.c: 148: }
   995                           ;FireDetector2.c: 150: if(PORTBbits.RB2 == 0){
   996  002014  B481               	btfsc	3969,2,c	;volatile
   997  002016  D004               	goto	l3855
   998                           
   999                           ;FireDetector2.c: 151: people-=1;
  1000  002018  0662               	decf	main@people,f,c
  1001  00201A  A0D8               	btfss	status,0,c
  1002  00201C  0663               	decf	main@people+1,f,c
  1003  00201E  D000               	goto	l3855
  1004  002020                     l3855:
  1005                           
  1006                           ;FireDetector2.c: 152: }
  1007                           ;FireDetector2.c: 155: if(Manual_Alarm == 1){
  1008  002020  0100               	movlb	0	; () banked
  1009  002022  0597               	decf	_Manual_Alarm& (0+255),w,b
  1010  002024  A4D8               	btfss	status,2,c
  1011  002026  D007               	goto	l3863
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;FireDetector2.c: 157: Manual_Alarm = 0;
  1015  002028  0E00               	movlw	0
  1016  00202A  0100               	movlb	0	; () banked
  1017  00202C  6F97               	movwf	_Manual_Alarm& (0+255),b
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;FireDetector2.c: 158: Do_Flashing();
  1021  00202E  EC00  F016         	call	_Do_Flashing	;wreg free
  1022                           
  1023                           ;FireDetector2.c: 160: PORTAbits.RA5 = 1;
  1024  002032  8A80               	bsf	3968,5,c	;volatile
  1025  002034  D000               	goto	l3863
  1026  002036                     l3863:
  1027                           
  1028                           ;FireDetector2.c: 164: }
  1029                           ;FireDetector2.c: 166: if(people <= 9)
  1030  002036  5063               	movf	main@people+1,w,c
  1031  002038  E123               	bnz	l3871
  1032  00203A  0E0A               	movlw	10
  1033  00203C  5C62               	subwf	main@people,w,c
  1034  00203E  B0D8               	btfsc	status,0,c
  1035  002040  D01F               	goto	l3871
  1036                           
  1037                           ;FireDetector2.c: 167: {
  1038                           ;FireDetector2.c: 168: char U = people/10;
  1039  002042  C062  F00F         	movff	main@people,___lwdiv@dividend
  1040  002046  C063  F010         	movff	main@people+1,___lwdiv@dividend+1
  1041  00204A  0E00               	movlw	0
  1042  00204C  6E12               	movwf	___lwdiv@divisor+1,c
  1043  00204E  0E0A               	movlw	10
  1044  002050  6E11               	movwf	___lwdiv@divisor,c
  1045  002052  EC2A  F015         	call	___lwdiv	;wreg free
  1046  002056  500F               	movf	?___lwdiv,w,c
  1047  002058  6E5B               	movwf	main@U,c
  1048                           
  1049                           ;FireDetector2.c: 169: char L = people%10;
  1050  00205A  C062  F00F         	movff	main@people,___lwmod@dividend
  1051  00205E  C063  F010         	movff	main@people+1,___lwmod@dividend+1
  1052  002062  0E00               	movlw	0
  1053  002064  6E12               	movwf	___lwmod@divisor+1,c
  1054  002066  0E0A               	movlw	10
  1055  002068  6E11               	movwf	___lwmod@divisor,c
  1056  00206A  EC82  F015         	call	___lwmod	;wreg free
  1057  00206E  500F               	movf	?___lwmod,w,c
  1058  002070  6E5C               	movwf	main@L,c
  1059                           
  1060                           ;FireDetector2.c: 170: Display_Upper_Digit(U);
  1061  002072  505B               	movf	main@U,w,c
  1062  002074  EC58  F015         	call	_Display_Upper_Digit
  1063                           
  1064                           ;FireDetector2.c: 171: Display_Lower_Digit(L);
  1065  002078  505C               	movf	main@L,w,c
  1066  00207A  EC6F  F016         	call	_Display_Lower_Digit
  1067                           
  1068                           ;FireDetector2.c: 173: }
  1069  00207E  D013               	goto	l3883
  1070  002080                     l3871:
  1071                           
  1072                           ;FireDetector2.c: 174: else if (people > 9)
  1073  002080  5063               	movf	main@people+1,w,c
  1074  002082  E104               	bnz	u4610
  1075  002084  0E0A               	movlw	10
  1076  002086  5C62               	subwf	main@people,w,c
  1077  002088  A0D8               	btfss	status,0,c
  1078  00208A  D00D               	goto	l3883
  1079  00208C                     u4610:
  1080                           
  1081                           ;FireDetector2.c: 175: {
  1082                           ;FireDetector2.c: 177: Wait_One_Second_With_Beep();
  1083  00208C  EC90  F016         	call	_Wait_One_Second_With_Beep	;wreg free
  1084                           
  1085                           ;FireDetector2.c: 179: char U = 9;
  1086  002090  0E09               	movlw	9
  1087  002092  6E5D               	movwf	main@U_675,c
  1088                           
  1089                           ;FireDetector2.c: 180: char L = 9;
  1090  002094  0E09               	movlw	9
  1091  002096  6E5E               	movwf	main@L_676,c
  1092                           
  1093                           ;FireDetector2.c: 181: Display_Upper_Digit(U);
  1094  002098  505D               	movf	main@U_675,w,c
  1095  00209A  EC58  F015         	call	_Display_Upper_Digit
  1096                           
  1097                           ;FireDetector2.c: 182: Display_Lower_Digit(L);
  1098  00209E  505E               	movf	main@L_676,w,c
  1099  0020A0  EC6F  F016         	call	_Display_Lower_Digit
  1100  0020A4  D000               	goto	l3883
  1101  0020A6                     l3883:
  1102                           
  1103                           ;FireDetector2.c: 184: }
  1104                           ;FireDetector2.c: 186: printf ("Flame Sensor Voltage = %f F \r\n", voltage_mv1);
  1105  0020A6  0E77               	movlw	low STR_1
  1106  0020A8  6E4E               	movwf	printf@f,c
  1107  0020AA  0E10               	movlw	high STR_1
  1108  0020AC  6E4F               	movwf	printf@f+1,c
  1109  0020AE  C05F  F050         	movff	main@voltage_mv1,?_printf+2
  1110  0020B2  C060  F051         	movff	main@voltage_mv1+1,?_printf+3
  1111  0020B6  C061  F052         	movff	main@voltage_mv1+2,?_printf+4
  1112  0020BA  EC4C  F008         	call	_printf	;wreg free
  1113                           
  1114                           ;FireDetector2.c: 189: Delay_One_Sec();
  1115  0020BE  EC50  F016         	call	_Delay_One_Sec	;wreg free
  1116  0020C2  D756               	goto	l3829
  1117  0020C4  EF0C  F000         	goto	start
  1118  0020C8                     __end_of_main:
  1119                           	opt stack 0
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           intcon2	equ	0xFF1
  1125                           postinc0	equ	0xFEE
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           status	equ	0xFD8
  1129                           
  1130 ;; *************** function _printf *****************
  1131 ;; Defined at:
  1132 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  f               2   77[COMRAM] PTR const unsigned char 
  1135 ;;		 -> STR_1(31), 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  tmpval          4   15[BANK0 ] struct .
  1138 ;;  val             4    9[BANK0 ] unsigned long 
  1139 ;;  fval            3   19[BANK0 ] unsigned long 
  1140 ;;  cp              3    0        PTR const unsigned char 
  1141 ;;  exp             2   13[BANK0 ] int 
  1142 ;;  prec            2    7[BANK0 ] int 
  1143 ;;  flag            2    5[BANK0 ] unsigned short 
  1144 ;;  ap              2    3[BANK0 ] PTR void [1]
  1145 ;;		 -> ?_printf(2), 
  1146 ;;  len             2    0        unsigned int 
  1147 ;;  width           2    0        int 
  1148 ;;  c               1   22[BANK0 ] char 
  1149 ;;  d               1    0        unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  2   77[COMRAM] int 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1159 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Totals:        11      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;Total ram usage:       34 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    5
  1166 ;; This function calls:
  1167 ;;		___awdiv
  1168 ;;		___ftadd
  1169 ;;		___ftge
  1170 ;;		___ftmul
  1171 ;;		___ftneg
  1172 ;;		___ftsub
  1173 ;;		___fttol
  1174 ;;		___lldiv
  1175 ;;		___llmod
  1176 ;;		___lltoft
  1177 ;;		___wmul
  1178 ;;		__div_to_l_
  1179 ;;		__tdiv_to_l_
  1180 ;;		_fround
  1181 ;;		_putch
  1182 ;;		_scale
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text1
  1189  001098                     __ptext1:
  1190                           	opt stack 0
  1191  001098                     _printf:
  1192                           	opt stack 25
  1193                           
  1194                           ;doprnt.c: 466: va_list ap;
  1195                           ;doprnt.c: 499: signed char c;
  1196                           ;doprnt.c: 501: int width;
  1197                           ;doprnt.c: 504: int prec;
  1198                           ;doprnt.c: 508: unsigned short flag;
  1199                           ;doprnt.c: 515: char d;
  1200                           ;doprnt.c: 516: double fval;
  1201                           ;doprnt.c: 517: int exp;
  1202                           ;doprnt.c: 523: union {
  1203                           ;doprnt.c: 524: unsigned long vd;
  1204                           ;doprnt.c: 525: double integ;
  1205                           ;doprnt.c: 526: } tmpval;
  1206                           ;doprnt.c: 528: unsigned long val;
  1207                           ;doprnt.c: 529: unsigned len;
  1208                           ;doprnt.c: 530: const char * cp;
  1209                           ;doprnt.c: 533: *ap = __va_start();
  1210                           
  1211                           ;incstack = 0
  1212  001098  0E50               	movlw	low (?_printf+2)
  1213  00109A  0100               	movlb	0	; () banked
  1214  00109C  6F83               	movwf	printf@ap& (0+255),b
  1215  00109E  0E00               	movlw	high (?_printf+2)
  1216  0010A0  0100               	movlb	0	; () banked
  1217  0010A2  6F84               	movwf	(printf@ap+1)& (0+255),b
  1218                           
  1219                           ;doprnt.c: 536: while(c = *f++) {
  1220  0010A4  D351               	goto	l3719
  1221  0010A6                     l3571:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;doprnt.c: 538: if(c != '%')
  1225  0010A6  0E25               	movlw	37
  1226  0010A8  0100               	movlb	0	; () banked
  1227  0010AA  1996               	xorwf	printf@c& (0+255),w,b
  1228  0010AC  B4D8               	btfsc	status,2,c
  1229  0010AE  D005               	goto	l3575
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;doprnt.c: 540: {
  1233                           ;doprnt.c: 541: (putch(c) );
  1234  0010B0  0100               	movlb	0	; () banked
  1235  0010B2  5196               	movf	printf@c& (0+255),w,b
  1236  0010B4  ECA2  F016         	call	_putch
  1237                           
  1238                           ;doprnt.c: 542: continue;
  1239  0010B8  D347               	goto	l3719
  1240  0010BA                     l3575:
  1241                           
  1242                           ;doprnt.c: 543: }
  1243                           ;doprnt.c: 548: flag = 0;
  1244  0010BA  0E00               	movlw	0
  1245  0010BC  0100               	movlb	0	; () banked
  1246  0010BE  6F86               	movwf	(printf@flag+1)& (0+255),b
  1247  0010C0  0E00               	movlw	0
  1248  0010C2  6F85               	movwf	printf@flag& (0+255),b
  1249                           
  1250                           ;doprnt.c: 635: switch(c = *f++) {
  1251  0010C4  D006               	goto	l3581
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;doprnt.c: 638: goto alldone;
  1255                           
  1256                           ;doprnt.c: 637: case 0:
  1257  0010C6  D34F               	goto	l250
  1258  0010C8                     l3577:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;doprnt.c: 663: flag |= 0x400;
  1262  0010C8  0100               	movlb	0	; () banked
  1263  0010CA  8586               	bsf	(printf@flag+1)& (0+255),2,b
  1264                           
  1265                           ;doprnt.c: 664: break;
  1266  0010CC  D014               	goto	l3583
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;doprnt.c: 813: continue;
  1270                           
  1271                           ;doprnt.c: 802: default:
  1272  0010CE  D33C               	goto	l3719
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;doprnt.c: 822: }
  1276  0010D0  D012               	goto	l3583
  1277  0010D2                     l3581:
  1278                           
  1279                           ; BSR set to: 0
  1280  0010D2  C04E  FFF6         	movff	printf@f,tblptrl
  1281  0010D6  C04F  FFF7         	movff	printf@f+1,tblptrh
  1282  0010DA  4A4E               	infsnz	printf@f,f,c
  1283  0010DC  2A4F               	incf	printf@f+1,f,c
  1284  0010DE                     	if	0	;tblptru may be non-zero
  1285  0010DE                     	endif
  1286  0010DE                     	if	0	;tblptru may be non-zero
  1287  0010DE                     	endif
  1288  0010DE  0008               	tblrd		*
  1289  0010E0  CFF5 F096          	movff	tablat,printf@c
  1290  0010E4  0100               	movlb	0	; () banked
  1291  0010E6  5196               	movf	printf@c& (0+255),w,b
  1292                           
  1293                           ; Switch size 1, requested type "space"
  1294                           ; Number of cases is 2, Range of values is 0 to 102
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte            7     4 (average)
  1298                           ;	Chosen strategy is simple_byte
  1299  0010E8  0A00               	xorlw	0	; case 0
  1300  0010EA  B4D8               	btfsc	status,2,c
  1301  0010EC  D33C               	goto	l250
  1302  0010EE  0A66               	xorlw	102	; case 102
  1303  0010F0  B4D8               	btfsc	status,2,c
  1304  0010F2  D7EA               	goto	l3577
  1305  0010F4  D329               	goto	l3719
  1306  0010F6                     l3583:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;doprnt.c: 825: if(flag & (0x700)) {
  1310  0010F6  0E07               	movlw	7
  1311  0010F8  0100               	movlb	0	; () banked
  1312  0010FA  1586               	andwf	(printf@flag+1)& (0+255),w,b
  1313  0010FC  B4D8               	btfsc	status,2,c
  1314  0010FE  D314               	goto	l3715
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;doprnt.c: 829: prec = 6;
  1318  001100  0E00               	movlw	0
  1319  001102  0100               	movlb	0	; () banked
  1320  001104  6F88               	movwf	(printf@prec+1)& (0+255),b
  1321  001106  0E06               	movlw	6
  1322  001108  6F87               	movwf	printf@prec& (0+255),b
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1326  00110A  C083  FFD9         	movff	printf@ap,fsr2l
  1327  00110E  C084  FFDA         	movff	printf@ap+1,fsr2h
  1328  001112  CFDE F093          	movff	postinc2,printf@fval
  1329  001116  CFDE F094          	movff	postinc2,printf@fval+1
  1330  00111A  CFDD F095          	movff	postdec2,printf@fval+2
  1331                           
  1332                           ; BSR set to: 0
  1333  00111E  0E03               	movlw	3
  1334  001120  0100               	movlb	0	; () banked
  1335  001122  2783               	addwf	printf@ap& (0+255),f,b
  1336  001124  0E00               	movlw	0
  1337  001126  2384               	addwfc	(printf@ap+1)& (0+255),f,b
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;doprnt.c: 831: if(fval < 0.0) {
  1341  001128  0100               	movlb	0	; () banked
  1342  00112A  AF95               	btfss	(printf@fval+2)& (0+255),7,b
  1343  00112C  D012               	goto	l3597
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;doprnt.c: 832: fval = -fval;
  1347  00112E  C093  F00F         	movff	printf@fval,___ftneg@f1
  1348  001132  C094  F010         	movff	printf@fval+1,___ftneg@f1+1
  1349  001136  C095  F011         	movff	printf@fval+2,___ftneg@f1+2
  1350  00113A  EC3E  F016         	call	___ftneg	;wreg free
  1351  00113E  C00F  F093         	movff	?___ftneg,printf@fval
  1352  001142  C010  F094         	movff	?___ftneg+1,printf@fval+1
  1353  001146  C011  F095         	movff	?___ftneg+2,printf@fval+2
  1354                           
  1355                           ;doprnt.c: 833: flag |= 0x03;
  1356  00114A  0E03               	movlw	3
  1357  00114C  0100               	movlb	0	; () banked
  1358  00114E  1385               	iorwf	printf@flag& (0+255),f,b
  1359  001150  D000               	goto	l3597
  1360  001152                     l3597:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;doprnt.c: 834: }
  1364                           ;doprnt.c: 835: exp = 0;
  1365  001152  0E00               	movlw	0
  1366  001154  0100               	movlb	0	; () banked
  1367  001156  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1368  001158  0E00               	movlw	0
  1369  00115A  6F8D               	movwf	printf@exp& (0+255),b
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;doprnt.c: 836: if( fval!=0) {
  1373  00115C  0100               	movlb	0	; () banked
  1374  00115E  5193               	movf	printf@fval& (0+255),w,b
  1375  001160  0100               	movlb	0	; () banked
  1376  001162  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  1377  001164  0100               	movlb	0	; () banked
  1378  001166  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  1379  001168  B4D8               	btfsc	status,2,c
  1380  00116A  D08D               	goto	l3625
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1384  00116C  0E82               	movlw	130
  1385  00116E  6E53               	movwf	??_printf& (0+255),c
  1386  001170  0EFF               	movlw	255
  1387  001172  6E54               	movwf	(??_printf+1)& (0+255),c
  1388  001174  C093  F055         	movff	printf@fval,??_printf+2
  1389  001178  C094  F056         	movff	printf@fval+1,??_printf+3
  1390  00117C  C095  F057         	movff	printf@fval+2,??_printf+4
  1391  001180  C096  F058         	movff	printf@fval+3,??_printf+5
  1392  001184  0E10               	movlw	16
  1393  001186  D005               	goto	u4220
  1394  001188                     u4225:
  1395  001188  90D8               	bcf	status,0,c
  1396  00118A  3258               	rrcf	??_printf+5,f,c
  1397  00118C  3257               	rrcf	??_printf+4,f,c
  1398  00118E  3256               	rrcf	??_printf+3,f,c
  1399  001190  3255               	rrcf	??_printf+2,f,c
  1400  001192                     u4220:
  1401  001192  2EE8               	decfsz	wreg,f,c
  1402  001194  D7F9               	goto	u4225
  1403  001196  5055               	movf	??_printf+2,w,c
  1404  001198  2453               	addwf	??_printf,w,c
  1405  00119A  0100               	movlb	0	; () banked
  1406  00119C  6F8D               	movwf	printf@exp& (0+255),b
  1407  00119E  0E00               	movlw	0
  1408  0011A0  2054               	addwfc	??_printf+1,w,c
  1409  0011A2  0100               	movlb	0	; () banked
  1410  0011A4  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;doprnt.c: 838: exp--;
  1414  0011A6  0100               	movlb	0	; () banked
  1415  0011A8  078D               	decf	printf@exp& (0+255),f,b
  1416  0011AA  A0D8               	btfss	status,0,c
  1417  0011AC  078E               	decf	(printf@exp+1)& (0+255),f,b
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;doprnt.c: 839: exp *= 3;
  1421  0011AE  C08D  F01D         	movff	printf@exp,___wmul@multiplier
  1422  0011B2  C08E  F01E         	movff	printf@exp+1,___wmul@multiplier+1
  1423  0011B6  0E00               	movlw	0
  1424  0011B8  6E20               	movwf	___wmul@multiplicand+1,c
  1425  0011BA  0E03               	movlw	3
  1426  0011BC  6E1F               	movwf	___wmul@multiplicand,c
  1427  0011BE  EC17  F016         	call	___wmul	;wreg free
  1428  0011C2  C01D  F08D         	movff	?___wmul,printf@exp
  1429  0011C6  C01E  F08E         	movff	?___wmul+1,printf@exp+1
  1430                           
  1431                           ;doprnt.c: 840: exp /= 10;
  1432  0011CA  C08D  F015         	movff	printf@exp,___awdiv@dividend
  1433  0011CE  C08E  F016         	movff	printf@exp+1,___awdiv@dividend+1
  1434  0011D2  0E00               	movlw	0
  1435  0011D4  6E18               	movwf	___awdiv@divisor+1,c
  1436  0011D6  0E0A               	movlw	10
  1437  0011D8  6E17               	movwf	___awdiv@divisor,c
  1438  0011DA  EC34  F013         	call	___awdiv	;wreg free
  1439  0011DE  C015  F08D         	movff	?___awdiv,printf@exp
  1440  0011E2  C016  F08E         	movff	?___awdiv+1,printf@exp+1
  1441                           
  1442                           ;doprnt.c: 841: if(exp < 0)
  1443  0011E6  0100               	movlb	0	; () banked
  1444  0011E8  AF8E               	btfss	(printf@exp+1)& (0+255),7,b
  1445  0011EA  D005               	goto	l3613
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;doprnt.c: 842: exp--;
  1449  0011EC  0100               	movlb	0	; () banked
  1450  0011EE  078D               	decf	printf@exp& (0+255),f,b
  1451  0011F0  A0D8               	btfss	status,0,c
  1452  0011F2  078E               	decf	(printf@exp+1)& (0+255),f,b
  1453  0011F4  D000               	goto	l3613
  1454  0011F6                     l3613:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1458  0011F6  0100               	movlb	0	; () banked
  1459  0011F8  518D               	movf	printf@exp& (0+255),w,b
  1460  0011FA  0800               	sublw	0
  1461  0011FC  ECB4  F00B         	call	_scale
  1462  001200  C032  F08F         	movff	?_scale,printf@tmpval
  1463  001204  C033  F090         	movff	?_scale+1,printf@tmpval+1
  1464  001208  C034  F091         	movff	?_scale+2,printf@tmpval+2
  1465                           
  1466                           ;doprnt.c: 847: tmpval.integ *= fval;
  1467  00120C  C08F  F023         	movff	printf@tmpval,___ftmul@f1
  1468  001210  C090  F024         	movff	printf@tmpval+1,___ftmul@f1+1
  1469  001214  C091  F025         	movff	printf@tmpval+2,___ftmul@f1+2
  1470  001218  C093  F026         	movff	printf@fval,___ftmul@f2
  1471  00121C  C094  F027         	movff	printf@fval+1,___ftmul@f2+1
  1472  001220  C095  F028         	movff	printf@fval+2,___ftmul@f2+2
  1473  001224  EC71  F011         	call	___ftmul	;wreg free
  1474  001228  C023  F08F         	movff	?___ftmul,printf@tmpval
  1475  00122C  C024  F090         	movff	?___ftmul+1,printf@tmpval+1
  1476  001230  C025  F091         	movff	?___ftmul+2,printf@tmpval+2
  1477                           
  1478                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1479  001234  C08F  F00F         	movff	printf@tmpval,___ftge@ff1
  1480  001238  C090  F010         	movff	printf@tmpval+1,___ftge@ff1+1
  1481  00123C  C091  F011         	movff	printf@tmpval+2,___ftge@ff1+2
  1482  001240  0E00               	movlw	0
  1483  001242  6E12               	movwf	___ftge@ff2,c
  1484  001244  0E80               	movlw	128
  1485  001246  6E13               	movwf	___ftge@ff2+1,c
  1486  001248  0E3F               	movlw	63
  1487  00124A  6E14               	movwf	___ftge@ff2+2,c
  1488  00124C  EC7F  F013         	call	___ftge	;wreg free
  1489  001250  B0D8               	btfsc	status,0,c
  1490  001252  D005               	goto	l3621
  1491                           
  1492                           ;doprnt.c: 849: exp--;
  1493  001254  0100               	movlb	0	; () banked
  1494  001256  078D               	decf	printf@exp& (0+255),f,b
  1495  001258  A0D8               	btfss	status,0,c
  1496  00125A  078E               	decf	(printf@exp+1)& (0+255),f,b
  1497  00125C  D014               	goto	l3625
  1498  00125E                     l3621:
  1499                           
  1500                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1501  00125E  C08F  F00F         	movff	printf@tmpval,___ftge@ff1
  1502  001262  C090  F010         	movff	printf@tmpval+1,___ftge@ff1+1
  1503  001266  C091  F011         	movff	printf@tmpval+2,___ftge@ff1+2
  1504  00126A  0E00               	movlw	0
  1505  00126C  6E12               	movwf	___ftge@ff2,c
  1506  00126E  0E20               	movlw	32
  1507  001270  6E13               	movwf	___ftge@ff2+1,c
  1508  001272  0E41               	movlw	65
  1509  001274  6E14               	movwf	___ftge@ff2+2,c
  1510  001276  EC7F  F013         	call	___ftge	;wreg free
  1511  00127A  A0D8               	btfss	status,0,c
  1512  00127C  D004               	goto	l3625
  1513                           
  1514                           ;doprnt.c: 851: exp++;
  1515  00127E  0100               	movlb	0	; () banked
  1516  001280  4B8D               	infsnz	printf@exp& (0+255),f,b
  1517  001282  2B8E               	incf	(printf@exp+1)& (0+255),f,b
  1518                           
  1519                           ; BSR set to: 0
  1520                           
  1521                           ; BSR set to: 0
  1522  001284  D000               	goto	l3625
  1523  001286                     l3625:
  1524                           
  1525                           ;doprnt.c: 852: }
  1526                           ;doprnt.c: 1112: if(prec <= 12)
  1527  001286  0100               	movlb	0	; () banked
  1528  001288  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  1529  00128A  D008               	goto	l3627
  1530  00128C  0100               	movlb	0	; () banked
  1531  00128E  5188               	movf	(printf@prec+1)& (0+255),w,b
  1532  001290  E11E               	bnz	l3629
  1533  001292  0E0D               	movlw	13
  1534  001294  0100               	movlb	0	; () banked
  1535  001296  5D87               	subwf	printf@prec& (0+255),w,b
  1536  001298  B0D8               	btfsc	status,0,c
  1537  00129A  D019               	goto	l3629
  1538  00129C                     l3627:
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;doprnt.c: 1113: fval += fround(prec);
  1542  00129C  C093  F03C         	movff	printf@fval,___ftadd@f1
  1543  0012A0  C094  F03D         	movff	printf@fval+1,___ftadd@f1+1
  1544  0012A4  C095  F03E         	movff	printf@fval+2,___ftadd@f1+2
  1545  0012A8  0100               	movlb	0	; () banked
  1546  0012AA  5187               	movf	printf@prec& (0+255),w,b
  1547  0012AC  ECA4  F00D         	call	_fround
  1548  0012B0  C032  F03F         	movff	?_fround,___ftadd@f2
  1549  0012B4  C033  F040         	movff	?_fround+1,___ftadd@f2+1
  1550  0012B8  C034  F041         	movff	?_fround+2,___ftadd@f2+2
  1551  0012BC  ECC6  F00E         	call	___ftadd	;wreg free
  1552  0012C0  C03C  F093         	movff	?___ftadd,printf@fval
  1553  0012C4  C03D  F094         	movff	?___ftadd+1,printf@fval+1
  1554  0012C8  C03E  F095         	movff	?___ftadd+2,printf@fval+2
  1555  0012CC  D000               	goto	l3629
  1556  0012CE                     l3629:
  1557                           
  1558                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1559  0012CE  0100               	movlb	0	; () banked
  1560  0012D0  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1561  0012D2  D008               	goto	l3631
  1562  0012D4  0100               	movlb	0	; () banked
  1563  0012D6  518E               	movf	(printf@exp+1)& (0+255),w,b
  1564  0012D8  E128               	bnz	l3637
  1565  0012DA  0E0A               	movlw	10
  1566  0012DC  0100               	movlb	0	; () banked
  1567  0012DE  5D8D               	subwf	printf@exp& (0+255),w,b
  1568  0012E0  B0D8               	btfsc	status,0,c
  1569  0012E2  D023               	goto	l3637
  1570  0012E4                     l3631:
  1571                           
  1572                           ; BSR set to: 0
  1573  0012E4  0100               	movlb	0	; () banked
  1574  0012E6  5193               	movf	printf@fval& (0+255),w,b
  1575  0012E8  0100               	movlb	0	; () banked
  1576  0012EA  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  1577  0012EC  0100               	movlb	0	; () banked
  1578  0012EE  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  1579  0012F0  B4D8               	btfsc	status,2,c
  1580  0012F2  D077               	goto	l3651
  1581                           
  1582                           ; BSR set to: 0
  1583  0012F4  C093  F039         	movff	printf@fval,___fttol@f1
  1584  0012F8  C094  F03A         	movff	printf@fval+1,___fttol@f1+1
  1585  0012FC  C095  F03B         	movff	printf@fval+2,___fttol@f1+2
  1586  001300  ECED  F011         	call	___fttol	;wreg free
  1587  001304  5039               	movf	?___fttol,w,c
  1588  001306  103A               	iorwf	?___fttol+1,w,c
  1589  001308  103B               	iorwf	?___fttol+2,w,c
  1590  00130A  103C               	iorwf	?___fttol+3,w,c
  1591  00130C  A4D8               	btfss	status,2,c
  1592  00130E  D069               	goto	l3651
  1593  001310  0100               	movlb	0	; () banked
  1594  001312  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1595  001314  D066               	goto	l3651
  1596  001316  0100               	movlb	0	; () banked
  1597  001318  518E               	movf	(printf@exp+1)& (0+255),w,b
  1598  00131A  E107               	bnz	l3637
  1599  00131C  0E02               	movlw	2
  1600  00131E  0100               	movlb	0	; () banked
  1601  001320  5D8D               	subwf	printf@exp& (0+255),w,b
  1602  001322  B0D8               	btfsc	status,0,c
  1603  001324  D002               	goto	l3637
  1604  001326  D05D               	goto	l3651
  1605  001328  D000               	goto	l3637
  1606  00132A                     l3637:
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1610  00132A  C08F  F00F         	movff	printf@tmpval,___ftge@ff1
  1611  00132E  C090  F010         	movff	printf@tmpval+1,___ftge@ff1+1
  1612  001332  C091  F011         	movff	printf@tmpval+2,___ftge@ff1+2
  1613  001336  0E70               	movlw	112
  1614  001338  6E12               	movwf	___ftge@ff2,c
  1615  00133A  0E89               	movlw	137
  1616  00133C  6E13               	movwf	___ftge@ff2+1,c
  1617  00133E  0E40               	movlw	64
  1618  001340  6E14               	movwf	___ftge@ff2+2,c
  1619  001342  EC7F  F013         	call	___ftge	;wreg free
  1620  001346  B0D8               	btfsc	status,0,c
  1621  001348  D003               	goto	l3641
  1622                           
  1623                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1624  00134A  0100               	movlb	0	; () banked
  1625  00134C  0EF7               	movlw	247
  1626  00134E  D002               	goto	L1
  1627  001350                     l3641:
  1628                           
  1629                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1630  001350  0100               	movlb	0	; () banked
  1631  001352  0EF8               	movlw	248
  1632  001354                     L1:
  1633  001354  278D               	addwf	printf@exp& (0+255),f,b
  1634  001356  0EFF               	movlw	255
  1635  001358  238E               	addwfc	(printf@exp+1)& (0+255),f,b
  1636  00135A  D000               	goto	l3643
  1637  00135C                     l3643:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;doprnt.c: 1124: }
  1641                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1642  00135C  0100               	movlb	0	; () banked
  1643  00135E  518D               	movf	printf@exp& (0+255),w,b
  1644  001360  ECB4  F00B         	call	_scale
  1645  001364  C032  F08F         	movff	?_scale,printf@tmpval
  1646  001368  C033  F090         	movff	?_scale+1,printf@tmpval+1
  1647  00136C  C034  F091         	movff	?_scale+2,printf@tmpval+2
  1648                           
  1649                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1650  001370  D017               	goto	l3647
  1651  001372  C093  F00F         	movff	printf@fval,__div_to_l_@f1
  1652  001376  C094  F010         	movff	printf@fval+1,__div_to_l_@f1+1
  1653  00137A  C095  F011         	movff	printf@fval+2,__div_to_l_@f1+2
  1654  00137E  C08F  F012         	movff	printf@tmpval,__div_to_l_@f2
  1655  001382  C090  F013         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1656  001386  C091  F014         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1657  00138A  ECEC  F010         	call	__div_to_l_	;wreg free
  1658  00138E  C00F  F089         	movff	?__div_to_l_,printf@val
  1659  001392  C010  F08A         	movff	?__div_to_l_+1,printf@val+1
  1660  001396  C011  F08B         	movff	?__div_to_l_+2,printf@val+2
  1661  00139A  C012  F08C         	movff	?__div_to_l_+3,printf@val+3
  1662  00139E  D017               	goto	l3649
  1663  0013A0                     l3647:
  1664  0013A0  C093  F00F         	movff	printf@fval,__tdiv_to_l_@f1
  1665  0013A4  C094  F010         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1666  0013A8  C095  F011         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1667  0013AC  C08F  F012         	movff	printf@tmpval,__tdiv_to_l_@f2
  1668  0013B0  C090  F013         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1669  0013B4  C091  F014         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1670  0013B8  EC64  F010         	call	__tdiv_to_l_	;wreg free
  1671  0013BC  C00F  F089         	movff	?__tdiv_to_l_,printf@val
  1672  0013C0  C010  F08A         	movff	?__tdiv_to_l_+1,printf@val+1
  1673  0013C4  C011  F08B         	movff	?__tdiv_to_l_+2,printf@val+2
  1674  0013C8  C012  F08C         	movff	?__tdiv_to_l_+3,printf@val+3
  1675  0013CC  D000               	goto	l3649
  1676  0013CE                     l3649:
  1677                           
  1678                           ;doprnt.c: 1129: fval = 0.0;
  1679  0013CE  0E00               	movlw	0
  1680  0013D0  0100               	movlb	0	; () banked
  1681  0013D2  6F93               	movwf	printf@fval& (0+255),b
  1682  0013D4  0E00               	movlw	0
  1683  0013D6  0100               	movlb	0	; () banked
  1684  0013D8  6F94               	movwf	(printf@fval+1)& (0+255),b
  1685  0013DA  0E00               	movlw	0
  1686  0013DC  0100               	movlb	0	; () banked
  1687  0013DE  6F95               	movwf	(printf@fval+2)& (0+255),b
  1688                           
  1689                           ;doprnt.c: 1130: } else {
  1690  0013E0  D034               	goto	l3655
  1691  0013E2                     l3651:
  1692                           
  1693                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1694  0013E2  C093  F039         	movff	printf@fval,___fttol@f1
  1695  0013E6  C094  F03A         	movff	printf@fval+1,___fttol@f1+1
  1696  0013EA  C095  F03B         	movff	printf@fval+2,___fttol@f1+2
  1697  0013EE  ECED  F011         	call	___fttol	;wreg free
  1698  0013F2  C039  F089         	movff	?___fttol,printf@val
  1699  0013F6  C03A  F08A         	movff	?___fttol+1,printf@val+1
  1700  0013FA  C03B  F08B         	movff	?___fttol+2,printf@val+2
  1701  0013FE  C03C  F08C         	movff	?___fttol+3,printf@val+3
  1702                           
  1703                           ;doprnt.c: 1132: fval -= (double)val;
  1704  001402  C093  F048         	movff	printf@fval,___ftsub@f1
  1705  001406  C094  F049         	movff	printf@fval+1,___ftsub@f1+1
  1706  00140A  C095  F04A         	movff	printf@fval+2,___ftsub@f1+2
  1707  00140E  C089  F017         	movff	printf@val,___lltoft@c
  1708  001412  C08A  F018         	movff	printf@val+1,___lltoft@c+1
  1709  001416  C08B  F019         	movff	printf@val+2,___lltoft@c+2
  1710  00141A  C08C  F01A         	movff	printf@val+3,___lltoft@c+3
  1711  00141E  ECFA  F014         	call	___lltoft	;wreg free
  1712  001422  C017  F04B         	movff	?___lltoft,___ftsub@f2
  1713  001426  C018  F04C         	movff	?___lltoft+1,___ftsub@f2+1
  1714  00142A  C019  F04D         	movff	?___lltoft+2,___ftsub@f2+2
  1715  00142E  ECA8  F015         	call	___ftsub	;wreg free
  1716  001432  C048  F093         	movff	?___ftsub,printf@fval
  1717  001436  C049  F094         	movff	?___ftsub+1,printf@fval+1
  1718  00143A  C04A  F095         	movff	?___ftsub+2,printf@fval+2
  1719                           
  1720                           ;doprnt.c: 1133: exp = 0;
  1721  00143E  0E00               	movlw	0
  1722  001440  0100               	movlb	0	; () banked
  1723  001442  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1724  001444  0E00               	movlw	0
  1725  001446  6F8D               	movwf	printf@exp& (0+255),b
  1726  001448  D000               	goto	l3655
  1727  00144A                     l3655:
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;doprnt.c: 1134: }
  1731                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1732  00144A  0E01               	movlw	1
  1733  00144C  0100               	movlb	0	; () banked
  1734  00144E  6F96               	movwf	printf@c& (0+255),b
  1735  001450                     l3657:
  1736                           
  1737                           ; BSR set to: 0
  1738  001450  0E0A               	movlw	10
  1739  001452  0100               	movlb	0	; () banked
  1740  001454  1996               	xorwf	printf@c& (0+255),w,b
  1741  001456  B4D8               	btfsc	status,2,c
  1742  001458  D022               	goto	l3669
  1743  00145A  D001               	goto	l3661
  1744                           
  1745                           ; BSR set to: 0
  1746  00145C  D020               	goto	l3669
  1747  00145E                     l3661:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;doprnt.c: 1137: if(val < dpowers[c])
  1751  00145E  0100               	movlb	0	; () banked
  1752  001460  5196               	movf	printf@c& (0+255),w,b
  1753  001462  0D04               	mullw	4
  1754  001464  0E01               	movlw	low _dpowers
  1755  001466  24F3               	addwf	prodl,w,c
  1756  001468  6EF6               	movwf	tblptrl,c
  1757  00146A  0E10               	movlw	high _dpowers
  1758  00146C  20F4               	addwfc	prodh,w,c
  1759  00146E  6EF7               	movwf	tblptrh,c
  1760  001470                     	if	0	;There are less than 3 active tblptr bytes
  1761  001470                     	endif
  1762  001470  0009               	tblrd		*+
  1763  001472  50F5               	movf	tablat,w,c
  1764  001474  0100               	movlb	0	; () banked
  1765  001476  5D89               	subwf	printf@val& (0+255),w,b
  1766  001478  0009               	tblrd		*+
  1767  00147A  50F5               	movf	tablat,w,c
  1768  00147C  0100               	movlb	0	; () banked
  1769  00147E  598A               	subwfb	(printf@val+1)& (0+255),w,b
  1770  001480  0009               	tblrd		*+
  1771  001482  50F5               	movf	tablat,w,c
  1772  001484  0100               	movlb	0	; () banked
  1773  001486  598B               	subwfb	(printf@val+2)& (0+255),w,b
  1774  001488  0009               	tblrd		*+
  1775  00148A  50F5               	movf	tablat,w,c
  1776  00148C  0100               	movlb	0	; () banked
  1777  00148E  598C               	subwfb	(printf@val+3)& (0+255),w,b
  1778  001490  A0D8               	btfss	status,0,c
  1779  001492  D005               	goto	l3669
  1780  001494  D001               	goto	l3665
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;doprnt.c: 1138: break;
  1784  001496  D003               	goto	l3669
  1785  001498                     l3665:
  1786                           
  1787                           ; BSR set to: 0
  1788  001498  0100               	movlb	0	; () banked
  1789  00149A  2B96               	incf	printf@c& (0+255),f,b
  1790  00149C  D7D9               	goto	l3657
  1791  00149E                     l3669:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;doprnt.c: 1175: {
  1795                           ;doprnt.c: 1188: if(flag & 0x03)
  1796  00149E  0E03               	movlw	3
  1797  0014A0  0100               	movlb	0	; () banked
  1798  0014A2  1585               	andwf	printf@flag& (0+255),w,b
  1799  0014A4  6E53               	movwf	??_printf& (0+255),c
  1800  0014A6  0E00               	movlw	0
  1801  0014A8  0100               	movlb	0	; () banked
  1802  0014AA  1586               	andwf	(printf@flag+1)& (0+255),w,b
  1803  0014AC  6E54               	movwf	(??_printf+1)& (0+255),c
  1804  0014AE  5053               	movf	??_printf,w,c
  1805  0014B0  1054               	iorwf	??_printf+1,w,c
  1806  0014B2  B4D8               	btfsc	status,2,c
  1807  0014B4  D04B               	goto	l3679
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;doprnt.c: 1190: (putch('-') );
  1811  0014B6  0E2D               	movlw	45
  1812  0014B8  ECA2  F016         	call	_putch
  1813                           
  1814                           ;doprnt.c: 1195: }
  1815                           ;doprnt.c: 1196: while(c--) {
  1816  0014BC  D047               	goto	l3679
  1817  0014BE                     l3673:
  1818                           
  1819                           ;doprnt.c: 1200: {
  1820                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1821  0014BE  C089  F00F         	movff	printf@val,___lldiv@dividend
  1822  0014C2  C08A  F010         	movff	printf@val+1,___lldiv@dividend+1
  1823  0014C6  C08B  F011         	movff	printf@val+2,___lldiv@dividend+2
  1824  0014CA  C08C  F012         	movff	printf@val+3,___lldiv@dividend+3
  1825  0014CE  0100               	movlb	0	; () banked
  1826  0014D0  5196               	movf	printf@c& (0+255),w,b
  1827  0014D2  0D04               	mullw	4
  1828  0014D4  0E01               	movlw	low _dpowers
  1829  0014D6  24F3               	addwf	prodl,w,c
  1830  0014D8  6EF6               	movwf	tblptrl,c
  1831  0014DA  0E10               	movlw	high _dpowers
  1832  0014DC  20F4               	addwfc	prodh,w,c
  1833  0014DE  6EF7               	movwf	tblptrh,c
  1834  0014E0                     	if	0	;There are less than 3 active tblptr bytes
  1835  0014E0                     	endif
  1836  0014E0  0009               	tblrd		*+
  1837  0014E2  CFF5 F013          	movff	tablat,___lldiv@divisor
  1838  0014E6  0009               	tblrd		*+
  1839  0014E8  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  1840  0014EC  0009               	tblrd		*+
  1841  0014EE  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  1842  0014F2  000A               	tblrd		*-
  1843  0014F4  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  1844  0014F8  ECCA  F013         	call	___lldiv	;wreg free
  1845  0014FC  C00F  F08F         	movff	?___lldiv,printf@tmpval
  1846  001500  C010  F090         	movff	?___lldiv+1,printf@tmpval+1
  1847  001504  C011  F091         	movff	?___lldiv+2,printf@tmpval+2
  1848  001508  C012  F092         	movff	?___lldiv+3,printf@tmpval+3
  1849                           
  1850                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1851  00150C  C08F  F00F         	movff	printf@tmpval,___llmod@dividend
  1852  001510  C090  F010         	movff	printf@tmpval+1,___llmod@dividend+1
  1853  001514  C091  F011         	movff	printf@tmpval+2,___llmod@dividend+2
  1854  001518  C092  F012         	movff	printf@tmpval+3,___llmod@dividend+3
  1855  00151C  0E0A               	movlw	10
  1856  00151E  6E13               	movwf	___llmod@divisor,c
  1857  001520  0E00               	movlw	0
  1858  001522  6E14               	movwf	___llmod@divisor+1,c
  1859  001524  0E00               	movlw	0
  1860  001526  6E15               	movwf	___llmod@divisor+2,c
  1861  001528  0E00               	movlw	0
  1862  00152A  6E16               	movwf	___llmod@divisor+3,c
  1863  00152C  EC8A  F014         	call	___llmod	;wreg free
  1864  001530  C00F  F08F         	movff	?___llmod,printf@tmpval
  1865  001534  C010  F090         	movff	?___llmod+1,printf@tmpval+1
  1866  001538  C011  F091         	movff	?___llmod+2,printf@tmpval+2
  1867  00153C  C012  F092         	movff	?___llmod+3,printf@tmpval+3
  1868                           
  1869                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1870  001540  0100               	movlb	0	; () banked
  1871  001542  518F               	movf	printf@tmpval& (0+255),w,b
  1872  001544  0F30               	addlw	48
  1873  001546  ECA2  F016         	call	_putch
  1874  00154A  D000               	goto	l3679
  1875  00154C                     l3679:
  1876  00154C  0100               	movlb	0	; () banked
  1877  00154E  0796               	decf	printf@c& (0+255),f,b
  1878  001550  0100               	movlb	0	; () banked
  1879  001552  2996               	incf	printf@c& (0+255),w,b
  1880  001554  B4D8               	btfsc	status,2,c
  1881  001556  D00A               	goto	l3685
  1882  001558  D7B2               	goto	l3673
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;doprnt.c: 1204: }
  1886                           ;doprnt.c: 1206: }
  1887                           ;doprnt.c: 1207: while(exp > 0) {
  1888  00155A  D008               	goto	l3685
  1889  00155C                     l3681:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;doprnt.c: 1208: (putch('0') );
  1893  00155C  0E30               	movlw	48
  1894  00155E  ECA2  F016         	call	_putch
  1895                           
  1896                           ;doprnt.c: 1209: exp--;
  1897  001562  0100               	movlb	0	; () banked
  1898  001564  078D               	decf	printf@exp& (0+255),f,b
  1899  001566  A0D8               	btfss	status,0,c
  1900  001568  078E               	decf	(printf@exp+1)& (0+255),f,b
  1901  00156A  D000               	goto	l3685
  1902  00156C                     l3685:
  1903                           
  1904                           ; BSR set to: 0
  1905  00156C  0100               	movlb	0	; () banked
  1906  00156E  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1907  001570  D007               	goto	l3687
  1908  001572  0100               	movlb	0	; () banked
  1909  001574  518E               	movf	(printf@exp+1)& (0+255),w,b
  1910  001576  E1F2               	bnz	l3681
  1911  001578  0100               	movlb	0	; () banked
  1912  00157A  058D               	decf	printf@exp& (0+255),w,b
  1913  00157C  B0D8               	btfsc	status,0,c
  1914  00157E  D7EE               	goto	l3681
  1915  001580                     l3687:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;doprnt.c: 1210: }
  1919                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1920  001580  0100               	movlb	0	; () banked
  1921  001582  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  1922  001584  D00C               	goto	l239
  1923  001586  0100               	movlb	0	; () banked
  1924  001588  5188               	movf	(printf@prec+1)& (0+255),w,b
  1925  00158A  E105               	bnz	u4380
  1926  00158C  0E09               	movlw	9
  1927  00158E  0100               	movlb	0	; () banked
  1928  001590  5D87               	subwf	printf@prec& (0+255),w,b
  1929  001592  A0D8               	btfss	status,0,c
  1930  001594  D004               	goto	l239
  1931  001596                     u4380:
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1935  001596  0E08               	movlw	8
  1936  001598  0100               	movlb	0	; () banked
  1937  00159A  6F96               	movwf	printf@c& (0+255),b
  1938  00159C  D003               	goto	l3691
  1939  00159E                     l239:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;doprnt.c: 1213: else
  1943                           ;doprnt.c: 1214: c = prec;
  1944  00159E  C087  F096         	movff	printf@prec,printf@c
  1945  0015A2  D000               	goto	l3691
  1946  0015A4                     l3691:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;doprnt.c: 1215: prec -= c;
  1950  0015A4  0100               	movlb	0	; () banked
  1951  0015A6  5196               	movf	printf@c& (0+255),w,b
  1952  0015A8  0100               	movlb	0	; () banked
  1953  0015AA  5F87               	subwf	printf@prec& (0+255),f,b
  1954  0015AC  0E00               	movlw	0
  1955  0015AE  0100               	movlb	0	; () banked
  1956  0015B0  BF96               	btfsc	printf@c& (0+255),7,b
  1957  0015B2  0EFF               	movlw	255
  1958  0015B4  0100               	movlb	0	; () banked
  1959  0015B6  5B88               	subwfb	(printf@prec+1)& (0+255),f,b
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;doprnt.c: 1219: if(c)
  1963  0015B8  0100               	movlb	0	; () banked
  1964  0015BA  5196               	movf	printf@c& (0+255),w,b
  1965  0015BC  0100               	movlb	0	; () banked
  1966  0015BE  B4D8               	btfsc	status,2,c
  1967  0015C0  D004               	goto	l3697
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;doprnt.c: 1221: (putch('.') );
  1971  0015C2  0E2E               	movlw	46
  1972  0015C4  ECA2  F016         	call	_putch
  1973  0015C8  D000               	goto	l3697
  1974  0015CA                     l3697:
  1975                           
  1976                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1977  0015CA  0100               	movlb	0	; () banked
  1978  0015CC  5196               	movf	printf@c& (0+255),w,b
  1979  0015CE  ECB4  F00B         	call	_scale
  1980  0015D2  C032  F080         	movff	?_scale,_printf$1580
  1981  0015D6  C033  F081         	movff	?_scale+1,_printf$1580+1
  1982  0015DA  C034  F082         	movff	?_scale+2,_printf$1580+2
  1983                           
  1984                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1985  0015DE  C093  F026         	movff	printf@fval,___ftmul@f2
  1986  0015E2  C094  F027         	movff	printf@fval+1,___ftmul@f2+1
  1987  0015E6  C095  F028         	movff	printf@fval+2,___ftmul@f2+2
  1988  0015EA  C080  F023         	movff	_printf$1580,___ftmul@f1
  1989  0015EE  C081  F024         	movff	_printf$1580+1,___ftmul@f1+1
  1990  0015F2  C082  F025         	movff	_printf$1580+2,___ftmul@f1+2
  1991  0015F6  EC71  F011         	call	___ftmul	;wreg free
  1992  0015FA  C023  F039         	movff	?___ftmul,___fttol@f1
  1993  0015FE  C024  F03A         	movff	?___ftmul+1,___fttol@f1+1
  1994  001602  C025  F03B         	movff	?___ftmul+2,___fttol@f1+2
  1995  001606  ECED  F011         	call	___fttol	;wreg free
  1996  00160A  C039  F089         	movff	?___fttol,printf@val
  1997  00160E  C03A  F08A         	movff	?___fttol+1,printf@val+1
  1998  001612  C03B  F08B         	movff	?___fttol+2,printf@val+2
  1999  001616  C03C  F08C         	movff	?___fttol+3,printf@val+3
  2000                           
  2001                           ;doprnt.c: 1228: while(c--) {
  2002  00161A  D06E               	goto	l3707
  2003  00161C                     l3701:
  2004                           
  2005                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2006  00161C  C089  F00F         	movff	printf@val,___lldiv@dividend
  2007  001620  C08A  F010         	movff	printf@val+1,___lldiv@dividend+1
  2008  001624  C08B  F011         	movff	printf@val+2,___lldiv@dividend+2
  2009  001628  C08C  F012         	movff	printf@val+3,___lldiv@dividend+3
  2010  00162C  0100               	movlb	0	; () banked
  2011  00162E  5196               	movf	printf@c& (0+255),w,b
  2012  001630  0D04               	mullw	4
  2013  001632  0E01               	movlw	low _dpowers
  2014  001634  24F3               	addwf	prodl,w,c
  2015  001636  6EF6               	movwf	tblptrl,c
  2016  001638  0E10               	movlw	high _dpowers
  2017  00163A  20F4               	addwfc	prodh,w,c
  2018  00163C  6EF7               	movwf	tblptrh,c
  2019  00163E                     	if	0	;There are less than 3 active tblptr bytes
  2020  00163E                     	endif
  2021  00163E  0009               	tblrd		*+
  2022  001640  CFF5 F013          	movff	tablat,___lldiv@divisor
  2023  001644  0009               	tblrd		*+
  2024  001646  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  2025  00164A  0009               	tblrd		*+
  2026  00164C  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  2027  001650  000A               	tblrd		*-
  2028  001652  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  2029  001656  ECCA  F013         	call	___lldiv	;wreg free
  2030  00165A  C00F  F08F         	movff	?___lldiv,printf@tmpval
  2031  00165E  C010  F090         	movff	?___lldiv+1,printf@tmpval+1
  2032  001662  C011  F091         	movff	?___lldiv+2,printf@tmpval+2
  2033  001666  C012  F092         	movff	?___lldiv+3,printf@tmpval+3
  2034                           
  2035                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2036  00166A  C08F  F00F         	movff	printf@tmpval,___llmod@dividend
  2037  00166E  C090  F010         	movff	printf@tmpval+1,___llmod@dividend+1
  2038  001672  C091  F011         	movff	printf@tmpval+2,___llmod@dividend+2
  2039  001676  C092  F012         	movff	printf@tmpval+3,___llmod@dividend+3
  2040  00167A  0E0A               	movlw	10
  2041  00167C  6E13               	movwf	___llmod@divisor,c
  2042  00167E  0E00               	movlw	0
  2043  001680  6E14               	movwf	___llmod@divisor+1,c
  2044  001682  0E00               	movlw	0
  2045  001684  6E15               	movwf	___llmod@divisor+2,c
  2046  001686  0E00               	movlw	0
  2047  001688  6E16               	movwf	___llmod@divisor+3,c
  2048  00168A  EC8A  F014         	call	___llmod	;wreg free
  2049  00168E  C00F  F08F         	movff	?___llmod,printf@tmpval
  2050  001692  C010  F090         	movff	?___llmod+1,printf@tmpval+1
  2051  001696  C011  F091         	movff	?___llmod+2,printf@tmpval+2
  2052  00169A  C012  F092         	movff	?___llmod+3,printf@tmpval+3
  2053                           
  2054                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2055  00169E  0100               	movlb	0	; () banked
  2056  0016A0  518F               	movf	printf@tmpval& (0+255),w,b
  2057  0016A2  0F30               	addlw	48
  2058  0016A4  ECA2  F016         	call	_putch
  2059                           
  2060                           ;doprnt.c: 1232: val %= dpowers[c];
  2061  0016A8  C089  F00F         	movff	printf@val,___llmod@dividend
  2062  0016AC  C08A  F010         	movff	printf@val+1,___llmod@dividend+1
  2063  0016B0  C08B  F011         	movff	printf@val+2,___llmod@dividend+2
  2064  0016B4  C08C  F012         	movff	printf@val+3,___llmod@dividend+3
  2065  0016B8  0100               	movlb	0	; () banked
  2066  0016BA  5196               	movf	printf@c& (0+255),w,b
  2067  0016BC  0D04               	mullw	4
  2068  0016BE  0E01               	movlw	low _dpowers
  2069  0016C0  24F3               	addwf	prodl,w,c
  2070  0016C2  6EF6               	movwf	tblptrl,c
  2071  0016C4  0E10               	movlw	high _dpowers
  2072  0016C6  20F4               	addwfc	prodh,w,c
  2073  0016C8  6EF7               	movwf	tblptrh,c
  2074  0016CA                     	if	0	;There are less than 3 active tblptr bytes
  2075  0016CA                     	endif
  2076  0016CA  0009               	tblrd		*+
  2077  0016CC  CFF5 F013          	movff	tablat,___llmod@divisor
  2078  0016D0  0009               	tblrd		*+
  2079  0016D2  CFF5 F014          	movff	tablat,___llmod@divisor+1
  2080  0016D6  0009               	tblrd		*+
  2081  0016D8  CFF5 F015          	movff	tablat,___llmod@divisor+2
  2082  0016DC  000A               	tblrd		*-
  2083  0016DE  CFF5 F016          	movff	tablat,___llmod@divisor+3
  2084  0016E2  EC8A  F014         	call	___llmod	;wreg free
  2085  0016E6  C00F  F089         	movff	?___llmod,printf@val
  2086  0016EA  C010  F08A         	movff	?___llmod+1,printf@val+1
  2087  0016EE  C011  F08B         	movff	?___llmod+2,printf@val+2
  2088  0016F2  C012  F08C         	movff	?___llmod+3,printf@val+3
  2089  0016F6  D000               	goto	l3707
  2090  0016F8                     l3707:
  2091  0016F8  0100               	movlb	0	; () banked
  2092  0016FA  0796               	decf	printf@c& (0+255),f,b
  2093  0016FC  0100               	movlb	0	; () banked
  2094  0016FE  2996               	incf	printf@c& (0+255),w,b
  2095  001700  B4D8               	btfsc	status,2,c
  2096  001702  D00A               	goto	l3713
  2097  001704  D78B               	goto	l3701
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;doprnt.c: 1233: }
  2101                           ;doprnt.c: 1235: while(prec) {
  2102  001706  D008               	goto	l3713
  2103  001708                     l3709:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;doprnt.c: 1236: (putch('0') );
  2107  001708  0E30               	movlw	48
  2108  00170A  ECA2  F016         	call	_putch
  2109                           
  2110                           ;doprnt.c: 1237: prec--;
  2111  00170E  0100               	movlb	0	; () banked
  2112  001710  0787               	decf	printf@prec& (0+255),f,b
  2113  001712  A0D8               	btfss	status,0,c
  2114  001714  0788               	decf	(printf@prec+1)& (0+255),f,b
  2115  001716  D000               	goto	l3713
  2116  001718                     l3713:
  2117                           
  2118                           ; BSR set to: 0
  2119  001718  0100               	movlb	0	; () banked
  2120  00171A  5187               	movf	printf@prec& (0+255),w,b
  2121  00171C  0100               	movlb	0	; () banked
  2122  00171E  1188               	iorwf	(printf@prec+1)& (0+255),w,b
  2123  001720  B4D8               	btfsc	status,2,c
  2124  001722  D012               	goto	l3719
  2125  001724  D7F1               	goto	l3709
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;doprnt.c: 1238: }
  2129                           ;doprnt.c: 1245: continue;
  2130  001726  D010               	goto	l3719
  2131  001728                     l3715:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;doprnt.c: 1246: }
  2135                           ;doprnt.c: 1422: {
  2136                           ;doprnt.c: 1438: if(flag & 0x03)
  2137  001728  0E03               	movlw	3
  2138  00172A  0100               	movlb	0	; () banked
  2139  00172C  1585               	andwf	printf@flag& (0+255),w,b
  2140  00172E  6E53               	movwf	??_printf& (0+255),c
  2141  001730  0E00               	movlw	0
  2142  001732  0100               	movlb	0	; () banked
  2143  001734  1586               	andwf	(printf@flag+1)& (0+255),w,b
  2144  001736  6E54               	movwf	(??_printf+1)& (0+255),c
  2145  001738  5053               	movf	??_printf,w,c
  2146  00173A  1054               	iorwf	??_printf+1,w,c
  2147  00173C  B4D8               	btfsc	status,2,c
  2148  00173E  D004               	goto	l3719
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;doprnt.c: 1439: (putch('-') );
  2152  001740  0E2D               	movlw	45
  2153  001742  ECA2  F016         	call	_putch
  2154  001746  D000               	goto	l3719
  2155  001748                     l3719:
  2156  001748  C04E  FFF6         	movff	printf@f,tblptrl
  2157  00174C  C04F  FFF7         	movff	printf@f+1,tblptrh
  2158  001750  4A4E               	infsnz	printf@f,f,c
  2159  001752  2A4F               	incf	printf@f+1,f,c
  2160  001754                     	if	0	;tblptru may be non-zero
  2161  001754                     	endif
  2162  001754                     	if	0	;tblptru may be non-zero
  2163  001754                     	endif
  2164  001754  0008               	tblrd		*
  2165  001756  CFF5 F096          	movff	tablat,printf@c
  2166  00175A  0100               	movlb	0	; () banked
  2167  00175C  5196               	movf	printf@c& (0+255),w,b
  2168  00175E  B4D8               	btfsc	status,2,c
  2169  001760  D002               	goto	l250
  2170  001762  D4A1               	goto	l3571
  2171                           
  2172                           ; BSR set to: 0
  2173  001764  D000               	goto	l250
  2174  001766                     l250:
  2175                           
  2176                           ; BSR set to: 0
  2177  001766  0012               	return		;funcret
  2178  001768                     __end_of_printf:
  2179                           	opt stack 0
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           prodh	equ	0xFF4
  2185                           prodl	equ	0xFF3
  2186                           intcon2	equ	0xFF1
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           postdec1	equ	0xFE5
  2190                           fsr1l	equ	0xFE1
  2191                           postinc2	equ	0xFDE
  2192                           postdec2	equ	0xFDD
  2193                           fsr2h	equ	0xFDA
  2194                           fsr2l	equ	0xFD9
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _scale *****************
  2198 ;; Defined at:
  2199 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  scl             1    wreg     char 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  scl             1   55[COMRAM] char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  3   49[COMRAM] char 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2213 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;Total ram usage:        7 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    4
  2220 ;; This function calls:
  2221 ;;		___awdiv
  2222 ;;		___awmod
  2223 ;;		___ftmul
  2224 ;;		___wmul
  2225 ;; This function is called by:
  2226 ;;		_printf
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text2
  2231  001768                     __ptext2:
  2232                           	opt stack 0
  2233  001768                     _scale:
  2234                           	opt stack 25
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;incstack = 0
  2238                           ;scale@scl stored from wreg
  2239  001768  6E38               	movwf	scale@scl,c
  2240                           
  2241                           ;doprnt.c: 428: if(scl < 0) {
  2242  00176A  AE38               	btfss	scale@scl,7,c
  2243  00176C  D0EF               	goto	l3257
  2244                           
  2245                           ;doprnt.c: 429: scl = -scl;
  2246  00176E  6C38               	negf	scale@scl,c
  2247                           
  2248                           ;doprnt.c: 430: if(scl>=110)
  2249  001770  5038               	movf	scale@scl,w,c
  2250  001772  0A80               	xorlw	128
  2251  001774  0F12               	addlw	-238
  2252  001776  A0D8               	btfss	status,0,c
  2253  001778  D08D               	goto	l3247
  2254                           
  2255                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2256  00177A  0E00               	movlw	0
  2257  00177C  6E20               	movwf	___wmul@multiplicand+1,c
  2258  00177E  0E03               	movlw	3
  2259  001780  6E1F               	movwf	___wmul@multiplicand,c
  2260  001782  0E00               	movlw	0
  2261  001784  6E18               	movwf	___awdiv@divisor+1,c
  2262  001786  0E0A               	movlw	10
  2263  001788  6E17               	movwf	___awdiv@divisor,c
  2264  00178A  0E00               	movlw	0
  2265  00178C  6E12               	movwf	___awmod@divisor+1,c
  2266  00178E  0E64               	movlw	100
  2267  001790  6E11               	movwf	___awmod@divisor,c
  2268  001792  5038               	movf	scale@scl,w,c
  2269  001794  6E0F               	movwf	___awmod@dividend,c
  2270  001796  6A10               	clrf	___awmod@dividend+1,c
  2271  001798  BE0F               	btfsc	___awmod@dividend,7,c
  2272  00179A  0610               	decf	___awmod@dividend+1,f,c
  2273  00179C  EC10  F014         	call	___awmod	;wreg free
  2274  0017A0  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2275  0017A4  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2276  0017A8  EC34  F013         	call	___awdiv	;wreg free
  2277  0017AC  0E09               	movlw	9
  2278  0017AE  2415               	addwf	?___awdiv,w,c
  2279  0017B0  6E1D               	movwf	___wmul@multiplier,c
  2280  0017B2  0E00               	movlw	0
  2281  0017B4  2016               	addwfc	?___awdiv+1,w,c
  2282  0017B6  6E1E               	movwf	___wmul@multiplier+1,c
  2283  0017B8  EC17  F016         	call	___wmul	;wreg free
  2284  0017BC  0E29               	movlw	low __npowers_
  2285  0017BE  241D               	addwf	?___wmul,w,c
  2286  0017C0  6EF6               	movwf	tblptrl,c
  2287  0017C2  0E10               	movlw	high __npowers_
  2288  0017C4  201E               	addwfc	?___wmul+1,w,c
  2289  0017C6  6EF7               	movwf	tblptrh,c
  2290  0017C8                     	if	0	;There are less than 3 active tblptr bytes
  2291  0017C8                     	endif
  2292  0017C8  0009               	tblrd		*+
  2293  0017CA  CFF5 F026          	movff	tablat,___ftmul@f2
  2294  0017CE  0009               	tblrd		*+
  2295  0017D0  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2296  0017D4  000A               	tblrd		*-
  2297  0017D6  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2298  0017DA  0E00               	movlw	0
  2299  0017DC  6E18               	movwf	___awdiv@divisor+1,c
  2300  0017DE  0E64               	movlw	100
  2301  0017E0  6E17               	movwf	___awdiv@divisor,c
  2302  0017E2  5038               	movf	scale@scl,w,c
  2303  0017E4  6E15               	movwf	___awdiv@dividend,c
  2304  0017E6  6A16               	clrf	___awdiv@dividend+1,c
  2305  0017E8  BE15               	btfsc	___awdiv@dividend,7,c
  2306  0017EA  0616               	decf	___awdiv@dividend+1,f,c
  2307  0017EC  EC34  F013         	call	___awdiv	;wreg free
  2308  0017F0  0E12               	movlw	18
  2309  0017F2  2415               	addwf	?___awdiv,w,c
  2310  0017F4  6E1D               	movwf	___wmul@multiplier,c
  2311  0017F6  0E00               	movlw	0
  2312  0017F8  2016               	addwfc	?___awdiv+1,w,c
  2313  0017FA  6E1E               	movwf	___wmul@multiplier+1,c
  2314  0017FC  0E00               	movlw	0
  2315  0017FE  6E20               	movwf	___wmul@multiplicand+1,c
  2316  001800  0E03               	movlw	3
  2317  001802  6E1F               	movwf	___wmul@multiplicand,c
  2318  001804  EC17  F016         	call	___wmul	;wreg free
  2319  001808  0E29               	movlw	low __npowers_
  2320  00180A  241D               	addwf	?___wmul,w,c
  2321  00180C  6EF6               	movwf	tblptrl,c
  2322  00180E  0E10               	movlw	high __npowers_
  2323  001810  201E               	addwfc	?___wmul+1,w,c
  2324  001812  6EF7               	movwf	tblptrh,c
  2325  001814                     	if	0	;There are less than 3 active tblptr bytes
  2326  001814                     	endif
  2327  001814  0009               	tblrd		*+
  2328  001816  CFF5 F023          	movff	tablat,___ftmul@f1
  2329  00181A  0009               	tblrd		*+
  2330  00181C  CFF5 F024          	movff	tablat,___ftmul@f1+1
  2331  001820  000A               	tblrd		*-
  2332  001822  CFF5 F025          	movff	tablat,___ftmul@f1+2
  2333  001826  EC71  F011         	call	___ftmul	;wreg free
  2334  00182A  C023  F035         	movff	?___ftmul,_scale$1579
  2335  00182E  C024  F036         	movff	?___ftmul+1,_scale$1579+1
  2336  001832  C025  F037         	movff	?___ftmul+2,_scale$1579+2
  2337                           
  2338                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2339  001836  C035  F023         	movff	_scale$1579,___ftmul@f1
  2340  00183A  C036  F024         	movff	_scale$1579+1,___ftmul@f1+1
  2341  00183E  C037  F025         	movff	_scale$1579+2,___ftmul@f1+2
  2342  001842  0E00               	movlw	0
  2343  001844  6E20               	movwf	___wmul@multiplicand+1,c
  2344  001846  0E03               	movlw	3
  2345  001848  6E1F               	movwf	___wmul@multiplicand,c
  2346  00184A  0E00               	movlw	0
  2347  00184C  6E12               	movwf	___awmod@divisor+1,c
  2348  00184E  0E0A               	movlw	10
  2349  001850  6E11               	movwf	___awmod@divisor,c
  2350  001852  5038               	movf	scale@scl,w,c
  2351  001854  6E0F               	movwf	___awmod@dividend,c
  2352  001856  6A10               	clrf	___awmod@dividend+1,c
  2353  001858  BE0F               	btfsc	___awmod@dividend,7,c
  2354  00185A  0610               	decf	___awmod@dividend+1,f,c
  2355  00185C  EC10  F014         	call	___awmod	;wreg free
  2356  001860  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  2357  001864  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  2358  001868  EC17  F016         	call	___wmul	;wreg free
  2359  00186C  0E29               	movlw	low __npowers_
  2360  00186E  241D               	addwf	?___wmul,w,c
  2361  001870  6EF6               	movwf	tblptrl,c
  2362  001872  0E10               	movlw	high __npowers_
  2363  001874  201E               	addwfc	?___wmul+1,w,c
  2364  001876  6EF7               	movwf	tblptrh,c
  2365  001878                     	if	0	;There are less than 3 active tblptr bytes
  2366  001878                     	endif
  2367  001878  0009               	tblrd		*+
  2368  00187A  CFF5 F026          	movff	tablat,___ftmul@f2
  2369  00187E  0009               	tblrd		*+
  2370  001880  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2371  001884  000A               	tblrd		*-
  2372  001886  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2373  00188A  EC71  F011         	call	___ftmul	;wreg free
  2374  00188E  D141               	goto	L5
  2375  001890  D15A               	goto	l194
  2376  001892  D054               	goto	l3253
  2377  001894                     l3247:
  2378                           
  2379                           ;doprnt.c: 432: else if(scl > 10)
  2380  001894  5038               	movf	scale@scl,w,c
  2381  001896  0A80               	xorlw	128
  2382  001898  0F75               	addlw	-139
  2383  00189A  A0D8               	btfss	status,0,c
  2384  00189C  D04F               	goto	l3253
  2385                           
  2386                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2387  00189E  0E00               	movlw	0
  2388  0018A0  6E18               	movwf	___awdiv@divisor+1,c
  2389  0018A2  0E0A               	movlw	10
  2390  0018A4  6E17               	movwf	___awdiv@divisor,c
  2391  0018A6  5038               	movf	scale@scl,w,c
  2392  0018A8  6E15               	movwf	___awdiv@dividend,c
  2393  0018AA  6A16               	clrf	___awdiv@dividend+1,c
  2394  0018AC  BE15               	btfsc	___awdiv@dividend,7,c
  2395  0018AE  0616               	decf	___awdiv@dividend+1,f,c
  2396  0018B0  EC34  F013         	call	___awdiv	;wreg free
  2397  0018B4  0E09               	movlw	9
  2398  0018B6  2415               	addwf	?___awdiv,w,c
  2399  0018B8  6E1D               	movwf	___wmul@multiplier,c
  2400  0018BA  0E00               	movlw	0
  2401  0018BC  2016               	addwfc	?___awdiv+1,w,c
  2402  0018BE  6E1E               	movwf	___wmul@multiplier+1,c
  2403  0018C0  0E00               	movlw	0
  2404  0018C2  6E20               	movwf	___wmul@multiplicand+1,c
  2405  0018C4  0E03               	movlw	3
  2406  0018C6  6E1F               	movwf	___wmul@multiplicand,c
  2407  0018C8  EC17  F016         	call	___wmul	;wreg free
  2408  0018CC  0E29               	movlw	low __npowers_
  2409  0018CE  241D               	addwf	?___wmul,w,c
  2410  0018D0  6EF6               	movwf	tblptrl,c
  2411  0018D2  0E10               	movlw	high __npowers_
  2412  0018D4  201E               	addwfc	?___wmul+1,w,c
  2413  0018D6  6EF7               	movwf	tblptrh,c
  2414  0018D8                     	if	0	;There are less than 3 active tblptr bytes
  2415  0018D8                     	endif
  2416  0018D8  0009               	tblrd		*+
  2417  0018DA  CFF5 F023          	movff	tablat,___ftmul@f1
  2418  0018DE  0009               	tblrd		*+
  2419  0018E0  CFF5 F024          	movff	tablat,___ftmul@f1+1
  2420  0018E4  000A               	tblrd		*-
  2421  0018E6  CFF5 F025          	movff	tablat,___ftmul@f1+2
  2422  0018EA  0E00               	movlw	0
  2423  0018EC  6E20               	movwf	___wmul@multiplicand+1,c
  2424  0018EE  0E03               	movlw	3
  2425  0018F0  6E1F               	movwf	___wmul@multiplicand,c
  2426  0018F2  0E00               	movlw	0
  2427  0018F4  6E12               	movwf	___awmod@divisor+1,c
  2428  0018F6  0E0A               	movlw	10
  2429  0018F8  6E11               	movwf	___awmod@divisor,c
  2430  0018FA  5038               	movf	scale@scl,w,c
  2431  0018FC  6E0F               	movwf	___awmod@dividend,c
  2432  0018FE  6A10               	clrf	___awmod@dividend+1,c
  2433  001900  BE0F               	btfsc	___awmod@dividend,7,c
  2434  001902  0610               	decf	___awmod@dividend+1,f,c
  2435  001904  EC10  F014         	call	___awmod	;wreg free
  2436  001908  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  2437  00190C  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  2438  001910  EC17  F016         	call	___wmul	;wreg free
  2439  001914  0E29               	movlw	low __npowers_
  2440  001916  241D               	addwf	?___wmul,w,c
  2441  001918  6EF6               	movwf	tblptrl,c
  2442  00191A  0E10               	movlw	high __npowers_
  2443  00191C  201E               	addwfc	?___wmul+1,w,c
  2444  00191E  6EF7               	movwf	tblptrh,c
  2445  001920                     	if	0	;There are less than 3 active tblptr bytes
  2446  001920                     	endif
  2447  001920  0009               	tblrd		*+
  2448  001922  CFF5 F026          	movff	tablat,___ftmul@f2
  2449  001926  0009               	tblrd		*+
  2450  001928  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2451  00192C  000A               	tblrd		*-
  2452  00192E  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2453  001932  EC71  F011         	call	___ftmul	;wreg free
  2454  001936  D0ED               	goto	L5
  2455  001938  D106               	goto	l194
  2456  00193A  D000               	goto	l3253
  2457  00193C                     l3253:
  2458                           
  2459                           ;doprnt.c: 434: return _npowers_[scl];
  2460  00193C  5038               	movf	scale@scl,w,c
  2461  00193E  0D03               	mullw	3
  2462  001940  0E29               	movlw	low __npowers_
  2463  001942  24F3               	addwf	prodl,w,c
  2464  001944  6EF6               	movwf	tblptrl,c
  2465  001946  0E10               	movlw	high __npowers_
  2466  001948  D0F2               	goto	L4
  2467  00194A  D0FD               	goto	l194
  2468  00194C                     l3257:
  2469                           
  2470                           ;doprnt.c: 435: }
  2471                           ;doprnt.c: 436: if(scl>=110)
  2472  00194C  5038               	movf	scale@scl,w,c
  2473  00194E  0A80               	xorlw	128
  2474  001950  0F12               	addlw	-238
  2475  001952  A0D8               	btfss	status,0,c
  2476  001954  D08D               	goto	l3265
  2477                           
  2478                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2479  001956  0E00               	movlw	0
  2480  001958  6E20               	movwf	___wmul@multiplicand+1,c
  2481  00195A  0E03               	movlw	3
  2482  00195C  6E1F               	movwf	___wmul@multiplicand,c
  2483  00195E  0E00               	movlw	0
  2484  001960  6E18               	movwf	___awdiv@divisor+1,c
  2485  001962  0E0A               	movlw	10
  2486  001964  6E17               	movwf	___awdiv@divisor,c
  2487  001966  0E00               	movlw	0
  2488  001968  6E12               	movwf	___awmod@divisor+1,c
  2489  00196A  0E64               	movlw	100
  2490  00196C  6E11               	movwf	___awmod@divisor,c
  2491  00196E  5038               	movf	scale@scl,w,c
  2492  001970  6E0F               	movwf	___awmod@dividend,c
  2493  001972  6A10               	clrf	___awmod@dividend+1,c
  2494  001974  BE0F               	btfsc	___awmod@dividend,7,c
  2495  001976  0610               	decf	___awmod@dividend+1,f,c
  2496  001978  EC10  F014         	call	___awmod	;wreg free
  2497  00197C  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2498  001980  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2499  001984  EC34  F013         	call	___awdiv	;wreg free
  2500  001988  0E09               	movlw	9
  2501  00198A  2415               	addwf	?___awdiv,w,c
  2502  00198C  6E1D               	movwf	___wmul@multiplier,c
  2503  00198E  0E00               	movlw	0
  2504  001990  2016               	addwfc	?___awdiv+1,w,c
  2505  001992  6E1E               	movwf	___wmul@multiplier+1,c
  2506  001994  EC17  F016         	call	___wmul	;wreg free
  2507  001998  0E50               	movlw	low __powers_
  2508  00199A  241D               	addwf	?___wmul,w,c
  2509  00199C  6EF6               	movwf	tblptrl,c
  2510  00199E  0E10               	movlw	high __powers_
  2511  0019A0  201E               	addwfc	?___wmul+1,w,c
  2512  0019A2  6EF7               	movwf	tblptrh,c
  2513  0019A4                     	if	0	;There are less than 3 active tblptr bytes
  2514  0019A4                     	endif
  2515  0019A4  0009               	tblrd		*+
  2516  0019A6  CFF5 F026          	movff	tablat,___ftmul@f2
  2517  0019AA  0009               	tblrd		*+
  2518  0019AC  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2519  0019B0  000A               	tblrd		*-
  2520  0019B2  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2521  0019B6  0E00               	movlw	0
  2522  0019B8  6E18               	movwf	___awdiv@divisor+1,c
  2523  0019BA  0E64               	movlw	100
  2524  0019BC  6E17               	movwf	___awdiv@divisor,c
  2525  0019BE  5038               	movf	scale@scl,w,c
  2526  0019C0  6E15               	movwf	___awdiv@dividend,c
  2527  0019C2  6A16               	clrf	___awdiv@dividend+1,c
  2528  0019C4  BE15               	btfsc	___awdiv@dividend,7,c
  2529  0019C6  0616               	decf	___awdiv@dividend+1,f,c
  2530  0019C8  EC34  F013         	call	___awdiv	;wreg free
  2531  0019CC  0E12               	movlw	18
  2532  0019CE  2415               	addwf	?___awdiv,w,c
  2533  0019D0  6E1D               	movwf	___wmul@multiplier,c
  2534  0019D2  0E00               	movlw	0
  2535  0019D4  2016               	addwfc	?___awdiv+1,w,c
  2536  0019D6  6E1E               	movwf	___wmul@multiplier+1,c
  2537  0019D8  0E00               	movlw	0
  2538  0019DA  6E20               	movwf	___wmul@multiplicand+1,c
  2539  0019DC  0E03               	movlw	3
  2540  0019DE  6E1F               	movwf	___wmul@multiplicand,c
  2541  0019E0  EC17  F016         	call	___wmul	;wreg free
  2542  0019E4  0E50               	movlw	low __powers_
  2543  0019E6  241D               	addwf	?___wmul,w,c
  2544  0019E8  6EF6               	movwf	tblptrl,c
  2545  0019EA  0E10               	movlw	high __powers_
  2546  0019EC  201E               	addwfc	?___wmul+1,w,c
  2547  0019EE  6EF7               	movwf	tblptrh,c
  2548  0019F0                     	if	0	;There are less than 3 active tblptr bytes
  2549  0019F0                     	endif
  2550  0019F0  0009               	tblrd		*+
  2551  0019F2  CFF5 F023          	movff	tablat,___ftmul@f1
  2552  0019F6  0009               	tblrd		*+
  2553  0019F8  CFF5 F024          	movff	tablat,___ftmul@f1+1
  2554  0019FC  000A               	tblrd		*-
  2555  0019FE  CFF5 F025          	movff	tablat,___ftmul@f1+2
  2556  001A02  EC71  F011         	call	___ftmul	;wreg free
  2557  001A06  C023  F035         	movff	?___ftmul,_scale$1579
  2558  001A0A  C024  F036         	movff	?___ftmul+1,_scale$1579+1
  2559  001A0E  C025  F037         	movff	?___ftmul+2,_scale$1579+2
  2560                           
  2561                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2562  001A12  C035  F023         	movff	_scale$1579,___ftmul@f1
  2563  001A16  C036  F024         	movff	_scale$1579+1,___ftmul@f1+1
  2564  001A1A  C037  F025         	movff	_scale$1579+2,___ftmul@f1+2
  2565  001A1E  0E00               	movlw	0
  2566  001A20  6E20               	movwf	___wmul@multiplicand+1,c
  2567  001A22  0E03               	movlw	3
  2568  001A24  6E1F               	movwf	___wmul@multiplicand,c
  2569  001A26  0E00               	movlw	0
  2570  001A28  6E12               	movwf	___awmod@divisor+1,c
  2571  001A2A  0E0A               	movlw	10
  2572  001A2C  6E11               	movwf	___awmod@divisor,c
  2573  001A2E  5038               	movf	scale@scl,w,c
  2574  001A30  6E0F               	movwf	___awmod@dividend,c
  2575  001A32  6A10               	clrf	___awmod@dividend+1,c
  2576  001A34  BE0F               	btfsc	___awmod@dividend,7,c
  2577  001A36  0610               	decf	___awmod@dividend+1,f,c
  2578  001A38  EC10  F014         	call	___awmod	;wreg free
  2579  001A3C  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  2580  001A40  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  2581  001A44  EC17  F016         	call	___wmul	;wreg free
  2582  001A48  0E50               	movlw	low __powers_
  2583  001A4A  241D               	addwf	?___wmul,w,c
  2584  001A4C  6EF6               	movwf	tblptrl,c
  2585  001A4E  0E10               	movlw	high __powers_
  2586  001A50  201E               	addwfc	?___wmul+1,w,c
  2587  001A52  6EF7               	movwf	tblptrh,c
  2588  001A54                     	if	0	;There are less than 3 active tblptr bytes
  2589  001A54                     	endif
  2590  001A54  0009               	tblrd		*+
  2591  001A56  CFF5 F026          	movff	tablat,___ftmul@f2
  2592  001A5A  0009               	tblrd		*+
  2593  001A5C  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2594  001A60  000A               	tblrd		*-
  2595  001A62  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2596  001A66  EC71  F011         	call	___ftmul	;wreg free
  2597  001A6A  D053               	goto	L5
  2598  001A6C  D06C               	goto	l194
  2599  001A6E  D059               	goto	l3271
  2600  001A70                     l3265:
  2601                           
  2602                           ;doprnt.c: 438: else if(scl > 10)
  2603  001A70  5038               	movf	scale@scl,w,c
  2604  001A72  0A80               	xorlw	128
  2605  001A74  0F75               	addlw	-139
  2606  001A76  A0D8               	btfss	status,0,c
  2607  001A78  D054               	goto	l3271
  2608                           
  2609                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2610  001A7A  0E00               	movlw	0
  2611  001A7C  6E18               	movwf	___awdiv@divisor+1,c
  2612  001A7E  0E0A               	movlw	10
  2613  001A80  6E17               	movwf	___awdiv@divisor,c
  2614  001A82  5038               	movf	scale@scl,w,c
  2615  001A84  6E15               	movwf	___awdiv@dividend,c
  2616  001A86  6A16               	clrf	___awdiv@dividend+1,c
  2617  001A88  BE15               	btfsc	___awdiv@dividend,7,c
  2618  001A8A  0616               	decf	___awdiv@dividend+1,f,c
  2619  001A8C  EC34  F013         	call	___awdiv	;wreg free
  2620  001A90  0E09               	movlw	9
  2621  001A92  2415               	addwf	?___awdiv,w,c
  2622  001A94  6E1D               	movwf	___wmul@multiplier,c
  2623  001A96  0E00               	movlw	0
  2624  001A98  2016               	addwfc	?___awdiv+1,w,c
  2625  001A9A  6E1E               	movwf	___wmul@multiplier+1,c
  2626  001A9C  0E00               	movlw	0
  2627  001A9E  6E20               	movwf	___wmul@multiplicand+1,c
  2628  001AA0  0E03               	movlw	3
  2629  001AA2  6E1F               	movwf	___wmul@multiplicand,c
  2630  001AA4  EC17  F016         	call	___wmul	;wreg free
  2631  001AA8  0E50               	movlw	low __powers_
  2632  001AAA  241D               	addwf	?___wmul,w,c
  2633  001AAC  6EF6               	movwf	tblptrl,c
  2634  001AAE  0E10               	movlw	high __powers_
  2635  001AB0  201E               	addwfc	?___wmul+1,w,c
  2636  001AB2  6EF7               	movwf	tblptrh,c
  2637  001AB4                     	if	0	;There are less than 3 active tblptr bytes
  2638  001AB4                     	endif
  2639  001AB4  0009               	tblrd		*+
  2640  001AB6  CFF5 F023          	movff	tablat,___ftmul@f1
  2641  001ABA  0009               	tblrd		*+
  2642  001ABC  CFF5 F024          	movff	tablat,___ftmul@f1+1
  2643  001AC0  000A               	tblrd		*-
  2644  001AC2  CFF5 F025          	movff	tablat,___ftmul@f1+2
  2645  001AC6  0E00               	movlw	0
  2646  001AC8  6E20               	movwf	___wmul@multiplicand+1,c
  2647  001ACA  0E03               	movlw	3
  2648  001ACC  6E1F               	movwf	___wmul@multiplicand,c
  2649  001ACE  0E00               	movlw	0
  2650  001AD0  6E12               	movwf	___awmod@divisor+1,c
  2651  001AD2  0E0A               	movlw	10
  2652  001AD4  6E11               	movwf	___awmod@divisor,c
  2653  001AD6  5038               	movf	scale@scl,w,c
  2654  001AD8  6E0F               	movwf	___awmod@dividend,c
  2655  001ADA  6A10               	clrf	___awmod@dividend+1,c
  2656  001ADC  BE0F               	btfsc	___awmod@dividend,7,c
  2657  001ADE  0610               	decf	___awmod@dividend+1,f,c
  2658  001AE0  EC10  F014         	call	___awmod	;wreg free
  2659  001AE4  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  2660  001AE8  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  2661  001AEC  EC17  F016         	call	___wmul	;wreg free
  2662  001AF0  0E50               	movlw	low __powers_
  2663  001AF2  241D               	addwf	?___wmul,w,c
  2664  001AF4  6EF6               	movwf	tblptrl,c
  2665  001AF6  0E10               	movlw	high __powers_
  2666  001AF8  201E               	addwfc	?___wmul+1,w,c
  2667  001AFA  6EF7               	movwf	tblptrh,c
  2668  001AFC                     	if	0	;There are less than 3 active tblptr bytes
  2669  001AFC                     	endif
  2670  001AFC  0009               	tblrd		*+
  2671  001AFE  CFF5 F026          	movff	tablat,___ftmul@f2
  2672  001B02  0009               	tblrd		*+
  2673  001B04  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2674  001B08  000A               	tblrd		*-
  2675  001B0A  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2676  001B0E  EC71  F011         	call	___ftmul	;wreg free
  2677  001B12                     L5:
  2678  001B12  C023  F032         	movff	?___ftmul,?_scale
  2679  001B16  C024  F033         	movff	?___ftmul+1,?_scale+1
  2680  001B1A  C025  F034         	movff	?___ftmul+2,?_scale+2
  2681  001B1E  D013               	goto	l194
  2682  001B20  D000               	goto	l3271
  2683  001B22                     l3271:
  2684                           
  2685                           ;doprnt.c: 440: return _powers_[scl];
  2686  001B22  5038               	movf	scale@scl,w,c
  2687  001B24  0D03               	mullw	3
  2688  001B26  0E50               	movlw	low __powers_
  2689  001B28  24F3               	addwf	prodl,w,c
  2690  001B2A  6EF6               	movwf	tblptrl,c
  2691  001B2C  0E10               	movlw	high __powers_
  2692  001B2E                     L4:
  2693  001B2E  20F4               	addwfc	prodh,w,c
  2694  001B30  6EF7               	movwf	tblptrh,c
  2695  001B32                     	if	0	;There are less than 3 active tblptr bytes
  2696  001B32                     	endif
  2697  001B32  0009               	tblrd		*+
  2698  001B34  CFF5 F032          	movff	tablat,?_scale
  2699  001B38  0009               	tblrd		*+
  2700  001B3A  CFF5 F033          	movff	tablat,?_scale+1
  2701  001B3E  000A               	tblrd		*-
  2702  001B40  CFF5 F034          	movff	tablat,?_scale+2
  2703  001B44  D000               	goto	l194
  2704  001B46                     l194:
  2705  001B46  0012               	return		;funcret
  2706  001B48                     __end_of_scale:
  2707                           	opt stack 0
  2708                           tblptru	equ	0xFF8
  2709                           tblptrh	equ	0xFF7
  2710                           tblptrl	equ	0xFF6
  2711                           tablat	equ	0xFF5
  2712                           prodh	equ	0xFF4
  2713                           prodl	equ	0xFF3
  2714                           intcon2	equ	0xFF1
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           postdec1	equ	0xFE5
  2718                           fsr1l	equ	0xFE1
  2719                           postinc2	equ	0xFDE
  2720                           postdec2	equ	0xFDD
  2721                           fsr2h	equ	0xFDA
  2722                           fsr2l	equ	0xFD9
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _putch *****************
  2726 ;; Defined at:
  2727 ;;		line 51 in file "FireDetector2.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  c               1    wreg     unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  c               1   14[COMRAM] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:        1 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    2
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_printf
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text3
  2756  002D44                     __ptext3:
  2757                           	opt stack 0
  2758  002D44                     _putch:
  2759                           	opt stack 27
  2760                           
  2761                           ;incstack = 0
  2762                           ;putch@c stored from wreg
  2763  002D44  6E0F               	movwf	putch@c,c
  2764                           
  2765                           ;FireDetector2.c: 53: while (!TRMT);
  2766  002D46  D000               	goto	l93
  2767  002D48                     l93:
  2768  002D48  A2AC               	btfss	4012,1,c	;volatile
  2769  002D4A  D7FE               	goto	l93
  2770                           
  2771                           ;FireDetector2.c: 54: TXREG = c;
  2772  002D4C  C00F  FFAD         	movff	putch@c,4013	;volatile
  2773  002D50  0012               	return		;funcret
  2774  002D52                     __end_of_putch:
  2775                           	opt stack 0
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           prodh	equ	0xFF4
  2781                           prodl	equ	0xFF3
  2782                           intcon2	equ	0xFF1
  2783                           postinc0	equ	0xFEE
  2784                           wreg	equ	0xFE8
  2785                           postdec1	equ	0xFE5
  2786                           fsr1l	equ	0xFE1
  2787                           postinc2	equ	0xFDE
  2788                           postdec2	equ	0xFDD
  2789                           fsr2h	equ	0xFDA
  2790                           fsr2l	equ	0xFD9
  2791                           status	equ	0xFD8
  2792                           
  2793 ;; *************** function _fround *****************
  2794 ;; Defined at:
  2795 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  prec            1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  prec            1   58[COMRAM] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  3   49[COMRAM] unsigned char 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2809 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;Total ram usage:       10 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    4
  2816 ;; This function calls:
  2817 ;;		___awdiv
  2818 ;;		___awmod
  2819 ;;		___ftmul
  2820 ;;		___wmul
  2821 ;; This function is called by:
  2822 ;;		_printf
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text4
  2827  001B48                     __ptext4:
  2828                           	opt stack 0
  2829  001B48                     _fround:
  2830                           	opt stack 25
  2831                           
  2832                           ;incstack = 0
  2833                           ;fround@prec stored from wreg
  2834  001B48  6E3B               	movwf	fround@prec,c
  2835                           
  2836                           ;doprnt.c: 413: if(prec>=110)
  2837  001B4A  0E6D               	movlw	109
  2838  001B4C  643B               	cpfsgt	fround@prec,c
  2839  001B4E  D09B               	goto	l3225
  2840                           
  2841                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2842  001B50  0E00               	movlw	0
  2843  001B52  6E20               	movwf	___wmul@multiplicand+1,c
  2844  001B54  0E03               	movlw	3
  2845  001B56  6E1F               	movwf	___wmul@multiplicand,c
  2846  001B58  0E00               	movlw	0
  2847  001B5A  6E18               	movwf	___awdiv@divisor+1,c
  2848  001B5C  0E0A               	movlw	10
  2849  001B5E  6E17               	movwf	___awdiv@divisor,c
  2850  001B60  0E00               	movlw	0
  2851  001B62  6E12               	movwf	___awmod@divisor+1,c
  2852  001B64  0E64               	movlw	100
  2853  001B66  6E11               	movwf	___awmod@divisor,c
  2854  001B68  C03B  F00F         	movff	fround@prec,___awmod@dividend
  2855  001B6C  6A10               	clrf	___awmod@dividend+1,c
  2856  001B6E  EC10  F014         	call	___awmod	;wreg free
  2857  001B72  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2858  001B76  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2859  001B7A  EC34  F013         	call	___awdiv	;wreg free
  2860  001B7E  0E09               	movlw	9
  2861  001B80  2415               	addwf	?___awdiv,w,c
  2862  001B82  6E1D               	movwf	___wmul@multiplier,c
  2863  001B84  0E00               	movlw	0
  2864  001B86  2016               	addwfc	?___awdiv+1,w,c
  2865  001B88  6E1E               	movwf	___wmul@multiplier+1,c
  2866  001B8A  EC17  F016         	call	___wmul	;wreg free
  2867  001B8E  0E29               	movlw	low __npowers_
  2868  001B90  241D               	addwf	?___wmul,w,c
  2869  001B92  6EF6               	movwf	tblptrl,c
  2870  001B94  0E10               	movlw	high __npowers_
  2871  001B96  201E               	addwfc	?___wmul+1,w,c
  2872  001B98  6EF7               	movwf	tblptrh,c
  2873  001B9A                     	if	0	;There are less than 3 active tblptr bytes
  2874  001B9A                     	endif
  2875  001B9A  0009               	tblrd		*+
  2876  001B9C  CFF5 F026          	movff	tablat,___ftmul@f2
  2877  001BA0  0009               	tblrd		*+
  2878  001BA2  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2879  001BA6  000A               	tblrd		*-
  2880  001BA8  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2881  001BAC  0E00               	movlw	0
  2882  001BAE  6E18               	movwf	___awdiv@divisor+1,c
  2883  001BB0  0E64               	movlw	100
  2884  001BB2  6E17               	movwf	___awdiv@divisor,c
  2885  001BB4  C03B  F015         	movff	fround@prec,___awdiv@dividend
  2886  001BB8  6A16               	clrf	___awdiv@dividend+1,c
  2887  001BBA  EC34  F013         	call	___awdiv	;wreg free
  2888  001BBE  0E12               	movlw	18
  2889  001BC0  2415               	addwf	?___awdiv,w,c
  2890  001BC2  6E1D               	movwf	___wmul@multiplier,c
  2891  001BC4  0E00               	movlw	0
  2892  001BC6  2016               	addwfc	?___awdiv+1,w,c
  2893  001BC8  6E1E               	movwf	___wmul@multiplier+1,c
  2894  001BCA  0E00               	movlw	0
  2895  001BCC  6E20               	movwf	___wmul@multiplicand+1,c
  2896  001BCE  0E03               	movlw	3
  2897  001BD0  6E1F               	movwf	___wmul@multiplicand,c
  2898  001BD2  EC17  F016         	call	___wmul	;wreg free
  2899  001BD6  0E29               	movlw	low __npowers_
  2900  001BD8  241D               	addwf	?___wmul,w,c
  2901  001BDA  6EF6               	movwf	tblptrl,c
  2902  001BDC  0E10               	movlw	high __npowers_
  2903  001BDE  201E               	addwfc	?___wmul+1,w,c
  2904  001BE0  6EF7               	movwf	tblptrh,c
  2905  001BE2                     	if	0	;There are less than 3 active tblptr bytes
  2906  001BE2                     	endif
  2907  001BE2  0009               	tblrd		*+
  2908  001BE4  CFF5 F023          	movff	tablat,___ftmul@f1
  2909  001BE8  0009               	tblrd		*+
  2910  001BEA  CFF5 F024          	movff	tablat,___ftmul@f1+1
  2911  001BEE  000A               	tblrd		*-
  2912  001BF0  CFF5 F025          	movff	tablat,___ftmul@f1+2
  2913  001BF4  EC71  F011         	call	___ftmul	;wreg free
  2914  001BF8  C023  F038         	movff	?___ftmul,_fround$1577
  2915  001BFC  C024  F039         	movff	?___ftmul+1,_fround$1577+1
  2916  001C00  C025  F03A         	movff	?___ftmul+2,_fround$1577+2
  2917                           
  2918                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2919  001C04  0E00               	movlw	0
  2920  001C06  6E20               	movwf	___wmul@multiplicand+1,c
  2921  001C08  0E03               	movlw	3
  2922  001C0A  6E1F               	movwf	___wmul@multiplicand,c
  2923  001C0C  0E00               	movlw	0
  2924  001C0E  6E12               	movwf	___awmod@divisor+1,c
  2925  001C10  0E0A               	movlw	10
  2926  001C12  6E11               	movwf	___awmod@divisor,c
  2927  001C14  C03B  F00F         	movff	fround@prec,___awmod@dividend
  2928  001C18  6A10               	clrf	___awmod@dividend+1,c
  2929  001C1A  EC10  F014         	call	___awmod	;wreg free
  2930  001C1E  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  2931  001C22  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  2932  001C26  EC17  F016         	call	___wmul	;wreg free
  2933  001C2A  0E29               	movlw	low __npowers_
  2934  001C2C  241D               	addwf	?___wmul,w,c
  2935  001C2E  6EF6               	movwf	tblptrl,c
  2936  001C30  0E10               	movlw	high __npowers_
  2937  001C32  201E               	addwfc	?___wmul+1,w,c
  2938  001C34  6EF7               	movwf	tblptrh,c
  2939  001C36                     	if	0	;There are less than 3 active tblptr bytes
  2940  001C36                     	endif
  2941  001C36  0009               	tblrd		*+
  2942  001C38  CFF5 F026          	movff	tablat,___ftmul@f2
  2943  001C3C  0009               	tblrd		*+
  2944  001C3E  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2945  001C42  000A               	tblrd		*-
  2946  001C44  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2947  001C48  C038  F023         	movff	_fround$1577,___ftmul@f1
  2948  001C4C  C039  F024         	movff	_fround$1577+1,___ftmul@f1+1
  2949  001C50  C03A  F025         	movff	_fround$1577+2,___ftmul@f1+2
  2950  001C54  EC71  F011         	call	___ftmul	;wreg free
  2951  001C58  C023  F035         	movff	?___ftmul,_fround$1578
  2952  001C5C  C024  F036         	movff	?___ftmul+1,_fround$1578+1
  2953  001C60  C025  F037         	movff	?___ftmul+2,_fround$1578+2
  2954                           
  2955                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2956  001C64  C035  F023         	movff	_fround$1578,___ftmul@f1
  2957  001C68  C036  F024         	movff	_fround$1578+1,___ftmul@f1+1
  2958  001C6C  C037  F025         	movff	_fround$1578+2,___ftmul@f1+2
  2959  001C70  0E00               	movlw	0
  2960  001C72  6E26               	movwf	___ftmul@f2,c
  2961  001C74  0E00               	movlw	0
  2962  001C76  6E27               	movwf	___ftmul@f2+1,c
  2963  001C78  0E3F               	movlw	63
  2964  001C7A  6E28               	movwf	___ftmul@f2+2,c
  2965  001C7C  EC71  F011         	call	___ftmul	;wreg free
  2966  001C80  D07D               	goto	L7
  2967  001C82  D083               	goto	l187
  2968  001C84  D062               	goto	l3233
  2969  001C86                     l3225:
  2970                           
  2971                           ;doprnt.c: 415: else if(prec > 10)
  2972  001C86  0E0A               	movlw	10
  2973  001C88  643B               	cpfsgt	fround@prec,c
  2974  001C8A  D05F               	goto	l3233
  2975                           
  2976                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2977  001C8C  0E00               	movlw	0
  2978  001C8E  6E20               	movwf	___wmul@multiplicand+1,c
  2979  001C90  0E03               	movlw	3
  2980  001C92  6E1F               	movwf	___wmul@multiplicand,c
  2981  001C94  0E00               	movlw	0
  2982  001C96  6E12               	movwf	___awmod@divisor+1,c
  2983  001C98  0E0A               	movlw	10
  2984  001C9A  6E11               	movwf	___awmod@divisor,c
  2985  001C9C  C03B  F00F         	movff	fround@prec,___awmod@dividend
  2986  001CA0  6A10               	clrf	___awmod@dividend+1,c
  2987  001CA2  EC10  F014         	call	___awmod	;wreg free
  2988  001CA6  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  2989  001CAA  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  2990  001CAE  EC17  F016         	call	___wmul	;wreg free
  2991  001CB2  0E29               	movlw	low __npowers_
  2992  001CB4  241D               	addwf	?___wmul,w,c
  2993  001CB6  6EF6               	movwf	tblptrl,c
  2994  001CB8  0E10               	movlw	high __npowers_
  2995  001CBA  201E               	addwfc	?___wmul+1,w,c
  2996  001CBC  6EF7               	movwf	tblptrh,c
  2997  001CBE                     	if	0	;There are less than 3 active tblptr bytes
  2998  001CBE                     	endif
  2999  001CBE  0009               	tblrd		*+
  3000  001CC0  CFF5 F026          	movff	tablat,___ftmul@f2
  3001  001CC4  0009               	tblrd		*+
  3002  001CC6  CFF5 F027          	movff	tablat,___ftmul@f2+1
  3003  001CCA  000A               	tblrd		*-
  3004  001CCC  CFF5 F028          	movff	tablat,___ftmul@f2+2
  3005  001CD0  0E00               	movlw	0
  3006  001CD2  6E18               	movwf	___awdiv@divisor+1,c
  3007  001CD4  0E0A               	movlw	10
  3008  001CD6  6E17               	movwf	___awdiv@divisor,c
  3009  001CD8  C03B  F015         	movff	fround@prec,___awdiv@dividend
  3010  001CDC  6A16               	clrf	___awdiv@dividend+1,c
  3011  001CDE  EC34  F013         	call	___awdiv	;wreg free
  3012  001CE2  0E09               	movlw	9
  3013  001CE4  2415               	addwf	?___awdiv,w,c
  3014  001CE6  6E1D               	movwf	___wmul@multiplier,c
  3015  001CE8  0E00               	movlw	0
  3016  001CEA  2016               	addwfc	?___awdiv+1,w,c
  3017  001CEC  6E1E               	movwf	___wmul@multiplier+1,c
  3018  001CEE  0E00               	movlw	0
  3019  001CF0  6E20               	movwf	___wmul@multiplicand+1,c
  3020  001CF2  0E03               	movlw	3
  3021  001CF4  6E1F               	movwf	___wmul@multiplicand,c
  3022  001CF6  EC17  F016         	call	___wmul	;wreg free
  3023  001CFA  0E29               	movlw	low __npowers_
  3024  001CFC  241D               	addwf	?___wmul,w,c
  3025  001CFE  6EF6               	movwf	tblptrl,c
  3026  001D00  0E10               	movlw	high __npowers_
  3027  001D02  201E               	addwfc	?___wmul+1,w,c
  3028  001D04  6EF7               	movwf	tblptrh,c
  3029  001D06                     	if	0	;There are less than 3 active tblptr bytes
  3030  001D06                     	endif
  3031  001D06  0009               	tblrd		*+
  3032  001D08  CFF5 F023          	movff	tablat,___ftmul@f1
  3033  001D0C  0009               	tblrd		*+
  3034  001D0E  CFF5 F024          	movff	tablat,___ftmul@f1+1
  3035  001D12  000A               	tblrd		*-
  3036  001D14  CFF5 F025          	movff	tablat,___ftmul@f1+2
  3037  001D18  EC71  F011         	call	___ftmul	;wreg free
  3038  001D1C  C023  F038         	movff	?___ftmul,_fround$1577
  3039  001D20  C024  F039         	movff	?___ftmul+1,_fround$1577+1
  3040  001D24  C025  F03A         	movff	?___ftmul+2,_fround$1577+2
  3041                           
  3042                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3043  001D28  C038  F023         	movff	_fround$1577,___ftmul@f1
  3044  001D2C  C039  F024         	movff	_fround$1577+1,___ftmul@f1+1
  3045  001D30  C03A  F025         	movff	_fround$1577+2,___ftmul@f1+2
  3046  001D34  0E00               	movlw	0
  3047  001D36  6E26               	movwf	___ftmul@f2,c
  3048  001D38  0E00               	movlw	0
  3049  001D3A  6E27               	movwf	___ftmul@f2+1,c
  3050  001D3C  0E3F               	movlw	63
  3051  001D3E  6E28               	movwf	___ftmul@f2+2,c
  3052  001D40  EC71  F011         	call	___ftmul	;wreg free
  3053  001D44  D01B               	goto	L7
  3054  001D46  D021               	goto	l187
  3055  001D48  D000               	goto	l3233
  3056  001D4A                     l3233:
  3057                           
  3058                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3059  001D4A  503B               	movf	fround@prec,w,c
  3060  001D4C  0D03               	mullw	3
  3061  001D4E  0E29               	movlw	low __npowers_
  3062  001D50  24F3               	addwf	prodl,w,c
  3063  001D52  6EF6               	movwf	tblptrl,c
  3064  001D54  0E10               	movlw	high __npowers_
  3065  001D56  20F4               	addwfc	prodh,w,c
  3066  001D58  6EF7               	movwf	tblptrh,c
  3067  001D5A                     	if	0	;There are less than 3 active tblptr bytes
  3068  001D5A                     	endif
  3069  001D5A  0009               	tblrd		*+
  3070  001D5C  CFF5 F023          	movff	tablat,___ftmul@f1
  3071  001D60  0009               	tblrd		*+
  3072  001D62  CFF5 F024          	movff	tablat,___ftmul@f1+1
  3073  001D66  000A               	tblrd		*-
  3074  001D68  CFF5 F025          	movff	tablat,___ftmul@f1+2
  3075  001D6C  0E00               	movlw	0
  3076  001D6E  6E26               	movwf	___ftmul@f2,c
  3077  001D70  0E00               	movlw	0
  3078  001D72  6E27               	movwf	___ftmul@f2+1,c
  3079  001D74  0E3F               	movlw	63
  3080  001D76  6E28               	movwf	___ftmul@f2+2,c
  3081  001D78  EC71  F011         	call	___ftmul	;wreg free
  3082  001D7C                     L7:
  3083  001D7C  C023  F032         	movff	?___ftmul,?_fround
  3084  001D80  C024  F033         	movff	?___ftmul+1,?_fround+1
  3085  001D84  C025  F034         	movff	?___ftmul+2,?_fround+2
  3086  001D88  D000               	goto	l187
  3087  001D8A                     l187:
  3088  001D8A  0012               	return		;funcret
  3089  001D8C                     __end_of_fround:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           intcon2	equ	0xFF1
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           postdec1	equ	0xFE5
  3101                           fsr1l	equ	0xFE1
  3102                           postinc2	equ	0xFDE
  3103                           postdec2	equ	0xFDD
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function ___wmul *****************
  3109 ;; Defined at:
  3110 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  multiplier      2   28[COMRAM] unsigned int 
  3113 ;;  multiplicand    2   30[COMRAM] unsigned int 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  product         2   32[COMRAM] unsigned int 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  2   28[COMRAM] unsigned int 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0, prodl, prodh
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;Total ram usage:        6 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    2
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_fround
  3136 ;;		_scale
  3137 ;;		_printf
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text5
  3142  002C2E                     __ptext5:
  3143                           	opt stack 0
  3144  002C2E                     ___wmul:
  3145                           	opt stack 26
  3146                           
  3147                           ;incstack = 0
  3148  002C2E  501D               	movf	___wmul@multiplier,w,c
  3149  002C30  021F               	mulwf	___wmul@multiplicand,c
  3150  002C32  CFF3 F021          	movff	prodl,___wmul@product
  3151  002C36  CFF4 F022          	movff	prodh,___wmul@product+1
  3152  002C3A  501D               	movf	___wmul@multiplier,w,c
  3153  002C3C  0220               	mulwf	___wmul@multiplicand+1,c
  3154  002C3E  50F3               	movf	prodl,w,c
  3155  002C40  2622               	addwf	___wmul@product+1,f,c
  3156  002C42  501E               	movf	___wmul@multiplier+1,w,c
  3157  002C44  021F               	mulwf	___wmul@multiplicand,c
  3158  002C46  50F3               	movf	prodl,w,c
  3159  002C48  2622               	addwf	___wmul@product+1,f,c
  3160  002C4A  C021  F01D         	movff	___wmul@product,?___wmul
  3161  002C4E  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  3162  002C52  D000               	goto	l286
  3163  002C54                     l286:
  3164  002C54  0012               	return		;funcret
  3165  002C56                     __end_of___wmul:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           intcon2	equ	0xFF1
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           postdec1	equ	0xFE5
  3177                           fsr1l	equ	0xFE1
  3178                           postinc2	equ	0xFDE
  3179                           postdec2	equ	0xFDD
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function ___ftmul *****************
  3185 ;; Defined at:
  3186 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  f1              3   34[COMRAM] float 
  3189 ;;  f2              3   37[COMRAM] float 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  f3_as_produc    3   44[COMRAM] unsigned um
  3192 ;;  sign            1   48[COMRAM] unsigned char 
  3193 ;;  cntr            1   47[COMRAM] unsigned char 
  3194 ;;  exp             1   43[COMRAM] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  3   34[COMRAM] float 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3204 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;Total ram usage:       15 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    3
  3211 ;; This function calls:
  3212 ;;		___ftpack
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;;		_fround
  3216 ;;		_scale
  3217 ;;		_printf
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text6
  3222  0022E2                     __ptext6:
  3223                           	opt stack 0
  3224  0022E2                     ___ftmul:
  3225                           	opt stack 25
  3226                           
  3227                           ;incstack = 0
  3228  0022E2  C025  F029         	movff	___ftmul@f1+2,??___ftmul
  3229  0022E6  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  3230  0022E8  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  3231  0022EA  3424               	rlcf	___ftmul@f1+1,w,c
  3232  0022EC  3629               	rlcf	??___ftmul& (0+255),f,c
  3233  0022EE  E301               	bnc	u3391
  3234  0022F0  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  3235  0022F2                     u3391:
  3236  0022F2  5029               	movf	??___ftmul,w,c
  3237  0022F4  6E2C               	movwf	___ftmul@exp,c
  3238  0022F6  502C               	movf	___ftmul@exp,w,c
  3239  0022F8  A4D8               	btfss	status,2,c
  3240  0022FA  D002               	goto	l3037
  3241  0022FC  D00E               	goto	l3039
  3242  0022FE  D06C               	goto	l715
  3243  002300                     l3037:
  3244  002300  C028  F029         	movff	___ftmul@f2+2,??___ftmul
  3245  002304  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  3246  002306  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  3247  002308  3427               	rlcf	___ftmul@f2+1,w,c
  3248  00230A  3629               	rlcf	??___ftmul& (0+255),f,c
  3249  00230C  E301               	bnc	u3411
  3250  00230E  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  3251  002310                     u3411:
  3252  002310  5029               	movf	??___ftmul,w,c
  3253  002312  6E31               	movwf	___ftmul@sign,c
  3254  002314  5031               	movf	___ftmul@sign,w,c
  3255  002316  A4D8               	btfss	status,2,c
  3256  002318  D007               	goto	l3043
  3257  00231A                     l3039:
  3258  00231A  0E00               	movlw	0
  3259  00231C  6E23               	movwf	?___ftmul,c
  3260  00231E  0E00               	movlw	0
  3261  002320  6E24               	movwf	?___ftmul+1,c
  3262  002322  0E00               	movlw	0
  3263  002324  6E25               	movwf	?___ftmul+2,c
  3264  002326  D058               	goto	l715
  3265  002328                     l3043:
  3266  002328  5031               	movf	___ftmul@sign,w,c
  3267  00232A  0F7B               	addlw	123
  3268  00232C  262C               	addwf	___ftmul@exp,f,c
  3269  00232E  C025  F031         	movff	___ftmul@f1+2,___ftmul@sign
  3270  002332  5028               	movf	___ftmul@f2+2,w,c
  3271  002334  1A31               	xorwf	___ftmul@sign,f,c
  3272  002336  0E80               	movlw	128
  3273  002338  1631               	andwf	___ftmul@sign,f,c
  3274  00233A  8E24               	bsf	___ftmul@f1+1,7,c
  3275  00233C  8E27               	bsf	___ftmul@f2+1,7,c
  3276  00233E  0EFF               	movlw	255
  3277  002340  1626               	andwf	___ftmul@f2,f,c
  3278  002342  0EFF               	movlw	255
  3279  002344  1627               	andwf	___ftmul@f2+1,f,c
  3280  002346  0E00               	movlw	0
  3281  002348  1628               	andwf	___ftmul@f2+2,f,c
  3282  00234A  0E00               	movlw	0
  3283  00234C  6E2D               	movwf	___ftmul@f3_as_product,c
  3284  00234E  0E00               	movlw	0
  3285  002350  6E2E               	movwf	___ftmul@f3_as_product+1,c
  3286  002352  0E00               	movlw	0
  3287  002354  6E2F               	movwf	___ftmul@f3_as_product+2,c
  3288  002356  0E07               	movlw	7
  3289  002358  6E30               	movwf	___ftmul@cntr,c
  3290  00235A  D000               	goto	l3057
  3291  00235C                     l3057:
  3292  00235C  A023               	btfss	___ftmul@f1,0,c
  3293  00235E  D007               	goto	l3061
  3294  002360  5026               	movf	___ftmul@f2,w,c
  3295  002362  262D               	addwf	___ftmul@f3_as_product,f,c
  3296  002364  5027               	movf	___ftmul@f2+1,w,c
  3297  002366  222E               	addwfc	___ftmul@f3_as_product+1,f,c
  3298  002368  5028               	movf	___ftmul@f2+2,w,c
  3299  00236A  222F               	addwfc	___ftmul@f3_as_product+2,f,c
  3300  00236C  D000               	goto	l3061
  3301  00236E                     l3061:
  3302  00236E  90D8               	bcf	status,0,c
  3303  002370  3225               	rrcf	___ftmul@f1+2,f,c
  3304  002372  3224               	rrcf	___ftmul@f1+1,f,c
  3305  002374  3223               	rrcf	___ftmul@f1,f,c
  3306  002376  90D8               	bcf	status,0,c
  3307  002378  3626               	rlcf	___ftmul@f2,f,c
  3308  00237A  3627               	rlcf	___ftmul@f2+1,f,c
  3309  00237C  3628               	rlcf	___ftmul@f2+2,f,c
  3310  00237E  2E30               	decfsz	___ftmul@cntr,f,c
  3311  002380  D7ED               	goto	l3057
  3312  002382  D000               	goto	l3065
  3313  002384                     l3065:
  3314  002384  0E09               	movlw	9
  3315  002386  6E30               	movwf	___ftmul@cntr,c
  3316  002388  D000               	goto	l3067
  3317  00238A                     l3067:
  3318  00238A  A023               	btfss	___ftmul@f1,0,c
  3319  00238C  D007               	goto	l3071
  3320  00238E  5026               	movf	___ftmul@f2,w,c
  3321  002390  262D               	addwf	___ftmul@f3_as_product,f,c
  3322  002392  5027               	movf	___ftmul@f2+1,w,c
  3323  002394  222E               	addwfc	___ftmul@f3_as_product+1,f,c
  3324  002396  5028               	movf	___ftmul@f2+2,w,c
  3325  002398  222F               	addwfc	___ftmul@f3_as_product+2,f,c
  3326  00239A  D000               	goto	l3071
  3327  00239C                     l3071:
  3328  00239C  90D8               	bcf	status,0,c
  3329  00239E  3225               	rrcf	___ftmul@f1+2,f,c
  3330  0023A0  3224               	rrcf	___ftmul@f1+1,f,c
  3331  0023A2  3223               	rrcf	___ftmul@f1,f,c
  3332  0023A4  90D8               	bcf	status,0,c
  3333  0023A6  322F               	rrcf	___ftmul@f3_as_product+2,f,c
  3334  0023A8  322E               	rrcf	___ftmul@f3_as_product+1,f,c
  3335  0023AA  322D               	rrcf	___ftmul@f3_as_product,f,c
  3336  0023AC  2E30               	decfsz	___ftmul@cntr,f,c
  3337  0023AE  D7ED               	goto	l3067
  3338  0023B0  D000               	goto	l3075
  3339  0023B2                     l3075:
  3340  0023B2  C02D  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  3341  0023B6  C02E  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3342  0023BA  C02F  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3343  0023BE  C02C  F012         	movff	___ftmul@exp,___ftpack@exp
  3344  0023C2  C031  F013         	movff	___ftmul@sign,___ftpack@sign
  3345  0023C6  ECD1  F012         	call	___ftpack	;wreg free
  3346  0023CA  C00F  F023         	movff	?___ftpack,?___ftmul
  3347  0023CE  C010  F024         	movff	?___ftpack+1,?___ftmul+1
  3348  0023D2  C011  F025         	movff	?___ftpack+2,?___ftmul+2
  3349  0023D6  D000               	goto	l715
  3350  0023D8                     l715:
  3351  0023D8  0012               	return		;funcret
  3352  0023DA                     __end_of___ftmul:
  3353                           	opt stack 0
  3354                           tblptru	equ	0xFF8
  3355                           tblptrh	equ	0xFF7
  3356                           tblptrl	equ	0xFF6
  3357                           tablat	equ	0xFF5
  3358                           prodh	equ	0xFF4
  3359                           prodl	equ	0xFF3
  3360                           intcon2	equ	0xFF1
  3361                           postinc0	equ	0xFEE
  3362                           wreg	equ	0xFE8
  3363                           postdec1	equ	0xFE5
  3364                           fsr1l	equ	0xFE1
  3365                           postinc2	equ	0xFDE
  3366                           postdec2	equ	0xFDD
  3367                           fsr2h	equ	0xFDA
  3368                           fsr2l	equ	0xFD9
  3369                           status	equ	0xFD8
  3370                           
  3371 ;; *************** function ___awmod *****************
  3372 ;; Defined at:
  3373 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  dividend        2   14[COMRAM] int 
  3376 ;;  divisor         2   16[COMRAM] int 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  sign            1   19[COMRAM] unsigned char 
  3379 ;;  counter         1   18[COMRAM] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  2   14[COMRAM] int 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;Total ram usage:        6 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    2
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_fround
  3400 ;;		_scale
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text7
  3405  002820                     __ptext7:
  3406                           	opt stack 0
  3407  002820                     ___awmod:
  3408                           	opt stack 26
  3409                           
  3410                           ;incstack = 0
  3411  002820  0E00               	movlw	0
  3412  002822  6E14               	movwf	___awmod@sign,c
  3413  002824  AE10               	btfss	___awmod@dividend+1,7,c
  3414  002826  D007               	goto	l3131
  3415  002828  6C0F               	negf	___awmod@dividend,c
  3416  00282A  1E10               	comf	___awmod@dividend+1,f,c
  3417  00282C  B0D8               	btfsc	status,0,c
  3418  00282E  2A10               	incf	___awmod@dividend+1,f,c
  3419  002830  0E01               	movlw	1
  3420  002832  6E14               	movwf	___awmod@sign,c
  3421  002834  D000               	goto	l3131
  3422  002836                     l3131:
  3423  002836  AE12               	btfss	___awmod@divisor+1,7,c
  3424  002838  D005               	goto	l3135
  3425  00283A  6C11               	negf	___awmod@divisor,c
  3426  00283C  1E12               	comf	___awmod@divisor+1,f,c
  3427  00283E  B0D8               	btfsc	status,0,c
  3428  002840  2A12               	incf	___awmod@divisor+1,f,c
  3429  002842  D000               	goto	l3135
  3430  002844                     l3135:
  3431  002844  5011               	movf	___awmod@divisor,w,c
  3432  002846  1012               	iorwf	___awmod@divisor+1,w,c
  3433  002848  B4D8               	btfsc	status,2,c
  3434  00284A  D01D               	goto	l3151
  3435  00284C  0E01               	movlw	1
  3436  00284E  6E13               	movwf	___awmod@counter,c
  3437  002850  D005               	goto	l3141
  3438  002852                     l3139:
  3439  002852  90D8               	bcf	status,0,c
  3440  002854  3611               	rlcf	___awmod@divisor,f,c
  3441  002856  3612               	rlcf	___awmod@divisor+1,f,c
  3442  002858  2A13               	incf	___awmod@counter,f,c
  3443  00285A  D000               	goto	l3141
  3444  00285C                     l3141:
  3445  00285C  BE12               	btfsc	___awmod@divisor+1,7,c
  3446  00285E  D002               	goto	l3143
  3447  002860  D7F8               	goto	l3139
  3448  002862  D000               	goto	l3143
  3449  002864                     l3143:
  3450  002864  5011               	movf	___awmod@divisor,w,c
  3451  002866  5C0F               	subwf	___awmod@dividend,w,c
  3452  002868  5012               	movf	___awmod@divisor+1,w,c
  3453  00286A  5810               	subwfb	___awmod@dividend+1,w,c
  3454  00286C  A0D8               	btfss	status,0,c
  3455  00286E  D005               	goto	l3147
  3456  002870  5011               	movf	___awmod@divisor,w,c
  3457  002872  5E0F               	subwf	___awmod@dividend,f,c
  3458  002874  5012               	movf	___awmod@divisor+1,w,c
  3459  002876  5A10               	subwfb	___awmod@dividend+1,f,c
  3460  002878  D000               	goto	l3147
  3461  00287A                     l3147:
  3462  00287A  90D8               	bcf	status,0,c
  3463  00287C  3212               	rrcf	___awmod@divisor+1,f,c
  3464  00287E  3211               	rrcf	___awmod@divisor,f,c
  3465  002880  2E13               	decfsz	___awmod@counter,f,c
  3466  002882  D7F0               	goto	l3143
  3467  002884  D000               	goto	l3151
  3468  002886                     l3151:
  3469  002886  5014               	movf	___awmod@sign,w,c
  3470  002888  B4D8               	btfsc	status,2,c
  3471  00288A  D005               	goto	l3155
  3472  00288C  6C0F               	negf	___awmod@dividend,c
  3473  00288E  1E10               	comf	___awmod@dividend+1,f,c
  3474  002890  B0D8               	btfsc	status,0,c
  3475  002892  2A10               	incf	___awmod@dividend+1,f,c
  3476  002894  D000               	goto	l3155
  3477  002896                     l3155:
  3478  002896  C00F  F00F         	movff	___awmod@dividend,?___awmod
  3479  00289A  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  3480  00289E  D000               	goto	l492
  3481  0028A0                     l492:
  3482  0028A0  0012               	return		;funcret
  3483  0028A2                     __end_of___awmod:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon2	equ	0xFF1
  3492                           postinc0	equ	0xFEE
  3493                           wreg	equ	0xFE8
  3494                           postdec1	equ	0xFE5
  3495                           fsr1l	equ	0xFE1
  3496                           postinc2	equ	0xFDE
  3497                           postdec2	equ	0xFDD
  3498                           fsr2h	equ	0xFDA
  3499                           fsr2l	equ	0xFD9
  3500                           status	equ	0xFD8
  3501                           
  3502 ;; *************** function ___awdiv *****************
  3503 ;; Defined at:
  3504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  dividend        2   20[COMRAM] int 
  3507 ;;  divisor         2   22[COMRAM] int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  quotient        2   26[COMRAM] int 
  3510 ;;  sign            1   25[COMRAM] unsigned char 
  3511 ;;  counter         1   24[COMRAM] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2   20[COMRAM] int 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        8 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    2
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_fround
  3532 ;;		_scale
  3533 ;;		_printf
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text8
  3538  002668                     __ptext8:
  3539                           	opt stack 0
  3540  002668                     ___awdiv:
  3541                           	opt stack 26
  3542                           
  3543                           ;incstack = 0
  3544  002668  0E00               	movlw	0
  3545  00266A  6E1A               	movwf	___awdiv@sign,c
  3546  00266C  AE18               	btfss	___awdiv@divisor+1,7,c
  3547  00266E  D007               	goto	l3087
  3548  002670  6C17               	negf	___awdiv@divisor,c
  3549  002672  1E18               	comf	___awdiv@divisor+1,f,c
  3550  002674  B0D8               	btfsc	status,0,c
  3551  002676  2A18               	incf	___awdiv@divisor+1,f,c
  3552  002678  0E01               	movlw	1
  3553  00267A  6E1A               	movwf	___awdiv@sign,c
  3554  00267C  D000               	goto	l3087
  3555  00267E                     l3087:
  3556  00267E  AE16               	btfss	___awdiv@dividend+1,7,c
  3557  002680  D007               	goto	l3093
  3558  002682  6C15               	negf	___awdiv@dividend,c
  3559  002684  1E16               	comf	___awdiv@dividend+1,f,c
  3560  002686  B0D8               	btfsc	status,0,c
  3561  002688  2A16               	incf	___awdiv@dividend+1,f,c
  3562  00268A  0E01               	movlw	1
  3563  00268C  1A1A               	xorwf	___awdiv@sign,f,c
  3564  00268E  D000               	goto	l3093
  3565  002690                     l3093:
  3566  002690  0E00               	movlw	0
  3567  002692  6E1C               	movwf	___awdiv@quotient+1,c
  3568  002694  0E00               	movlw	0
  3569  002696  6E1B               	movwf	___awdiv@quotient,c
  3570  002698  5017               	movf	___awdiv@divisor,w,c
  3571  00269A  1018               	iorwf	___awdiv@divisor+1,w,c
  3572  00269C  B4D8               	btfsc	status,2,c
  3573  00269E  D021               	goto	l3115
  3574  0026A0  0E01               	movlw	1
  3575  0026A2  6E19               	movwf	___awdiv@counter,c
  3576  0026A4  D005               	goto	l3101
  3577  0026A6                     l3099:
  3578  0026A6  90D8               	bcf	status,0,c
  3579  0026A8  3617               	rlcf	___awdiv@divisor,f,c
  3580  0026AA  3618               	rlcf	___awdiv@divisor+1,f,c
  3581  0026AC  2A19               	incf	___awdiv@counter,f,c
  3582  0026AE  D000               	goto	l3101
  3583  0026B0                     l3101:
  3584  0026B0  BE18               	btfsc	___awdiv@divisor+1,7,c
  3585  0026B2  D002               	goto	l3103
  3586  0026B4  D7F8               	goto	l3099
  3587  0026B6  D000               	goto	l3103
  3588  0026B8                     l3103:
  3589  0026B8  90D8               	bcf	status,0,c
  3590  0026BA  361B               	rlcf	___awdiv@quotient,f,c
  3591  0026BC  361C               	rlcf	___awdiv@quotient+1,f,c
  3592  0026BE  5017               	movf	___awdiv@divisor,w,c
  3593  0026C0  5C15               	subwf	___awdiv@dividend,w,c
  3594  0026C2  5018               	movf	___awdiv@divisor+1,w,c
  3595  0026C4  5816               	subwfb	___awdiv@dividend+1,w,c
  3596  0026C6  A0D8               	btfss	status,0,c
  3597  0026C8  D006               	goto	l3111
  3598  0026CA  5017               	movf	___awdiv@divisor,w,c
  3599  0026CC  5E15               	subwf	___awdiv@dividend,f,c
  3600  0026CE  5018               	movf	___awdiv@divisor+1,w,c
  3601  0026D0  5A16               	subwfb	___awdiv@dividend+1,f,c
  3602  0026D2  801B               	bsf	___awdiv@quotient,0,c
  3603  0026D4  D000               	goto	l3111
  3604  0026D6                     l3111:
  3605  0026D6  90D8               	bcf	status,0,c
  3606  0026D8  3218               	rrcf	___awdiv@divisor+1,f,c
  3607  0026DA  3217               	rrcf	___awdiv@divisor,f,c
  3608  0026DC  2E19               	decfsz	___awdiv@counter,f,c
  3609  0026DE  D7EC               	goto	l3103
  3610  0026E0  D000               	goto	l3115
  3611  0026E2                     l3115:
  3612  0026E2  501A               	movf	___awdiv@sign,w,c
  3613  0026E4  B4D8               	btfsc	status,2,c
  3614  0026E6  D005               	goto	l3119
  3615  0026E8  6C1B               	negf	___awdiv@quotient,c
  3616  0026EA  1E1C               	comf	___awdiv@quotient+1,f,c
  3617  0026EC  B0D8               	btfsc	status,0,c
  3618  0026EE  2A1C               	incf	___awdiv@quotient+1,f,c
  3619  0026F0  D000               	goto	l3119
  3620  0026F2                     l3119:
  3621  0026F2  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  3622  0026F6  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  3623  0026FA  D000               	goto	l479
  3624  0026FC                     l479:
  3625  0026FC  0012               	return		;funcret
  3626  0026FE                     __end_of___awdiv:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodh	equ	0xFF4
  3633                           prodl	equ	0xFF3
  3634                           intcon2	equ	0xFF1
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           postdec1	equ	0xFE5
  3638                           fsr1l	equ	0xFE1
  3639                           postinc2	equ	0xFDE
  3640                           postdec2	equ	0xFDD
  3641                           fsr2h	equ	0xFDA
  3642                           fsr2l	equ	0xFD9
  3643                           status	equ	0xFD8
  3644                           
  3645 ;; *************** function __tdiv_to_l_ *****************
  3646 ;; Defined at:
  3647 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  f1              3   14[COMRAM] float 
  3650 ;;  f2              3   17[COMRAM] float 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  quot            4   23[COMRAM] unsigned long 
  3653 ;;  exp1            1   28[COMRAM] unsigned char 
  3654 ;;  cntr            1   27[COMRAM] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  4   14[COMRAM] unsigned long 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3664 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;Total ram usage:       15 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    2
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_printf
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text9
  3679  0020C8                     __ptext9:
  3680                           	opt stack 0
  3681  0020C8                     __tdiv_to_l_:
  3682                           	opt stack 27
  3683                           
  3684                           ;incstack = 0
  3685  0020C8  C011  F015         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3686  0020CC  6A16               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3687  0020CE  6A17               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3688  0020D0  3410               	rlcf	__tdiv_to_l_@f1+1,w,c
  3689  0020D2  3615               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3690  0020D4  E301               	bnc	u3751
  3691  0020D6  8016               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3692  0020D8                     u3751:
  3693  0020D8  5015               	movf	??__tdiv_to_l_,w,c
  3694  0020DA  6E1D               	movwf	__tdiv_to_l_@exp1,c
  3695  0020DC  501D               	movf	__tdiv_to_l_@exp1,w,c
  3696  0020DE  A4D8               	btfss	status,2,c
  3697  0020E0  D002               	goto	l3281
  3698  0020E2  D05D               	goto	l3323
  3699  0020E4  D078               	goto	l691
  3700  0020E6                     l3281:
  3701  0020E6  C014  F015         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3702  0020EA  6A16               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3703  0020EC  6A17               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3704  0020EE  3413               	rlcf	__tdiv_to_l_@f2+1,w,c
  3705  0020F0  3615               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3706  0020F2  E301               	bnc	u3771
  3707  0020F4  8016               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3708  0020F6                     u3771:
  3709  0020F6  5015               	movf	??__tdiv_to_l_,w,c
  3710  0020F8  6E1C               	movwf	__tdiv_to_l_@cntr,c
  3711  0020FA  501C               	movf	__tdiv_to_l_@cntr,w,c
  3712  0020FC  A4D8               	btfss	status,2,c
  3713  0020FE  D002               	goto	l3287
  3714  002100  D04E               	goto	l3323
  3715  002102  D069               	goto	l691
  3716  002104                     l3287:
  3717  002104  8E10               	bsf	__tdiv_to_l_@f1+1,7,c
  3718  002106  0EFF               	movlw	255
  3719  002108  160F               	andwf	__tdiv_to_l_@f1,f,c
  3720  00210A  0EFF               	movlw	255
  3721  00210C  1610               	andwf	__tdiv_to_l_@f1+1,f,c
  3722  00210E  0E00               	movlw	0
  3723  002110  1611               	andwf	__tdiv_to_l_@f1+2,f,c
  3724  002112  8E13               	bsf	__tdiv_to_l_@f2+1,7,c
  3725  002114  0EFF               	movlw	255
  3726  002116  1612               	andwf	__tdiv_to_l_@f2,f,c
  3727  002118  0EFF               	movlw	255
  3728  00211A  1613               	andwf	__tdiv_to_l_@f2+1,f,c
  3729  00211C  0E00               	movlw	0
  3730  00211E  1614               	andwf	__tdiv_to_l_@f2+2,f,c
  3731  002120  0E00               	movlw	0
  3732  002122  6E18               	movwf	__tdiv_to_l_@quot,c
  3733  002124  0E00               	movlw	0
  3734  002126  6E19               	movwf	__tdiv_to_l_@quot+1,c
  3735  002128  0E00               	movlw	0
  3736  00212A  6E1A               	movwf	__tdiv_to_l_@quot+2,c
  3737  00212C  0E00               	movlw	0
  3738  00212E  6E1B               	movwf	__tdiv_to_l_@quot+3,c
  3739  002130  0E7F               	movlw	127
  3740  002132  5E1D               	subwf	__tdiv_to_l_@exp1,f,c
  3741  002134  501C               	movf	__tdiv_to_l_@cntr,w,c
  3742  002136  0F98               	addlw	152
  3743  002138  5E1D               	subwf	__tdiv_to_l_@exp1,f,c
  3744  00213A  0E18               	movlw	24
  3745  00213C  6E1C               	movwf	__tdiv_to_l_@cntr,c
  3746  00213E                     l693:
  3747  00213E  90D8               	bcf	status,0,c
  3748  002140  3618               	rlcf	__tdiv_to_l_@quot,f,c
  3749  002142  3619               	rlcf	__tdiv_to_l_@quot+1,f,c
  3750  002144  361A               	rlcf	__tdiv_to_l_@quot+2,f,c
  3751  002146  361B               	rlcf	__tdiv_to_l_@quot+3,f,c
  3752  002148  5012               	movf	__tdiv_to_l_@f2,w,c
  3753  00214A  5C0F               	subwf	__tdiv_to_l_@f1,w,c
  3754  00214C  5013               	movf	__tdiv_to_l_@f2+1,w,c
  3755  00214E  5810               	subwfb	__tdiv_to_l_@f1+1,w,c
  3756  002150  5014               	movf	__tdiv_to_l_@f2+2,w,c
  3757  002152  5811               	subwfb	__tdiv_to_l_@f1+2,w,c
  3758  002154  A0D8               	btfss	status,0,c
  3759  002156  D007               	goto	l694
  3760  002158  5012               	movf	__tdiv_to_l_@f2,w,c
  3761  00215A  5E0F               	subwf	__tdiv_to_l_@f1,f,c
  3762  00215C  5013               	movf	__tdiv_to_l_@f2+1,w,c
  3763  00215E  5A10               	subwfb	__tdiv_to_l_@f1+1,f,c
  3764  002160  5014               	movf	__tdiv_to_l_@f2+2,w,c
  3765  002162  5A11               	subwfb	__tdiv_to_l_@f1+2,f,c
  3766  002164  8018               	bsf	__tdiv_to_l_@quot,0,c
  3767  002166                     l694:
  3768  002166  90D8               	bcf	status,0,c
  3769  002168  360F               	rlcf	__tdiv_to_l_@f1,f,c
  3770  00216A  3610               	rlcf	__tdiv_to_l_@f1+1,f,c
  3771  00216C  3611               	rlcf	__tdiv_to_l_@f1+2,f,c
  3772  00216E  2E1C               	decfsz	__tdiv_to_l_@cntr,f,c
  3773  002170  D7E6               	goto	l693
  3774  002172  D000               	goto	l3309
  3775  002174                     l3309:
  3776  002174  AE1D               	btfss	__tdiv_to_l_@exp1,7,c
  3777  002176  D010               	goto	l3321
  3778  002178  501D               	movf	__tdiv_to_l_@exp1,w,c
  3779  00217A  0A80               	xorlw	128
  3780  00217C  0F97               	addlw	151
  3781  00217E  B0D8               	btfsc	status,0,c
  3782  002180  D003               	goto	l3317
  3783  002182  D00D               	goto	l3323
  3784  002184  D028               	goto	l691
  3785  002186  D000               	goto	l3317
  3786  002188                     l3317:
  3787  002188  90D8               	bcf	status,0,c
  3788  00218A  321B               	rrcf	__tdiv_to_l_@quot+3,f,c
  3789  00218C  321A               	rrcf	__tdiv_to_l_@quot+2,f,c
  3790  00218E  3219               	rrcf	__tdiv_to_l_@quot+1,f,c
  3791  002190  3218               	rrcf	__tdiv_to_l_@quot,f,c
  3792  002192  3E1D               	incfsz	__tdiv_to_l_@exp1,f,c
  3793  002194  D7F9               	goto	l3317
  3794  002196  D017               	goto	l700
  3795  002198                     l3321:
  3796  002198  0E17               	movlw	23
  3797  00219A  641D               	cpfsgt	__tdiv_to_l_@exp1,c
  3798  00219C  D011               	goto	l3329
  3799  00219E                     l3323:
  3800  00219E  0E00               	movlw	0
  3801  0021A0  6E0F               	movwf	?__tdiv_to_l_,c
  3802  0021A2  0E00               	movlw	0
  3803  0021A4  6E10               	movwf	?__tdiv_to_l_+1,c
  3804  0021A6  0E00               	movlw	0
  3805  0021A8  6E11               	movwf	?__tdiv_to_l_+2,c
  3806  0021AA  0E00               	movlw	0
  3807  0021AC  6E12               	movwf	?__tdiv_to_l_+3,c
  3808  0021AE  D013               	goto	l691
  3809  0021B0  D007               	goto	l3329
  3810  0021B2                     l3327:
  3811  0021B2  90D8               	bcf	status,0,c
  3812  0021B4  3618               	rlcf	__tdiv_to_l_@quot,f,c
  3813  0021B6  3619               	rlcf	__tdiv_to_l_@quot+1,f,c
  3814  0021B8  361A               	rlcf	__tdiv_to_l_@quot+2,f,c
  3815  0021BA  361B               	rlcf	__tdiv_to_l_@quot+3,f,c
  3816  0021BC  061D               	decf	__tdiv_to_l_@exp1,f,c
  3817  0021BE  D000               	goto	l3329
  3818  0021C0                     l3329:
  3819  0021C0  501D               	movf	__tdiv_to_l_@exp1,w,c
  3820  0021C2  A4D8               	btfss	status,2,c
  3821  0021C4  D7F6               	goto	l3327
  3822  0021C6                     l700:
  3823  0021C6  C018  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3824  0021CA  C019  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3825  0021CE  C01A  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3826  0021D2  C01B  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3827  0021D6                     l691:
  3828  0021D6  0012               	return		;funcret
  3829  0021D8                     __end_of__tdiv_to_l_:
  3830                           	opt stack 0
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           prodh	equ	0xFF4
  3836                           prodl	equ	0xFF3
  3837                           intcon2	equ	0xFF1
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           postdec1	equ	0xFE5
  3841                           fsr1l	equ	0xFE1
  3842                           postinc2	equ	0xFDE
  3843                           postdec2	equ	0xFDD
  3844                           fsr2h	equ	0xFDA
  3845                           fsr2l	equ	0xFD9
  3846                           status	equ	0xFD8
  3847                           
  3848 ;; *************** function __div_to_l_ *****************
  3849 ;; Defined at:
  3850 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  f1              3   14[COMRAM] unsigned long 
  3853 ;;  f2              3   17[COMRAM] unsigned long 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  quot            4   20[COMRAM] unsigned long 
  3856 ;;  exp1            1   25[COMRAM] unsigned char 
  3857 ;;  cntr            1   24[COMRAM] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  4   14[COMRAM] unsigned long 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3867 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;Total ram usage:       12 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    2
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_printf
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text10
  3882  0021D8                     __ptext10:
  3883                           	opt stack 0
  3884  0021D8                     __div_to_l_:
  3885                           	opt stack 27
  3886                           
  3887                           ;incstack = 0
  3888  0021D8  3411               	rlcf	__div_to_l_@f1+2,w,c
  3889  0021DA  3412               	rlcf	__div_to_l_@f1+3,w,c
  3890  0021DC  6E1A               	movwf	__div_to_l_@exp1,c
  3891  0021DE  501A               	movf	__div_to_l_@exp1,w,c
  3892  0021E0  A4D8               	btfss	status,2,c
  3893  0021E2  D002               	goto	l3337
  3894  0021E4  D061               	goto	l3383
  3895  0021E6  D07C               	goto	l570
  3896  0021E8                     l3337:
  3897  0021E8  3414               	rlcf	__div_to_l_@f2+2,w,c
  3898  0021EA  3415               	rlcf	__div_to_l_@f2+3,w,c
  3899  0021EC  6E19               	movwf	__div_to_l_@cntr,c
  3900  0021EE  5019               	movf	__div_to_l_@cntr,w,c
  3901  0021F0  A4D8               	btfss	status,2,c
  3902  0021F2  D002               	goto	l3343
  3903  0021F4  D059               	goto	l3383
  3904  0021F6  D074               	goto	l570
  3905  0021F8                     l3343:
  3906  0021F8  8E11               	bsf	__div_to_l_@f1+2,7,c
  3907  0021FA  0EFF               	movlw	255
  3908  0021FC  160F               	andwf	__div_to_l_@f1,f,c
  3909  0021FE  0EFF               	movlw	255
  3910  002200  1610               	andwf	__div_to_l_@f1+1,f,c
  3911  002202  0EFF               	movlw	255
  3912  002204  1611               	andwf	__div_to_l_@f1+2,f,c
  3913  002206  0E00               	movlw	0
  3914  002208  1612               	andwf	__div_to_l_@f1+3,f,c
  3915  00220A  8E14               	bsf	__div_to_l_@f2+2,7,c
  3916  00220C  0EFF               	movlw	255
  3917  00220E  1612               	andwf	__div_to_l_@f2,f,c
  3918  002210  0EFF               	movlw	255
  3919  002212  1613               	andwf	__div_to_l_@f2+1,f,c
  3920  002214  0EFF               	movlw	255
  3921  002216  1614               	andwf	__div_to_l_@f2+2,f,c
  3922  002218  0E00               	movlw	0
  3923  00221A  1615               	andwf	__div_to_l_@f2+3,f,c
  3924  00221C  0E00               	movlw	0
  3925  00221E  6E15               	movwf	__div_to_l_@quot,c
  3926  002220  0E00               	movlw	0
  3927  002222  6E16               	movwf	__div_to_l_@quot+1,c
  3928  002224  0E00               	movlw	0
  3929  002226  6E17               	movwf	__div_to_l_@quot+2,c
  3930  002228  0E00               	movlw	0
  3931  00222A  6E18               	movwf	__div_to_l_@quot+3,c
  3932  00222C  0E7F               	movlw	127
  3933  00222E  5E1A               	subwf	__div_to_l_@exp1,f,c
  3934  002230  5019               	movf	__div_to_l_@cntr,w,c
  3935  002232  0FA0               	addlw	160
  3936  002234  5E1A               	subwf	__div_to_l_@exp1,f,c
  3937  002236  0E20               	movlw	32
  3938  002238  6E19               	movwf	__div_to_l_@cntr,c
  3939  00223A  D000               	goto	l3357
  3940  00223C                     l3357:
  3941  00223C  90D8               	bcf	status,0,c
  3942  00223E  3615               	rlcf	__div_to_l_@quot,f,c
  3943  002240  3616               	rlcf	__div_to_l_@quot+1,f,c
  3944  002242  3617               	rlcf	__div_to_l_@quot+2,f,c
  3945  002244  3618               	rlcf	__div_to_l_@quot+3,f,c
  3946  002246  5012               	movf	__div_to_l_@f2,w,c
  3947  002248  5C0F               	subwf	__div_to_l_@f1,w,c
  3948  00224A  5013               	movf	__div_to_l_@f2+1,w,c
  3949  00224C  5810               	subwfb	__div_to_l_@f1+1,w,c
  3950  00224E  5014               	movf	__div_to_l_@f2+2,w,c
  3951  002250  5811               	subwfb	__div_to_l_@f1+2,w,c
  3952  002252  5015               	movf	__div_to_l_@f2+3,w,c
  3953  002254  5812               	subwfb	__div_to_l_@f1+3,w,c
  3954  002256  A0D8               	btfss	status,0,c
  3955  002258  D00A               	goto	l3365
  3956  00225A  5012               	movf	__div_to_l_@f2,w,c
  3957  00225C  5E0F               	subwf	__div_to_l_@f1,f,c
  3958  00225E  5013               	movf	__div_to_l_@f2+1,w,c
  3959  002260  5A10               	subwfb	__div_to_l_@f1+1,f,c
  3960  002262  5014               	movf	__div_to_l_@f2+2,w,c
  3961  002264  5A11               	subwfb	__div_to_l_@f1+2,f,c
  3962  002266  5015               	movf	__div_to_l_@f2+3,w,c
  3963  002268  5A12               	subwfb	__div_to_l_@f1+3,f,c
  3964  00226A  8015               	bsf	__div_to_l_@quot,0,c
  3965  00226C  D000               	goto	l3365
  3966  00226E                     l3365:
  3967  00226E  90D8               	bcf	status,0,c
  3968  002270  360F               	rlcf	__div_to_l_@f1,f,c
  3969  002272  3610               	rlcf	__div_to_l_@f1+1,f,c
  3970  002274  3611               	rlcf	__div_to_l_@f1+2,f,c
  3971  002276  3612               	rlcf	__div_to_l_@f1+3,f,c
  3972  002278  2E19               	decfsz	__div_to_l_@cntr,f,c
  3973  00227A  D7E0               	goto	l3357
  3974  00227C  D000               	goto	l3369
  3975  00227E                     l3369:
  3976  00227E  AE1A               	btfss	__div_to_l_@exp1,7,c
  3977  002280  D010               	goto	l3381
  3978  002282  501A               	movf	__div_to_l_@exp1,w,c
  3979  002284  0A80               	xorlw	128
  3980  002286  0F9F               	addlw	159
  3981  002288  B0D8               	btfsc	status,0,c
  3982  00228A  D003               	goto	l3377
  3983  00228C  D00D               	goto	l3383
  3984  00228E  D028               	goto	l570
  3985  002290  D000               	goto	l3377
  3986  002292                     l3377:
  3987  002292  90D8               	bcf	status,0,c
  3988  002294  3218               	rrcf	__div_to_l_@quot+3,f,c
  3989  002296  3217               	rrcf	__div_to_l_@quot+2,f,c
  3990  002298  3216               	rrcf	__div_to_l_@quot+1,f,c
  3991  00229A  3215               	rrcf	__div_to_l_@quot,f,c
  3992  00229C  3E1A               	incfsz	__div_to_l_@exp1,f,c
  3993  00229E  D7F9               	goto	l3377
  3994  0022A0  D017               	goto	l579
  3995  0022A2                     l3381:
  3996  0022A2  0E1F               	movlw	31
  3997  0022A4  641A               	cpfsgt	__div_to_l_@exp1,c
  3998  0022A6  D011               	goto	l3389
  3999  0022A8                     l3383:
  4000  0022A8  0E00               	movlw	0
  4001  0022AA  6E0F               	movwf	?__div_to_l_,c
  4002  0022AC  0E00               	movlw	0
  4003  0022AE  6E10               	movwf	?__div_to_l_+1,c
  4004  0022B0  0E00               	movlw	0
  4005  0022B2  6E11               	movwf	?__div_to_l_+2,c
  4006  0022B4  0E00               	movlw	0
  4007  0022B6  6E12               	movwf	?__div_to_l_+3,c
  4008  0022B8  D013               	goto	l570
  4009  0022BA  D007               	goto	l3389
  4010  0022BC                     l3387:
  4011  0022BC  90D8               	bcf	status,0,c
  4012  0022BE  3615               	rlcf	__div_to_l_@quot,f,c
  4013  0022C0  3616               	rlcf	__div_to_l_@quot+1,f,c
  4014  0022C2  3617               	rlcf	__div_to_l_@quot+2,f,c
  4015  0022C4  3618               	rlcf	__div_to_l_@quot+3,f,c
  4016  0022C6  061A               	decf	__div_to_l_@exp1,f,c
  4017  0022C8  D000               	goto	l3389
  4018  0022CA                     l3389:
  4019  0022CA  501A               	movf	__div_to_l_@exp1,w,c
  4020  0022CC  A4D8               	btfss	status,2,c
  4021  0022CE  D7F6               	goto	l3387
  4022  0022D0                     l579:
  4023  0022D0  C015  F00F         	movff	__div_to_l_@quot,?__div_to_l_
  4024  0022D4  C016  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4025  0022D8  C017  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4026  0022DC  C018  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4027  0022E0                     l570:
  4028  0022E0  0012               	return		;funcret
  4029  0022E2                     __end_of__div_to_l_:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon2	equ	0xFF1
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           postdec1	equ	0xFE5
  4041                           fsr1l	equ	0xFE1
  4042                           postinc2	equ	0xFDE
  4043                           postdec2	equ	0xFDD
  4044                           fsr2h	equ	0xFDA
  4045                           fsr2l	equ	0xFD9
  4046                           status	equ	0xFD8
  4047                           
  4048 ;; *************** function ___lltoft *****************
  4049 ;; Defined at:
  4050 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  c               4   22[COMRAM] unsigned long 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  exp             1   30[COMRAM] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  3   22[COMRAM] float 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;Total ram usage:        9 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    3
  4071 ;; This function calls:
  4072 ;;		___ftpack
  4073 ;; This function is called by:
  4074 ;;		_printf
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text11
  4079  0029F4                     __ptext11:
  4080                           	opt stack 0
  4081  0029F4                     ___lltoft:
  4082                           	opt stack 26
  4083                           
  4084                           ;incstack = 0
  4085  0029F4  0E8E               	movlw	142
  4086  0029F6  6E1F               	movwf	___lltoft@exp,c
  4087  0029F8  D007               	goto	l3509
  4088  0029FA                     l3507:
  4089  0029FA  90D8               	bcf	status,0,c
  4090  0029FC  321A               	rrcf	___lltoft@c+3,f,c
  4091  0029FE  3219               	rrcf	___lltoft@c+2,f,c
  4092  002A00  3218               	rrcf	___lltoft@c+1,f,c
  4093  002A02  3217               	rrcf	___lltoft@c,f,c
  4094  002A04  2A1F               	incf	___lltoft@exp,f,c
  4095  002A06  D000               	goto	l3509
  4096  002A08                     l3509:
  4097  002A08  0E00               	movlw	0
  4098  002A0A  1417               	andwf	___lltoft@c,w,c
  4099  002A0C  6E1B               	movwf	??___lltoft& (0+255),c
  4100  002A0E  0E00               	movlw	0
  4101  002A10  1418               	andwf	___lltoft@c+1,w,c
  4102  002A12  6E1C               	movwf	(??___lltoft+1)& (0+255),c
  4103  002A14  0E00               	movlw	0
  4104  002A16  1419               	andwf	___lltoft@c+2,w,c
  4105  002A18  6E1D               	movwf	(??___lltoft+2)& (0+255),c
  4106  002A1A  0EFF               	movlw	255
  4107  002A1C  141A               	andwf	___lltoft@c+3,w,c
  4108  002A1E  6E1E               	movwf	(??___lltoft+3)& (0+255),c
  4109  002A20  501B               	movf	??___lltoft,w,c
  4110  002A22  101C               	iorwf	??___lltoft+1,w,c
  4111  002A24  101D               	iorwf	??___lltoft+2,w,c
  4112  002A26  101E               	iorwf	??___lltoft+3,w,c
  4113  002A28  A4D8               	btfss	status,2,c
  4114  002A2A  D7E7               	goto	l3507
  4115  002A2C  C017  F00F         	movff	___lltoft@c,___ftpack@arg
  4116  002A30  C018  F010         	movff	___lltoft@c+1,___ftpack@arg+1
  4117  002A34  C019  F011         	movff	___lltoft@c+2,___ftpack@arg+2
  4118  002A38  C01F  F012         	movff	___lltoft@exp,___ftpack@exp
  4119  002A3C  0E00               	movlw	0
  4120  002A3E  6E13               	movwf	___ftpack@sign,c
  4121  002A40  ECD1  F012         	call	___ftpack	;wreg free
  4122  002A44  C00F  F017         	movff	?___ftpack,?___lltoft
  4123  002A48  C010  F018         	movff	?___ftpack+1,?___lltoft+1
  4124  002A4C  C011  F019         	movff	?___ftpack+2,?___lltoft+2
  4125  002A50  D000               	goto	l805
  4126  002A52                     l805:
  4127  002A52  0012               	return		;funcret
  4128  002A54                     __end_of___lltoft:
  4129                           	opt stack 0
  4130                           tblptru	equ	0xFF8
  4131                           tblptrh	equ	0xFF7
  4132                           tblptrl	equ	0xFF6
  4133                           tablat	equ	0xFF5
  4134                           prodh	equ	0xFF4
  4135                           prodl	equ	0xFF3
  4136                           intcon2	equ	0xFF1
  4137                           postinc0	equ	0xFEE
  4138                           wreg	equ	0xFE8
  4139                           postdec1	equ	0xFE5
  4140                           fsr1l	equ	0xFE1
  4141                           postinc2	equ	0xFDE
  4142                           postdec2	equ	0xFDD
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function ___llmod *****************
  4148 ;; Defined at:
  4149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  dividend        4   14[COMRAM] unsigned long 
  4152 ;;  divisor         4   18[COMRAM] unsigned long 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  counter         1   22[COMRAM] unsigned char 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  4   14[COMRAM] unsigned long 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4164 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;Total ram usage:        9 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    2
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_printf
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text12
  4179  002914                     __ptext12:
  4180                           	opt stack 0
  4181  002914                     ___llmod:
  4182                           	opt stack 27
  4183                           
  4184                           ;incstack = 0
  4185  002914  5013               	movf	___llmod@divisor,w,c
  4186  002916  1014               	iorwf	___llmod@divisor+1,w,c
  4187  002918  1015               	iorwf	___llmod@divisor+2,w,c
  4188  00291A  1016               	iorwf	___llmod@divisor+3,w,c
  4189  00291C  B4D8               	btfsc	status,2,c
  4190  00291E  D029               	goto	l785
  4191  002920  0E01               	movlw	1
  4192  002922  6E17               	movwf	___llmod@counter,c
  4193  002924  D007               	goto	l3495
  4194  002926                     l3493:
  4195  002926  90D8               	bcf	status,0,c
  4196  002928  3613               	rlcf	___llmod@divisor,f,c
  4197  00292A  3614               	rlcf	___llmod@divisor+1,f,c
  4198  00292C  3615               	rlcf	___llmod@divisor+2,f,c
  4199  00292E  3616               	rlcf	___llmod@divisor+3,f,c
  4200  002930  2A17               	incf	___llmod@counter,f,c
  4201  002932  D000               	goto	l3495
  4202  002934                     l3495:
  4203  002934  BE16               	btfsc	___llmod@divisor+3,7,c
  4204  002936  D002               	goto	l3497
  4205  002938  D7F6               	goto	l3493
  4206  00293A  D000               	goto	l3497
  4207  00293C                     l3497:
  4208  00293C  5013               	movf	___llmod@divisor,w,c
  4209  00293E  5C0F               	subwf	___llmod@dividend,w,c
  4210  002940  5014               	movf	___llmod@divisor+1,w,c
  4211  002942  5810               	subwfb	___llmod@dividend+1,w,c
  4212  002944  5015               	movf	___llmod@divisor+2,w,c
  4213  002946  5811               	subwfb	___llmod@dividend+2,w,c
  4214  002948  5016               	movf	___llmod@divisor+3,w,c
  4215  00294A  5812               	subwfb	___llmod@dividend+3,w,c
  4216  00294C  A0D8               	btfss	status,0,c
  4217  00294E  D009               	goto	l3501
  4218  002950  5013               	movf	___llmod@divisor,w,c
  4219  002952  5E0F               	subwf	___llmod@dividend,f,c
  4220  002954  5014               	movf	___llmod@divisor+1,w,c
  4221  002956  5A10               	subwfb	___llmod@dividend+1,f,c
  4222  002958  5015               	movf	___llmod@divisor+2,w,c
  4223  00295A  5A11               	subwfb	___llmod@dividend+2,f,c
  4224  00295C  5016               	movf	___llmod@divisor+3,w,c
  4225  00295E  5A12               	subwfb	___llmod@dividend+3,f,c
  4226  002960  D000               	goto	l3501
  4227  002962                     l3501:
  4228  002962  90D8               	bcf	status,0,c
  4229  002964  3216               	rrcf	___llmod@divisor+3,f,c
  4230  002966  3215               	rrcf	___llmod@divisor+2,f,c
  4231  002968  3214               	rrcf	___llmod@divisor+1,f,c
  4232  00296A  3213               	rrcf	___llmod@divisor,f,c
  4233  00296C  2E17               	decfsz	___llmod@counter,f,c
  4234  00296E  D7E6               	goto	l3497
  4235  002970  D000               	goto	l785
  4236  002972                     l785:
  4237  002972  C00F  F00F         	movff	___llmod@dividend,?___llmod
  4238  002976  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  4239  00297A  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  4240  00297E  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  4241  002982  0012               	return		;funcret
  4242  002984                     __end_of___llmod:
  4243                           	opt stack 0
  4244                           tblptru	equ	0xFF8
  4245                           tblptrh	equ	0xFF7
  4246                           tblptrl	equ	0xFF6
  4247                           tablat	equ	0xFF5
  4248                           prodh	equ	0xFF4
  4249                           prodl	equ	0xFF3
  4250                           intcon2	equ	0xFF1
  4251                           postinc0	equ	0xFEE
  4252                           wreg	equ	0xFE8
  4253                           postdec1	equ	0xFE5
  4254                           fsr1l	equ	0xFE1
  4255                           postinc2	equ	0xFDE
  4256                           postdec2	equ	0xFDD
  4257                           fsr2h	equ	0xFDA
  4258                           fsr2l	equ	0xFD9
  4259                           status	equ	0xFD8
  4260                           
  4261 ;; *************** function ___lldiv *****************
  4262 ;; Defined at:
  4263 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  dividend        4   14[COMRAM] unsigned long 
  4266 ;;  divisor         4   18[COMRAM] unsigned long 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  quotient        4   22[COMRAM] unsigned long 
  4269 ;;  counter         1   26[COMRAM] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  4   14[COMRAM] unsigned long 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4279 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;Total ram usage:       13 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    2
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_printf
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text13
  4294  002794                     __ptext13:
  4295                           	opt stack 0
  4296  002794                     ___lldiv:
  4297                           	opt stack 27
  4298                           
  4299                           ;incstack = 0
  4300  002794  0E00               	movlw	0
  4301  002796  6E17               	movwf	___lldiv@quotient,c
  4302  002798  0E00               	movlw	0
  4303  00279A  6E18               	movwf	___lldiv@quotient+1,c
  4304  00279C  0E00               	movlw	0
  4305  00279E  6E19               	movwf	___lldiv@quotient+2,c
  4306  0027A0  0E00               	movlw	0
  4307  0027A2  6E1A               	movwf	___lldiv@quotient+3,c
  4308  0027A4  5013               	movf	___lldiv@divisor,w,c
  4309  0027A6  1014               	iorwf	___lldiv@divisor+1,w,c
  4310  0027A8  1015               	iorwf	___lldiv@divisor+2,w,c
  4311  0027AA  1016               	iorwf	___lldiv@divisor+3,w,c
  4312  0027AC  B4D8               	btfsc	status,2,c
  4313  0027AE  D02F               	goto	l775
  4314  0027B0  0E01               	movlw	1
  4315  0027B2  6E1B               	movwf	___lldiv@counter,c
  4316  0027B4  D007               	goto	l3475
  4317  0027B6                     l3473:
  4318  0027B6  90D8               	bcf	status,0,c
  4319  0027B8  3613               	rlcf	___lldiv@divisor,f,c
  4320  0027BA  3614               	rlcf	___lldiv@divisor+1,f,c
  4321  0027BC  3615               	rlcf	___lldiv@divisor+2,f,c
  4322  0027BE  3616               	rlcf	___lldiv@divisor+3,f,c
  4323  0027C0  2A1B               	incf	___lldiv@counter,f,c
  4324  0027C2  D000               	goto	l3475
  4325  0027C4                     l3475:
  4326  0027C4  BE16               	btfsc	___lldiv@divisor+3,7,c
  4327  0027C6  D002               	goto	l3477
  4328  0027C8  D7F6               	goto	l3473
  4329  0027CA  D000               	goto	l3477
  4330  0027CC                     l3477:
  4331  0027CC  90D8               	bcf	status,0,c
  4332  0027CE  3617               	rlcf	___lldiv@quotient,f,c
  4333  0027D0  3618               	rlcf	___lldiv@quotient+1,f,c
  4334  0027D2  3619               	rlcf	___lldiv@quotient+2,f,c
  4335  0027D4  361A               	rlcf	___lldiv@quotient+3,f,c
  4336  0027D6  5013               	movf	___lldiv@divisor,w,c
  4337  0027D8  5C0F               	subwf	___lldiv@dividend,w,c
  4338  0027DA  5014               	movf	___lldiv@divisor+1,w,c
  4339  0027DC  5810               	subwfb	___lldiv@dividend+1,w,c
  4340  0027DE  5015               	movf	___lldiv@divisor+2,w,c
  4341  0027E0  5811               	subwfb	___lldiv@dividend+2,w,c
  4342  0027E2  5016               	movf	___lldiv@divisor+3,w,c
  4343  0027E4  5812               	subwfb	___lldiv@dividend+3,w,c
  4344  0027E6  A0D8               	btfss	status,0,c
  4345  0027E8  D00A               	goto	l3485
  4346  0027EA  5013               	movf	___lldiv@divisor,w,c
  4347  0027EC  5E0F               	subwf	___lldiv@dividend,f,c
  4348  0027EE  5014               	movf	___lldiv@divisor+1,w,c
  4349  0027F0  5A10               	subwfb	___lldiv@dividend+1,f,c
  4350  0027F2  5015               	movf	___lldiv@divisor+2,w,c
  4351  0027F4  5A11               	subwfb	___lldiv@dividend+2,f,c
  4352  0027F6  5016               	movf	___lldiv@divisor+3,w,c
  4353  0027F8  5A12               	subwfb	___lldiv@dividend+3,f,c
  4354  0027FA  8017               	bsf	___lldiv@quotient,0,c
  4355  0027FC  D000               	goto	l3485
  4356  0027FE                     l3485:
  4357  0027FE  90D8               	bcf	status,0,c
  4358  002800  3216               	rrcf	___lldiv@divisor+3,f,c
  4359  002802  3215               	rrcf	___lldiv@divisor+2,f,c
  4360  002804  3214               	rrcf	___lldiv@divisor+1,f,c
  4361  002806  3213               	rrcf	___lldiv@divisor,f,c
  4362  002808  2E1B               	decfsz	___lldiv@counter,f,c
  4363  00280A  D7E0               	goto	l3477
  4364  00280C  D000               	goto	l775
  4365  00280E                     l775:
  4366  00280E  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  4367  002812  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  4368  002816  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  4369  00281A  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  4370  00281E  0012               	return		;funcret
  4371  002820                     __end_of___lldiv:
  4372                           	opt stack 0
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           prodh	equ	0xFF4
  4378                           prodl	equ	0xFF3
  4379                           intcon2	equ	0xFF1
  4380                           postinc0	equ	0xFEE
  4381                           wreg	equ	0xFE8
  4382                           postdec1	equ	0xFE5
  4383                           fsr1l	equ	0xFE1
  4384                           postinc2	equ	0xFDE
  4385                           postdec2	equ	0xFDD
  4386                           fsr2h	equ	0xFDA
  4387                           fsr2l	equ	0xFD9
  4388                           status	equ	0xFD8
  4389                           
  4390 ;; *************** function ___fttol *****************
  4391 ;; Defined at:
  4392 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  f1              3   56[COMRAM] float 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  lval            4   66[COMRAM] unsigned long 
  4397 ;;  exp1            1   70[COMRAM] unsigned char 
  4398 ;;  sign1           1   65[COMRAM] unsigned char 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  4   56[COMRAM] long 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;Total ram usage:       15 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    2
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_printf
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text14
  4423  0023DA                     __ptext14:
  4424                           	opt stack 0
  4425  0023DA                     ___fttol:
  4426                           	opt stack 27
  4427                           
  4428                           ;incstack = 0
  4429  0023DA  C03B  F03D         	movff	___fttol@f1+2,??___fttol
  4430  0023DE  6A3E               	clrf	(??___fttol+1)& (0+255),c
  4431  0023E0  6A3F               	clrf	(??___fttol+2)& (0+255),c
  4432  0023E2  343A               	rlcf	___fttol@f1+1,w,c
  4433  0023E4  363D               	rlcf	??___fttol& (0+255),f,c
  4434  0023E6  E301               	bnc	u3961
  4435  0023E8  803E               	bsf	(??___fttol+1)& (0+255),0,c
  4436  0023EA                     u3961:
  4437  0023EA  503D               	movf	??___fttol,w,c
  4438  0023EC  6E47               	movwf	___fttol@exp1,c
  4439  0023EE  5047               	movf	___fttol@exp1,w,c
  4440  0023F0  A4D8               	btfss	status,2,c
  4441  0023F2  D002               	goto	l3427
  4442  0023F4  D039               	goto	l3451
  4443  0023F6  D063               	goto	l736
  4444  0023F8                     l3427:
  4445  0023F8  0E17               	movlw	23
  4446  0023FA  6E3D               	movwf	??___fttol& (0+255),c
  4447  0023FC  C039  F03E         	movff	___fttol@f1,??___fttol+1
  4448  002400  C03A  F03F         	movff	___fttol@f1+1,??___fttol+2
  4449  002404  C03B  F040         	movff	___fttol@f1+2,??___fttol+3
  4450  002408  283D               	incf	??___fttol,w,c
  4451  00240A  6E41               	movwf	(??___fttol+4)& (0+255),c
  4452  00240C  D004               	goto	u3980
  4453  00240E                     u3985:
  4454  00240E  90D8               	bcf	status,0,c
  4455  002410  3240               	rrcf	??___fttol+3,f,c
  4456  002412  323F               	rrcf	??___fttol+2,f,c
  4457  002414  323E               	rrcf	??___fttol+1,f,c
  4458  002416                     u3980:
  4459  002416  2E41               	decfsz	(??___fttol+4)& (0+255),f,c
  4460  002418  D7FA               	goto	u3985
  4461  00241A  503E               	movf	??___fttol+1,w,c
  4462  00241C  6E42               	movwf	___fttol@sign1,c
  4463  00241E  8E3A               	bsf	___fttol@f1+1,7,c
  4464  002420  0EFF               	movlw	255
  4465  002422  1639               	andwf	___fttol@f1,f,c
  4466  002424  0EFF               	movlw	255
  4467  002426  163A               	andwf	___fttol@f1+1,f,c
  4468  002428  0E00               	movlw	0
  4469  00242A  163B               	andwf	___fttol@f1+2,f,c
  4470  00242C  5039               	movf	___fttol@f1,w,c
  4471  00242E  6E43               	movwf	___fttol@lval,c
  4472  002430  503A               	movf	___fttol@f1+1,w,c
  4473  002432  6E44               	movwf	___fttol@lval+1,c
  4474  002434  503B               	movf	___fttol@f1+2,w,c
  4475  002436  6E45               	movwf	___fttol@lval+2,c
  4476  002438  6A46               	clrf	___fttol@lval+3,c
  4477  00243A  0E8E               	movlw	142
  4478  00243C  5E47               	subwf	___fttol@exp1,f,c
  4479  00243E  AE47               	btfss	___fttol@exp1,7,c
  4480  002440  D010               	goto	l3449
  4481  002442  5047               	movf	___fttol@exp1,w,c
  4482  002444  0A80               	xorlw	128
  4483  002446  0F8F               	addlw	143
  4484  002448  B0D8               	btfsc	status,0,c
  4485  00244A  D003               	goto	l3445
  4486  00244C  D00D               	goto	l3451
  4487  00244E  D037               	goto	l736
  4488  002450  D000               	goto	l3445
  4489  002452                     l3445:
  4490  002452  90D8               	bcf	status,0,c
  4491  002454  3246               	rrcf	___fttol@lval+3,f,c
  4492  002456  3245               	rrcf	___fttol@lval+2,f,c
  4493  002458  3244               	rrcf	___fttol@lval+1,f,c
  4494  00245A  3243               	rrcf	___fttol@lval,f,c
  4495  00245C  3E47               	incfsz	___fttol@exp1,f,c
  4496  00245E  D7F9               	goto	l3445
  4497  002460  D019               	goto	l3459
  4498  002462                     l3449:
  4499  002462  0E17               	movlw	23
  4500  002464  6447               	cpfsgt	___fttol@exp1,c
  4501  002466  D011               	goto	l3457
  4502  002468                     l3451:
  4503  002468  0E00               	movlw	0
  4504  00246A  6E39               	movwf	?___fttol,c
  4505  00246C  0E00               	movlw	0
  4506  00246E  6E3A               	movwf	?___fttol+1,c
  4507  002470  0E00               	movlw	0
  4508  002472  6E3B               	movwf	?___fttol+2,c
  4509  002474  0E00               	movlw	0
  4510  002476  6E3C               	movwf	?___fttol+3,c
  4511  002478  D022               	goto	l736
  4512  00247A  D007               	goto	l3457
  4513  00247C                     l3455:
  4514  00247C  90D8               	bcf	status,0,c
  4515  00247E  3643               	rlcf	___fttol@lval,f,c
  4516  002480  3644               	rlcf	___fttol@lval+1,f,c
  4517  002482  3645               	rlcf	___fttol@lval+2,f,c
  4518  002484  3646               	rlcf	___fttol@lval+3,f,c
  4519  002486  0647               	decf	___fttol@exp1,f,c
  4520  002488  D000               	goto	l3457
  4521  00248A                     l3457:
  4522  00248A  5047               	movf	___fttol@exp1,w,c
  4523  00248C  B4D8               	btfsc	status,2,c
  4524  00248E  D002               	goto	l3459
  4525  002490  D7F5               	goto	l3455
  4526  002492  D000               	goto	l3459
  4527  002494                     l3459:
  4528  002494  5042               	movf	___fttol@sign1,w,c
  4529  002496  B4D8               	btfsc	status,2,c
  4530  002498  D009               	goto	l3463
  4531  00249A  1E46               	comf	___fttol@lval+3,f,c
  4532  00249C  1E45               	comf	___fttol@lval+2,f,c
  4533  00249E  1E44               	comf	___fttol@lval+1,f,c
  4534  0024A0  6C43               	negf	___fttol@lval,c
  4535  0024A2  0E00               	movlw	0
  4536  0024A4  2244               	addwfc	___fttol@lval+1,f,c
  4537  0024A6  2245               	addwfc	___fttol@lval+2,f,c
  4538  0024A8  2246               	addwfc	___fttol@lval+3,f,c
  4539  0024AA  D000               	goto	l3463
  4540  0024AC                     l3463:
  4541  0024AC  C043  F039         	movff	___fttol@lval,?___fttol
  4542  0024B0  C044  F03A         	movff	___fttol@lval+1,?___fttol+1
  4543  0024B4  C045  F03B         	movff	___fttol@lval+2,?___fttol+2
  4544  0024B8  C046  F03C         	movff	___fttol@lval+3,?___fttol+3
  4545  0024BC  D000               	goto	l736
  4546  0024BE                     l736:
  4547  0024BE  0012               	return		;funcret
  4548  0024C0                     __end_of___fttol:
  4549                           	opt stack 0
  4550                           tblptru	equ	0xFF8
  4551                           tblptrh	equ	0xFF7
  4552                           tblptrl	equ	0xFF6
  4553                           tablat	equ	0xFF5
  4554                           prodh	equ	0xFF4
  4555                           prodl	equ	0xFF3
  4556                           intcon2	equ	0xFF1
  4557                           postinc0	equ	0xFEE
  4558                           wreg	equ	0xFE8
  4559                           postdec1	equ	0xFE5
  4560                           fsr1l	equ	0xFE1
  4561                           postinc2	equ	0xFDE
  4562                           postdec2	equ	0xFDD
  4563                           fsr2h	equ	0xFDA
  4564                           fsr2l	equ	0xFD9
  4565                           status	equ	0xFD8
  4566                           
  4567 ;; *************** function ___ftsub *****************
  4568 ;; Defined at:
  4569 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  f1              3   71[COMRAM] float 
  4572 ;;  f2              3   74[COMRAM] float 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  3   71[COMRAM] float 
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4584 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;Total ram usage:        6 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    4
  4591 ;; This function calls:
  4592 ;;		___ftadd
  4593 ;; This function is called by:
  4594 ;;		_printf
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text15
  4599  002B50                     __ptext15:
  4600                           	opt stack 0
  4601  002B50                     ___ftsub:
  4602                           	opt stack 25
  4603                           
  4604                           ;incstack = 0
  4605  002B50  504B               	movf	___ftsub@f2,w,c
  4606  002B52  104C               	iorwf	___ftsub@f2+1,w,c
  4607  002B54  104D               	iorwf	___ftsub@f2+2,w,c
  4608  002B56  B4D8               	btfsc	status,2,c
  4609  002B58  D007               	goto	l3395
  4610  002B5A  0E00               	movlw	0
  4611  002B5C  1A4B               	xorwf	___ftsub@f2,f,c
  4612  002B5E  0E00               	movlw	0
  4613  002B60  1A4C               	xorwf	___ftsub@f2+1,f,c
  4614  002B62  0E80               	movlw	128
  4615  002B64  1A4D               	xorwf	___ftsub@f2+2,f,c
  4616  002B66  D000               	goto	l3395
  4617  002B68                     l3395:
  4618  002B68  C048  F03C         	movff	___ftsub@f1,___ftadd@f1
  4619  002B6C  C049  F03D         	movff	___ftsub@f1+1,___ftadd@f1+1
  4620  002B70  C04A  F03E         	movff	___ftsub@f1+2,___ftadd@f1+2
  4621  002B74  C04B  F03F         	movff	___ftsub@f2,___ftadd@f2
  4622  002B78  C04C  F040         	movff	___ftsub@f2+1,___ftadd@f2+1
  4623  002B7C  C04D  F041         	movff	___ftsub@f2+2,___ftadd@f2+2
  4624  002B80  ECC6  F00E         	call	___ftadd	;wreg free
  4625  002B84  C03C  F048         	movff	?___ftadd,?___ftsub
  4626  002B88  C03D  F049         	movff	?___ftadd+1,?___ftsub+1
  4627  002B8C  C03E  F04A         	movff	?___ftadd+2,?___ftsub+2
  4628  002B90  D000               	goto	l732
  4629  002B92                     l732:
  4630  002B92  0012               	return		;funcret
  4631  002B94                     __end_of___ftsub:
  4632                           	opt stack 0
  4633                           tblptru	equ	0xFF8
  4634                           tblptrh	equ	0xFF7
  4635                           tblptrl	equ	0xFF6
  4636                           tablat	equ	0xFF5
  4637                           prodh	equ	0xFF4
  4638                           prodl	equ	0xFF3
  4639                           intcon2	equ	0xFF1
  4640                           postinc0	equ	0xFEE
  4641                           wreg	equ	0xFE8
  4642                           postdec1	equ	0xFE5
  4643                           fsr1l	equ	0xFE1
  4644                           postinc2	equ	0xFDE
  4645                           postdec2	equ	0xFDD
  4646                           fsr2h	equ	0xFDA
  4647                           fsr2l	equ	0xFD9
  4648                           status	equ	0xFD8
  4649                           
  4650 ;; *************** function ___ftadd *****************
  4651 ;; Defined at:
  4652 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  f1              3   59[COMRAM] float 
  4655 ;;  f2              3   62[COMRAM] float 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  exp1            1   70[COMRAM] unsigned char 
  4658 ;;  exp2            1   69[COMRAM] unsigned char 
  4659 ;;  sign            1   68[COMRAM] unsigned char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  3   59[COMRAM] float 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4669 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;Total ram usage:       12 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    3
  4676 ;; This function calls:
  4677 ;;		___ftpack
  4678 ;; This function is called by:
  4679 ;;		_printf
  4680 ;;		___ftsub
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text16
  4685  001D8C                     __ptext16:
  4686                           	opt stack 0
  4687  001D8C                     ___ftadd:
  4688                           	opt stack 25
  4689                           
  4690                           ;incstack = 0
  4691  001D8C  C03E  F042         	movff	___ftadd@f1+2,??___ftadd
  4692  001D90  6A43               	clrf	(??___ftadd+1)& (0+255),c
  4693  001D92  6A44               	clrf	(??___ftadd+2)& (0+255),c
  4694  001D94  343D               	rlcf	___ftadd@f1+1,w,c
  4695  001D96  3642               	rlcf	??___ftadd& (0+255),f,c
  4696  001D98  E301               	bnc	u3181
  4697  001D9A  8043               	bsf	(??___ftadd+1)& (0+255),0,c
  4698  001D9C                     u3181:
  4699  001D9C  5042               	movf	??___ftadd,w,c
  4700  001D9E  6E47               	movwf	___ftadd@exp1,c
  4701  001DA0  C041  F042         	movff	___ftadd@f2+2,??___ftadd
  4702  001DA4  6A43               	clrf	(??___ftadd+1)& (0+255),c
  4703  001DA6  6A44               	clrf	(??___ftadd+2)& (0+255),c
  4704  001DA8  3440               	rlcf	___ftadd@f2+1,w,c
  4705  001DAA  3642               	rlcf	??___ftadd& (0+255),f,c
  4706  001DAC  E301               	bnc	u3191
  4707  001DAE  8043               	bsf	(??___ftadd+1)& (0+255),0,c
  4708  001DB0                     u3191:
  4709  001DB0  5042               	movf	??___ftadd,w,c
  4710  001DB2  6E46               	movwf	___ftadd@exp2,c
  4711  001DB4  5047               	movf	___ftadd@exp1,w,c
  4712  001DB6  B4D8               	btfsc	status,2,c
  4713  001DB8  D00B               	goto	l651
  4714  001DBA  5046               	movf	___ftadd@exp2,w,c
  4715  001DBC  5C47               	subwf	___ftadd@exp1,w,c
  4716  001DBE  B0D8               	btfsc	status,0,c
  4717  001DC0  D00E               	goto	l2969
  4718  001DC2  5047               	movf	___ftadd@exp1,w,c
  4719  001DC4  0800               	sublw	0
  4720  001DC6  2446               	addwf	___ftadd@exp2,w,c
  4721  001DC8  6E42               	movwf	??___ftadd& (0+255),c
  4722  001DCA  0E18               	movlw	24
  4723  001DCC  6442               	cpfsgt	??___ftadd,c
  4724  001DCE  D007               	goto	l2969
  4725  001DD0                     l651:
  4726  001DD0  C03F  F03C         	movff	___ftadd@f2,?___ftadd
  4727  001DD4  C040  F03D         	movff	___ftadd@f2+1,?___ftadd+1
  4728  001DD8  C041  F03E         	movff	___ftadd@f2+2,?___ftadd+2
  4729  001DDC  D0B8               	goto	l652
  4730  001DDE                     l2969:
  4731  001DDE  5046               	movf	___ftadd@exp2,w,c
  4732  001DE0  B4D8               	btfsc	status,2,c
  4733  001DE2  D00B               	goto	l655
  4734  001DE4  5047               	movf	___ftadd@exp1,w,c
  4735  001DE6  5C46               	subwf	___ftadd@exp2,w,c
  4736  001DE8  B0D8               	btfsc	status,0,c
  4737  001DEA  D00E               	goto	l2975
  4738  001DEC  5046               	movf	___ftadd@exp2,w,c
  4739  001DEE  0800               	sublw	0
  4740  001DF0  2447               	addwf	___ftadd@exp1,w,c
  4741  001DF2  6E42               	movwf	??___ftadd& (0+255),c
  4742  001DF4  0E18               	movlw	24
  4743  001DF6  6442               	cpfsgt	??___ftadd,c
  4744  001DF8  D007               	goto	l2975
  4745  001DFA                     l655:
  4746  001DFA  C03C  F03C         	movff	___ftadd@f1,?___ftadd
  4747  001DFE  C03D  F03D         	movff	___ftadd@f1+1,?___ftadd+1
  4748  001E02  C03E  F03E         	movff	___ftadd@f1+2,?___ftadd+2
  4749  001E06  D0A3               	goto	l652
  4750  001E08                     l2975:
  4751  001E08  0E06               	movlw	6
  4752  001E0A  6E45               	movwf	___ftadd@sign,c
  4753  001E0C  AE3E               	btfss	___ftadd@f1+2,7,c
  4754  001E0E  D002               	goto	l2981
  4755  001E10  8E45               	bsf	___ftadd@sign,7,c
  4756  001E12  D000               	goto	l2981
  4757  001E14                     l2981:
  4758  001E14  BE41               	btfsc	___ftadd@f2+2,7,c
  4759  001E16  8C45               	bsf	___ftadd@sign,6,c
  4760  001E18  8E3D               	bsf	___ftadd@f1+1,7,c
  4761  001E1A  0EFF               	movlw	255
  4762  001E1C  163C               	andwf	___ftadd@f1,f,c
  4763  001E1E  0EFF               	movlw	255
  4764  001E20  163D               	andwf	___ftadd@f1+1,f,c
  4765  001E22  0E00               	movlw	0
  4766  001E24  163E               	andwf	___ftadd@f1+2,f,c
  4767  001E26  8E40               	bsf	___ftadd@f2+1,7,c
  4768  001E28  0EFF               	movlw	255
  4769  001E2A  163F               	andwf	___ftadd@f2,f,c
  4770  001E2C  0EFF               	movlw	255
  4771  001E2E  1640               	andwf	___ftadd@f2+1,f,c
  4772  001E30  0E00               	movlw	0
  4773  001E32  1641               	andwf	___ftadd@f2+2,f,c
  4774  001E34  5046               	movf	___ftadd@exp2,w,c
  4775  001E36  5C47               	subwf	___ftadd@exp1,w,c
  4776  001E38  B0D8               	btfsc	status,0,c
  4777  001E3A  D01E               	goto	l3001
  4778  001E3C                     l2991:
  4779  001E3C  90D8               	bcf	status,0,c
  4780  001E3E  363F               	rlcf	___ftadd@f2,f,c
  4781  001E40  3640               	rlcf	___ftadd@f2+1,f,c
  4782  001E42  3641               	rlcf	___ftadd@f2+2,f,c
  4783  001E44  0646               	decf	___ftadd@exp2,f,c
  4784  001E46  5047               	movf	___ftadd@exp1,w,c
  4785  001E48  1846               	xorwf	___ftadd@exp2,w,c
  4786  001E4A  B4D8               	btfsc	status,2,c
  4787  001E4C  D00F               	goto	l2999
  4788  001E4E  0645               	decf	___ftadd@sign,f,c
  4789  001E50  C045  F042         	movff	___ftadd@sign,??___ftadd
  4790  001E54  0E07               	movlw	7
  4791  001E56  1642               	andwf	??___ftadd,f,c
  4792  001E58  B4D8               	btfsc	status,2,c
  4793  001E5A  D008               	goto	l2999
  4794  001E5C  D7EF               	goto	l2991
  4795  001E5E  D006               	goto	l2999
  4796  001E60                     l2997:
  4797  001E60  90D8               	bcf	status,0,c
  4798  001E62  323E               	rrcf	___ftadd@f1+2,f,c
  4799  001E64  323D               	rrcf	___ftadd@f1+1,f,c
  4800  001E66  323C               	rrcf	___ftadd@f1,f,c
  4801  001E68  2A47               	incf	___ftadd@exp1,f,c
  4802  001E6A  D000               	goto	l2999
  4803  001E6C                     l2999:
  4804  001E6C  5046               	movf	___ftadd@exp2,w,c
  4805  001E6E  1847               	xorwf	___ftadd@exp1,w,c
  4806  001E70  B4D8               	btfsc	status,2,c
  4807  001E72  D024               	goto	l666
  4808  001E74  D7F5               	goto	l2997
  4809  001E76  D022               	goto	l666
  4810  001E78                     l3001:
  4811  001E78  5047               	movf	___ftadd@exp1,w,c
  4812  001E7A  5C46               	subwf	___ftadd@exp2,w,c
  4813  001E7C  B0D8               	btfsc	status,0,c
  4814  001E7E  D01E               	goto	l666
  4815  001E80                     l3003:
  4816  001E80  90D8               	bcf	status,0,c
  4817  001E82  363C               	rlcf	___ftadd@f1,f,c
  4818  001E84  363D               	rlcf	___ftadd@f1+1,f,c
  4819  001E86  363E               	rlcf	___ftadd@f1+2,f,c
  4820  001E88  0647               	decf	___ftadd@exp1,f,c
  4821  001E8A  5047               	movf	___ftadd@exp1,w,c
  4822  001E8C  1846               	xorwf	___ftadd@exp2,w,c
  4823  001E8E  B4D8               	btfsc	status,2,c
  4824  001E90  D00F               	goto	l3011
  4825  001E92  0645               	decf	___ftadd@sign,f,c
  4826  001E94  C045  F042         	movff	___ftadd@sign,??___ftadd
  4827  001E98  0E07               	movlw	7
  4828  001E9A  1642               	andwf	??___ftadd,f,c
  4829  001E9C  B4D8               	btfsc	status,2,c
  4830  001E9E  D008               	goto	l3011
  4831  001EA0  D7EF               	goto	l3003
  4832  001EA2  D006               	goto	l3011
  4833  001EA4                     l3009:
  4834  001EA4  90D8               	bcf	status,0,c
  4835  001EA6  3241               	rrcf	___ftadd@f2+2,f,c
  4836  001EA8  3240               	rrcf	___ftadd@f2+1,f,c
  4837  001EAA  323F               	rrcf	___ftadd@f2,f,c
  4838  001EAC  2A46               	incf	___ftadd@exp2,f,c
  4839  001EAE  D000               	goto	l3011
  4840  001EB0                     l3011:
  4841  001EB0  5046               	movf	___ftadd@exp2,w,c
  4842  001EB2  1847               	xorwf	___ftadd@exp1,w,c
  4843  001EB4  B4D8               	btfsc	status,2,c
  4844  001EB6  D002               	goto	l666
  4845  001EB8  D7F5               	goto	l3009
  4846  001EBA  D000               	goto	l666
  4847  001EBC                     l666:
  4848  001EBC  AE45               	btfss	___ftadd@sign,7,c
  4849  001EBE  D00C               	goto	l675
  4850  001EC0  0EFF               	movlw	255
  4851  001EC2  1A3C               	xorwf	___ftadd@f1,f,c
  4852  001EC4  0EFF               	movlw	255
  4853  001EC6  1A3D               	xorwf	___ftadd@f1+1,f,c
  4854  001EC8  0EFF               	movlw	255
  4855  001ECA  1A3E               	xorwf	___ftadd@f1+2,f,c
  4856  001ECC  0E01               	movlw	1
  4857  001ECE  263C               	addwf	___ftadd@f1,f,c
  4858  001ED0  0E00               	movlw	0
  4859  001ED2  223D               	addwfc	___ftadd@f1+1,f,c
  4860  001ED4  0E00               	movlw	0
  4861  001ED6  223E               	addwfc	___ftadd@f1+2,f,c
  4862  001ED8                     l675:
  4863  001ED8  AC45               	btfss	___ftadd@sign,6,c
  4864  001EDA  D00D               	goto	l3017
  4865  001EDC  0EFF               	movlw	255
  4866  001EDE  1A3F               	xorwf	___ftadd@f2,f,c
  4867  001EE0  0EFF               	movlw	255
  4868  001EE2  1A40               	xorwf	___ftadd@f2+1,f,c
  4869  001EE4  0EFF               	movlw	255
  4870  001EE6  1A41               	xorwf	___ftadd@f2+2,f,c
  4871  001EE8  0E01               	movlw	1
  4872  001EEA  263F               	addwf	___ftadd@f2,f,c
  4873  001EEC  0E00               	movlw	0
  4874  001EEE  2240               	addwfc	___ftadd@f2+1,f,c
  4875  001EF0  0E00               	movlw	0
  4876  001EF2  2241               	addwfc	___ftadd@f2+2,f,c
  4877  001EF4  D000               	goto	l3017
  4878  001EF6                     l3017:
  4879  001EF6  0E00               	movlw	0
  4880  001EF8  6E45               	movwf	___ftadd@sign,c
  4881  001EFA  503C               	movf	___ftadd@f1,w,c
  4882  001EFC  263F               	addwf	___ftadd@f2,f,c
  4883  001EFE  503D               	movf	___ftadd@f1+1,w,c
  4884  001F00  2240               	addwfc	___ftadd@f2+1,f,c
  4885  001F02  503E               	movf	___ftadd@f1+2,w,c
  4886  001F04  2241               	addwfc	___ftadd@f2+2,f,c
  4887  001F06  AE41               	btfss	___ftadd@f2+2,7,c
  4888  001F08  D00F               	goto	l3027
  4889  001F0A  0EFF               	movlw	255
  4890  001F0C  1A3F               	xorwf	___ftadd@f2,f,c
  4891  001F0E  0EFF               	movlw	255
  4892  001F10  1A40               	xorwf	___ftadd@f2+1,f,c
  4893  001F12  0EFF               	movlw	255
  4894  001F14  1A41               	xorwf	___ftadd@f2+2,f,c
  4895  001F16  0E01               	movlw	1
  4896  001F18  263F               	addwf	___ftadd@f2,f,c
  4897  001F1A  0E00               	movlw	0
  4898  001F1C  2240               	addwfc	___ftadd@f2+1,f,c
  4899  001F1E  0E00               	movlw	0
  4900  001F20  2241               	addwfc	___ftadd@f2+2,f,c
  4901  001F22  0E01               	movlw	1
  4902  001F24  6E45               	movwf	___ftadd@sign,c
  4903  001F26  D000               	goto	l3027
  4904  001F28                     l3027:
  4905  001F28  C03F  F00F         	movff	___ftadd@f2,___ftpack@arg
  4906  001F2C  C040  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  4907  001F30  C041  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  4908  001F34  C047  F012         	movff	___ftadd@exp1,___ftpack@exp
  4909  001F38  C045  F013         	movff	___ftadd@sign,___ftpack@sign
  4910  001F3C  ECD1  F012         	call	___ftpack	;wreg free
  4911  001F40  C00F  F03C         	movff	?___ftpack,?___ftadd
  4912  001F44  C010  F03D         	movff	?___ftpack+1,?___ftadd+1
  4913  001F48  C011  F03E         	movff	?___ftpack+2,?___ftadd+2
  4914  001F4C  D000               	goto	l652
  4915  001F4E                     l652:
  4916  001F4E  0012               	return		;funcret
  4917  001F50                     __end_of___ftadd:
  4918                           	opt stack 0
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           prodh	equ	0xFF4
  4924                           prodl	equ	0xFF3
  4925                           intcon2	equ	0xFF1
  4926                           postinc0	equ	0xFEE
  4927                           wreg	equ	0xFE8
  4928                           postdec1	equ	0xFE5
  4929                           fsr1l	equ	0xFE1
  4930                           postinc2	equ	0xFDE
  4931                           postdec2	equ	0xFDD
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936 ;; *************** function ___ftneg *****************
  4937 ;; Defined at:
  4938 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  f1              3   14[COMRAM] float 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  3   14[COMRAM] float 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4952 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;Total ram usage:        3 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    2
  4959 ;; This function calls:
  4960 ;;		Nothing
  4961 ;; This function is called by:
  4962 ;;		_printf
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text17
  4967  002C7C                     __ptext17:
  4968                           	opt stack 0
  4969  002C7C                     ___ftneg:
  4970                           	opt stack 27
  4971                           
  4972                           ;incstack = 0
  4973  002C7C  500F               	movf	___ftneg@f1,w,c
  4974  002C7E  1010               	iorwf	___ftneg@f1+1,w,c
  4975  002C80  1011               	iorwf	___ftneg@f1+2,w,c
  4976  002C82  B4D8               	btfsc	status,2,c
  4977  002C84  D006               	goto	l725
  4978  002C86  0E00               	movlw	0
  4979  002C88  1A0F               	xorwf	___ftneg@f1,f,c
  4980  002C8A  0E00               	movlw	0
  4981  002C8C  1A10               	xorwf	___ftneg@f1+1,f,c
  4982  002C8E  0E80               	movlw	128
  4983  002C90  1A11               	xorwf	___ftneg@f1+2,f,c
  4984  002C92                     l725:
  4985  002C92  C00F  F00F         	movff	___ftneg@f1,?___ftneg
  4986  002C96  C010  F010         	movff	___ftneg@f1+1,?___ftneg+1
  4987  002C9A  C011  F011         	movff	___ftneg@f1+2,?___ftneg+2
  4988  002C9E  0012               	return		;funcret
  4989  002CA0                     __end_of___ftneg:
  4990                           	opt stack 0
  4991                           tblptru	equ	0xFF8
  4992                           tblptrh	equ	0xFF7
  4993                           tblptrl	equ	0xFF6
  4994                           tablat	equ	0xFF5
  4995                           prodh	equ	0xFF4
  4996                           prodl	equ	0xFF3
  4997                           intcon2	equ	0xFF1
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           postdec1	equ	0xFE5
  5001                           fsr1l	equ	0xFE1
  5002                           postinc2	equ	0xFDE
  5003                           postdec2	equ	0xFDD
  5004                           fsr2h	equ	0xFDA
  5005                           fsr2l	equ	0xFD9
  5006                           status	equ	0xFD8
  5007                           
  5008 ;; *************** function ___ftge *****************
  5009 ;; Defined at:
  5010 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  ff1             3   14[COMRAM] float 
  5013 ;;  ff2             3   17[COMRAM] float 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;		None               void
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5025 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:        9 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    2
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_main
  5036 ;;		_printf
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text18
  5041  0026FE                     __ptext18:
  5042                           	opt stack 0
  5043  0026FE                     ___ftge:
  5044                           	opt stack 27
  5045                           
  5046                           ;incstack = 0
  5047  0026FE  AE11               	btfss	___ftge@ff1+2,7,c
  5048  002700  D017               	goto	l3403
  5049  002702  C00F  F015         	movff	___ftge@ff1,??___ftge
  5050  002706  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  5051  00270A  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  5052  00270E  1E15               	comf	??___ftge,f,c
  5053  002710  1E16               	comf	??___ftge+1,f,c
  5054  002712  1E17               	comf	??___ftge+2,f,c
  5055  002714  2A15               	incf	??___ftge,f,c
  5056  002716  0E00               	movlw	0
  5057  002718  2216               	addwfc	??___ftge+1,f,c
  5058  00271A  2217               	addwfc	??___ftge+2,f,c
  5059  00271C  0E00               	movlw	0
  5060  00271E  2415               	addwf	??___ftge,w,c
  5061  002720  6E0F               	movwf	___ftge@ff1,c
  5062  002722  0E00               	movlw	0
  5063  002724  2016               	addwfc	??___ftge+1,w,c
  5064  002726  6E10               	movwf	___ftge@ff1+1,c
  5065  002728  0E80               	movlw	128
  5066  00272A  2017               	addwfc	??___ftge+2,w,c
  5067  00272C  6E11               	movwf	___ftge@ff1+2,c
  5068  00272E  D000               	goto	l3403
  5069  002730                     l3403:
  5070  002730  AE14               	btfss	___ftge@ff2+2,7,c
  5071  002732  D017               	goto	l3407
  5072  002734  C012  F015         	movff	___ftge@ff2,??___ftge
  5073  002738  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  5074  00273C  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  5075  002740  1E15               	comf	??___ftge,f,c
  5076  002742  1E16               	comf	??___ftge+1,f,c
  5077  002744  1E17               	comf	??___ftge+2,f,c
  5078  002746  2A15               	incf	??___ftge,f,c
  5079  002748  0E00               	movlw	0
  5080  00274A  2216               	addwfc	??___ftge+1,f,c
  5081  00274C  2217               	addwfc	??___ftge+2,f,c
  5082  00274E  0E00               	movlw	0
  5083  002750  2415               	addwf	??___ftge,w,c
  5084  002752  6E12               	movwf	___ftge@ff2,c
  5085  002754  0E00               	movlw	0
  5086  002756  2016               	addwfc	??___ftge+1,w,c
  5087  002758  6E13               	movwf	___ftge@ff2+1,c
  5088  00275A  0E80               	movlw	128
  5089  00275C  2017               	addwfc	??___ftge+2,w,c
  5090  00275E  6E14               	movwf	___ftge@ff2+2,c
  5091  002760  D000               	goto	l3407
  5092  002762                     l3407:
  5093  002762  0E00               	movlw	0
  5094  002764  1A0F               	xorwf	___ftge@ff1,f,c
  5095  002766  0E00               	movlw	0
  5096  002768  1A10               	xorwf	___ftge@ff1+1,f,c
  5097  00276A  0E80               	movlw	128
  5098  00276C  1A11               	xorwf	___ftge@ff1+2,f,c
  5099  00276E  0E00               	movlw	0
  5100  002770  1A12               	xorwf	___ftge@ff2,f,c
  5101  002772  0E00               	movlw	0
  5102  002774  1A13               	xorwf	___ftge@ff2+1,f,c
  5103  002776  0E80               	movlw	128
  5104  002778  1A14               	xorwf	___ftge@ff2+2,f,c
  5105  00277A  5012               	movf	___ftge@ff2,w,c
  5106  00277C  5C0F               	subwf	___ftge@ff1,w,c
  5107  00277E  5013               	movf	___ftge@ff2+1,w,c
  5108  002780  5810               	subwfb	___ftge@ff1+1,w,c
  5109  002782  5014               	movf	___ftge@ff2+2,w,c
  5110  002784  5811               	subwfb	___ftge@ff1+2,w,c
  5111  002786  B0D8               	btfsc	status,0,c
  5112  002788  D002               	goto	l3413
  5113  00278A  90D8               	bcf	status,0,c
  5114  00278C  D002               	goto	l709
  5115  00278E                     l3413:
  5116  00278E  80D8               	bsf	status,0,c
  5117  002790  D000               	goto	l709
  5118  002792                     l709:
  5119  002792  0012               	return		;funcret
  5120  002794                     __end_of___ftge:
  5121                           	opt stack 0
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodh	equ	0xFF4
  5127                           prodl	equ	0xFF3
  5128                           intcon2	equ	0xFF1
  5129                           postinc0	equ	0xFEE
  5130                           wreg	equ	0xFE8
  5131                           postdec1	equ	0xFE5
  5132                           fsr1l	equ	0xFE1
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function _init_UART *****************
  5140 ;; Defined at:
  5141 ;;		line 43 in file "FireDetector2.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;		None               void
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    3
  5162 ;; This function calls:
  5163 ;;		_OpenUSART
  5164 ;; This function is called by:
  5165 ;;		_main
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text19
  5170  002D0C                     __ptext19:
  5171                           	opt stack 0
  5172  002D0C                     _init_UART:
  5173                           	opt stack 27
  5174                           
  5175                           ;FireDetector2.c: 45: OpenUSART (0b01111111 & 0b10111111 &
  5176                           ;FireDetector2.c: 46: 0b11111110 & 0b11111101 & 0b11111111 &
  5177                           ;FireDetector2.c: 47: 0b11111111, 25);
  5178                           
  5179                           ;incstack = 0
  5180  002D0C  0E00               	movlw	0
  5181  002D0E  6E10               	movwf	OpenUSART@spbrg+1,c
  5182  002D10  0E19               	movlw	25
  5183  002D12  6E0F               	movwf	OpenUSART@spbrg,c
  5184  002D14  0E3C               	movlw	60
  5185  002D16  ECC2  F014         	call	_OpenUSART
  5186                           
  5187                           ;FireDetector2.c: 48: OSCCON = 0x60;
  5188  002D1A  0E60               	movlw	96
  5189  002D1C  6ED3               	movwf	4051,c	;volatile
  5190  002D1E  0012               	return		;funcret
  5191  002D20                     __end_of_init_UART:
  5192                           	opt stack 0
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           prodh	equ	0xFF4
  5198                           prodl	equ	0xFF3
  5199                           intcon2	equ	0xFF1
  5200                           postinc0	equ	0xFEE
  5201                           wreg	equ	0xFE8
  5202                           postdec1	equ	0xFE5
  5203                           fsr1l	equ	0xFE1
  5204                           postinc2	equ	0xFDE
  5205                           postdec2	equ	0xFDD
  5206                           fsr2h	equ	0xFDA
  5207                           fsr2l	equ	0xFD9
  5208                           status	equ	0xFD8
  5209                           
  5210 ;; *************** function _OpenUSART *****************
  5211 ;; Defined at:
  5212 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  config          1    wreg     unsigned char 
  5215 ;;  spbrg           2   14[COMRAM] unsigned int 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  config          1   16[COMRAM] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;		None               void
  5220 ;; Registers used:
  5221 ;;		wreg, status,2
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;Total ram usage:        3 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    2
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_init_UART
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text20
  5242  002984                     __ptext20:
  5243                           	opt stack 0
  5244  002984                     _OpenUSART:
  5245                           	opt stack 27
  5246                           
  5247                           ;incstack = 0
  5248                           ;OpenUSART@config stored from wreg
  5249  002984  6E11               	movwf	OpenUSART@config,c
  5250  002986  0E00               	movlw	0
  5251  002988  6EAC               	movwf	4012,c	;volatile
  5252  00298A  0E00               	movlw	0
  5253  00298C  6EAB               	movwf	4011,c	;volatile
  5254  00298E  A011               	btfss	OpenUSART@config,0,c
  5255  002990  D002               	goto	l3165
  5256  002992  88AC               	bsf	4012,4,c	;volatile
  5257  002994  D000               	goto	l3165
  5258  002996                     l3165:
  5259  002996  A211               	btfss	OpenUSART@config,1,c
  5260  002998  D003               	goto	l3169
  5261  00299A  8CAC               	bsf	4012,6,c	;volatile
  5262  00299C  8CAB               	bsf	4011,6,c	;volatile
  5263  00299E  D000               	goto	l3169
  5264  0029A0                     l3169:
  5265  0029A0  A411               	btfss	OpenUSART@config,2,c
  5266  0029A2  D002               	goto	l3173
  5267  0029A4  8EAC               	bsf	4012,7,c	;volatile
  5268  0029A6  D000               	goto	l3173
  5269  0029A8                     l3173:
  5270  0029A8  A611               	btfss	OpenUSART@config,3,c
  5271  0029AA  D002               	goto	l274
  5272  0029AC  88AB               	bsf	4011,4,c	;volatile
  5273  0029AE  D002               	goto	l3177
  5274  0029B0                     l274:
  5275  0029B0  8AAB               	bsf	4011,5,c	;volatile
  5276  0029B2  D000               	goto	l3177
  5277  0029B4                     l3177:
  5278  0029B4  B811               	btfsc	OpenUSART@config,4,c
  5279  0029B6  84AC               	bsf	4012,2,c	;volatile
  5280  0029B8  989E               	bcf	3998,4,c	;volatile
  5281  0029BA  AA11               	btfss	OpenUSART@config,5,c
  5282  0029BC  D002               	goto	l3185
  5283  0029BE  86AB               	bsf	4011,3,c	;volatile
  5284  0029C0  D000               	goto	l3185
  5285  0029C2                     l3185:
  5286  0029C2  AC11               	btfss	OpenUSART@config,6,c
  5287  0029C4  D002               	goto	l278
  5288  0029C6  8A9D               	bsf	3997,5,c	;volatile
  5289  0029C8  D001               	goto	l279
  5290  0029CA                     l278:
  5291  0029CA  9A9D               	bcf	3997,5,c	;volatile
  5292  0029CC                     l279:
  5293  0029CC  9A9E               	bcf	3998,5,c	;volatile
  5294  0029CE  AE11               	btfss	OpenUSART@config,7,c
  5295  0029D0  D002               	goto	l280
  5296  0029D2  889D               	bsf	3997,4,c	;volatile
  5297  0029D4  D001               	goto	l281
  5298  0029D6                     l280:
  5299  0029D6  989D               	bcf	3997,4,c	;volatile
  5300  0029D8                     l281:
  5301  0029D8  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5302  0029DC  5010               	movf	OpenUSART@spbrg+1,w,c
  5303  0029DE  6EB0               	movwf	4016,c	;volatile
  5304  0029E0  8AAC               	bsf	4012,5,c	;volatile
  5305  0029E2  8EAB               	bsf	4011,7,c	;volatile
  5306  0029E4  9C94               	bcf	3988,6,c	;volatile
  5307  0029E6  8E94               	bsf	3988,7,c	;volatile
  5308  0029E8  B8AC               	btfsc	4012,4,c	;volatile
  5309  0029EA  BEAC               	btfsc	4012,7,c	;volatile
  5310  0029EC  D002               	goto	l283
  5311  0029EE  8C94               	bsf	3988,6,c	;volatile
  5312  0029F0  D000               	goto	l283
  5313  0029F2                     l283:
  5314  0029F2  0012               	return		;funcret
  5315  0029F4                     __end_of_OpenUSART:
  5316                           	opt stack 0
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           intcon2	equ	0xFF1
  5324                           postinc0	equ	0xFEE
  5325                           wreg	equ	0xFE8
  5326                           postdec1	equ	0xFE5
  5327                           fsr1l	equ	0xFE1
  5328                           postinc2	equ	0xFDE
  5329                           postdec2	equ	0xFDD
  5330                           fsr2h	equ	0xFDA
  5331                           fsr2l	equ	0xFD9
  5332                           status	equ	0xFD8
  5333                           
  5334 ;; *************** function _init_Interrupt *****************
  5335 ;; Defined at:
  5336 ;;		line 67 in file "FireDetector2.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;		None               void
  5343 ;; Registers used:
  5344 ;;		None
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;Total ram usage:        0 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    2
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_main
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text21
  5365  002D68                     __ptext21:
  5366                           	opt stack 0
  5367  002D68                     _init_Interrupt:
  5368                           	opt stack 28
  5369                           
  5370                           ;FireDetector2.c: 69: INTCONbits.INT0IF = 0;
  5371                           
  5372                           ;incstack = 0
  5373  002D68  92F2               	bcf	intcon,1,c	;volatile
  5374                           
  5375                           ;FireDetector2.c: 70: INTCONbits.INT0IE = 1;
  5376  002D6A  88F2               	bsf	intcon,4,c	;volatile
  5377                           
  5378                           ;FireDetector2.c: 71: INTCON2bits.INTEDG0 = 0;
  5379  002D6C  9CF1               	bcf	intcon2,6,c	;volatile
  5380                           
  5381                           ;FireDetector2.c: 72: INTCONbits.GIE = 1;
  5382  002D6E  8EF2               	bsf	intcon,7,c	;volatile
  5383  002D70  0012               	return		;funcret
  5384  002D72                     __end_of_init_Interrupt:
  5385                           	opt stack 0
  5386                           tblptru	equ	0xFF8
  5387                           tblptrh	equ	0xFF7
  5388                           tblptrl	equ	0xFF6
  5389                           tablat	equ	0xFF5
  5390                           prodh	equ	0xFF4
  5391                           prodl	equ	0xFF3
  5392                           intcon	equ	0xFF2
  5393                           intcon2	equ	0xFF1
  5394                           postinc0	equ	0xFEE
  5395                           wreg	equ	0xFE8
  5396                           postdec1	equ	0xFE5
  5397                           fsr1l	equ	0xFE1
  5398                           postinc2	equ	0xFDE
  5399                           postdec2	equ	0xFDD
  5400                           fsr2h	equ	0xFDA
  5401                           fsr2l	equ	0xFD9
  5402                           status	equ	0xFD8
  5403                           
  5404 ;; *************** function _init_IO *****************
  5405 ;; Defined at:
  5406 ;;		line 97 in file "FireDetector2.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;		None               void
  5413 ;; Registers used:
  5414 ;;		wreg, status,2
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    2
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text22
  5435  002CF6                     __ptext22:
  5436                           	opt stack 0
  5437  002CF6                     _init_IO:
  5438                           	opt stack 28
  5439                           
  5440                           ;FireDetector2.c: 98: TRISA = 0x01;
  5441                           
  5442                           ;incstack = 0
  5443  002CF6  0E01               	movlw	1
  5444  002CF8  6E92               	movwf	3986,c	;volatile
  5445                           
  5446                           ;FireDetector2.c: 99: TRISB = 0x07;
  5447  002CFA  0E07               	movlw	7
  5448  002CFC  6E93               	movwf	3987,c	;volatile
  5449                           
  5450                           ;FireDetector2.c: 100: TRISC = 0x00;
  5451  002CFE  0E00               	movlw	0
  5452  002D00  6E94               	movwf	3988,c	;volatile
  5453                           
  5454                           ;FireDetector2.c: 101: TRISD = 0x00;
  5455  002D02  0E00               	movlw	0
  5456  002D04  6E95               	movwf	3989,c	;volatile
  5457                           
  5458                           ;FireDetector2.c: 102: TRISE = 0x00;
  5459  002D06  0E00               	movlw	0
  5460  002D08  6E96               	movwf	3990,c	;volatile
  5461  002D0A  0012               	return		;funcret
  5462  002D0C                     __end_of_init_IO:
  5463                           	opt stack 0
  5464                           tblptru	equ	0xFF8
  5465                           tblptrh	equ	0xFF7
  5466                           tblptrl	equ	0xFF6
  5467                           tablat	equ	0xFF5
  5468                           prodh	equ	0xFF4
  5469                           prodl	equ	0xFF3
  5470                           intcon	equ	0xFF2
  5471                           intcon2	equ	0xFF1
  5472                           postinc0	equ	0xFEE
  5473                           wreg	equ	0xFE8
  5474                           postdec1	equ	0xFE5
  5475                           fsr1l	equ	0xFE1
  5476                           postinc2	equ	0xFDE
  5477                           postdec2	equ	0xFDD
  5478                           fsr2h	equ	0xFDA
  5479                           fsr2l	equ	0xFD9
  5480                           status	equ	0xFD8
  5481                           
  5482 ;; *************** function _get_full_ADC *****************
  5483 ;; Defined at:
  5484 ;;		line 82 in file "FireDetector2.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  result          2   18[COMRAM] int 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  2   14[COMRAM] unsigned int 
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;Total ram usage:        6 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    2
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text23
  5513  002C56                     __ptext23:
  5514                           	opt stack 0
  5515  002C56                     _get_full_ADC:
  5516                           	opt stack 28
  5517                           
  5518                           ;FireDetector2.c: 84: int result;
  5519                           ;FireDetector2.c: 85: ADCON0bits.GO=1;
  5520                           
  5521                           ;incstack = 0
  5522  002C56  82C2               	bsf	4034,1,c	;volatile
  5523                           
  5524                           ;FireDetector2.c: 86: while(ADCON0bits.DONE==1);
  5525  002C58  D000               	goto	l112
  5526  002C5A                     l112:
  5527  002C5A  B2C2               	btfsc	4034,1,c	;volatile
  5528  002C5C  D7FE               	goto	l112
  5529                           
  5530                           ;FireDetector2.c: 87: result = (ADRESH * 0x100) + ADRESL;
  5531  002C5E  50C4               	movf	4036,w,c	;volatile
  5532  002C60  6E12               	movwf	(??_get_full_ADC+1)& (0+255),c
  5533  002C62  6A11               	clrf	??_get_full_ADC& (0+255),c
  5534  002C64  50C3               	movf	4035,w,c	;volatile
  5535  002C66  2411               	addwf	??_get_full_ADC,w,c
  5536  002C68  6E13               	movwf	get_full_ADC@result,c
  5537  002C6A  0E00               	movlw	0
  5538  002C6C  2012               	addwfc	??_get_full_ADC+1,w,c
  5539  002C6E  6E14               	movwf	get_full_ADC@result+1,c
  5540                           
  5541                           ;FireDetector2.c: 89: return result;
  5542  002C70  C013  F00F         	movff	get_full_ADC@result,?_get_full_ADC
  5543  002C74  C014  F010         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5544  002C78  D000               	goto	l115
  5545  002C7A                     l115:
  5546  002C7A  0012               	return		;funcret
  5547  002C7C                     __end_of_get_full_ADC:
  5548                           	opt stack 0
  5549                           tblptru	equ	0xFF8
  5550                           tblptrh	equ	0xFF7
  5551                           tblptrl	equ	0xFF6
  5552                           tablat	equ	0xFF5
  5553                           prodh	equ	0xFF4
  5554                           prodl	equ	0xFF3
  5555                           intcon	equ	0xFF2
  5556                           intcon2	equ	0xFF1
  5557                           postinc0	equ	0xFEE
  5558                           wreg	equ	0xFE8
  5559                           postdec1	equ	0xFE5
  5560                           fsr1l	equ	0xFE1
  5561                           postinc2	equ	0xFDE
  5562                           postdec2	equ	0xFDD
  5563                           fsr2h	equ	0xFDA
  5564                           fsr2l	equ	0xFD9
  5565                           status	equ	0xFD8
  5566                           
  5567 ;; *************** function ___lwmod *****************
  5568 ;; Defined at:
  5569 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  dividend        2   14[COMRAM] unsigned int 
  5572 ;;  divisor         2   16[COMRAM] unsigned int 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  counter         1   18[COMRAM] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  2   14[COMRAM] unsigned int 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;Total ram usage:        5 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    2
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text24
  5599  002B04                     __ptext24:
  5600                           	opt stack 0
  5601  002B04                     ___lwmod:
  5602                           	opt stack 28
  5603                           
  5604                           ;incstack = 0
  5605  002B04  5011               	movf	___lwmod@divisor,w,c
  5606  002B06  1012               	iorwf	___lwmod@divisor+1,w,c
  5607  002B08  B4D8               	btfsc	status,2,c
  5608  002B0A  D01D               	goto	l848
  5609  002B0C  0E01               	movlw	1
  5610  002B0E  6E13               	movwf	___lwmod@counter,c
  5611  002B10  D005               	goto	l3807
  5612  002B12                     l3805:
  5613  002B12  90D8               	bcf	status,0,c
  5614  002B14  3611               	rlcf	___lwmod@divisor,f,c
  5615  002B16  3612               	rlcf	___lwmod@divisor+1,f,c
  5616  002B18  2A13               	incf	___lwmod@counter,f,c
  5617  002B1A  D000               	goto	l3807
  5618  002B1C                     l3807:
  5619  002B1C  BE12               	btfsc	___lwmod@divisor+1,7,c
  5620  002B1E  D002               	goto	l3809
  5621  002B20  D7F8               	goto	l3805
  5622  002B22  D000               	goto	l3809
  5623  002B24                     l3809:
  5624  002B24  5011               	movf	___lwmod@divisor,w,c
  5625  002B26  5C0F               	subwf	___lwmod@dividend,w,c
  5626  002B28  5012               	movf	___lwmod@divisor+1,w,c
  5627  002B2A  5810               	subwfb	___lwmod@dividend+1,w,c
  5628  002B2C  A0D8               	btfss	status,0,c
  5629  002B2E  D005               	goto	l3813
  5630  002B30  5011               	movf	___lwmod@divisor,w,c
  5631  002B32  5E0F               	subwf	___lwmod@dividend,f,c
  5632  002B34  5012               	movf	___lwmod@divisor+1,w,c
  5633  002B36  5A10               	subwfb	___lwmod@dividend+1,f,c
  5634  002B38  D000               	goto	l3813
  5635  002B3A                     l3813:
  5636  002B3A  90D8               	bcf	status,0,c
  5637  002B3C  3212               	rrcf	___lwmod@divisor+1,f,c
  5638  002B3E  3211               	rrcf	___lwmod@divisor,f,c
  5639  002B40  2E13               	decfsz	___lwmod@counter,f,c
  5640  002B42  D7F0               	goto	l3809
  5641  002B44  D000               	goto	l848
  5642  002B46                     l848:
  5643  002B46  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  5644  002B4A  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  5645  002B4E  0012               	return		;funcret
  5646  002B50                     __end_of___lwmod:
  5647                           	opt stack 0
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           prodh	equ	0xFF4
  5653                           prodl	equ	0xFF3
  5654                           intcon	equ	0xFF2
  5655                           intcon2	equ	0xFF1
  5656                           postinc0	equ	0xFEE
  5657                           wreg	equ	0xFE8
  5658                           postdec1	equ	0xFE5
  5659                           fsr1l	equ	0xFE1
  5660                           postinc2	equ	0xFDE
  5661                           postdec2	equ	0xFDD
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function ___lwdiv *****************
  5667 ;; Defined at:
  5668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  dividend        2   14[COMRAM] unsigned int 
  5671 ;;  divisor         2   16[COMRAM] unsigned int 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  quotient        2   19[COMRAM] unsigned int 
  5674 ;;  counter         1   18[COMRAM] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  2   14[COMRAM] unsigned int 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5684 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;Total ram usage:        7 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    2
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_main
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text25
  5699  002A54                     __ptext25:
  5700                           	opt stack 0
  5701  002A54                     ___lwdiv:
  5702                           	opt stack 28
  5703                           
  5704                           ;incstack = 0
  5705  002A54  0E00               	movlw	0
  5706  002A56  6E15               	movwf	___lwdiv@quotient+1,c
  5707  002A58  0E00               	movlw	0
  5708  002A5A  6E14               	movwf	___lwdiv@quotient,c
  5709  002A5C  5011               	movf	___lwdiv@divisor,w,c
  5710  002A5E  1012               	iorwf	___lwdiv@divisor+1,w,c
  5711  002A60  B4D8               	btfsc	status,2,c
  5712  002A62  D021               	goto	l838
  5713  002A64  0E01               	movlw	1
  5714  002A66  6E13               	movwf	___lwdiv@counter,c
  5715  002A68  D005               	goto	l3787
  5716  002A6A                     l3785:
  5717  002A6A  90D8               	bcf	status,0,c
  5718  002A6C  3611               	rlcf	___lwdiv@divisor,f,c
  5719  002A6E  3612               	rlcf	___lwdiv@divisor+1,f,c
  5720  002A70  2A13               	incf	___lwdiv@counter,f,c
  5721  002A72  D000               	goto	l3787
  5722  002A74                     l3787:
  5723  002A74  BE12               	btfsc	___lwdiv@divisor+1,7,c
  5724  002A76  D002               	goto	l3789
  5725  002A78  D7F8               	goto	l3785
  5726  002A7A  D000               	goto	l3789
  5727  002A7C                     l3789:
  5728  002A7C  90D8               	bcf	status,0,c
  5729  002A7E  3614               	rlcf	___lwdiv@quotient,f,c
  5730  002A80  3615               	rlcf	___lwdiv@quotient+1,f,c
  5731  002A82  5011               	movf	___lwdiv@divisor,w,c
  5732  002A84  5C0F               	subwf	___lwdiv@dividend,w,c
  5733  002A86  5012               	movf	___lwdiv@divisor+1,w,c
  5734  002A88  5810               	subwfb	___lwdiv@dividend+1,w,c
  5735  002A8A  A0D8               	btfss	status,0,c
  5736  002A8C  D006               	goto	l3797
  5737  002A8E  5011               	movf	___lwdiv@divisor,w,c
  5738  002A90  5E0F               	subwf	___lwdiv@dividend,f,c
  5739  002A92  5012               	movf	___lwdiv@divisor+1,w,c
  5740  002A94  5A10               	subwfb	___lwdiv@dividend+1,f,c
  5741  002A96  8014               	bsf	___lwdiv@quotient,0,c
  5742  002A98  D000               	goto	l3797
  5743  002A9A                     l3797:
  5744  002A9A  90D8               	bcf	status,0,c
  5745  002A9C  3212               	rrcf	___lwdiv@divisor+1,f,c
  5746  002A9E  3211               	rrcf	___lwdiv@divisor,f,c
  5747  002AA0  2E13               	decfsz	___lwdiv@counter,f,c
  5748  002AA2  D7EC               	goto	l3789
  5749  002AA4  D000               	goto	l838
  5750  002AA6                     l838:
  5751  002AA6  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  5752  002AAA  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5753  002AAE  0012               	return		;funcret
  5754  002AB0                     __end_of___lwdiv:
  5755                           	opt stack 0
  5756                           tblptru	equ	0xFF8
  5757                           tblptrh	equ	0xFF7
  5758                           tblptrl	equ	0xFF6
  5759                           tablat	equ	0xFF5
  5760                           prodh	equ	0xFF4
  5761                           prodl	equ	0xFF3
  5762                           intcon	equ	0xFF2
  5763                           intcon2	equ	0xFF1
  5764                           postinc0	equ	0xFEE
  5765                           wreg	equ	0xFE8
  5766                           postdec1	equ	0xFE5
  5767                           fsr1l	equ	0xFE1
  5768                           postinc2	equ	0xFDE
  5769                           postdec2	equ	0xFDD
  5770                           fsr2h	equ	0xFDA
  5771                           fsr2l	equ	0xFD9
  5772                           status	equ	0xFD8
  5773                           
  5774 ;; *************** function ___ftdiv *****************
  5775 ;; Defined at:
  5776 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  f1              3   49[COMRAM] float 
  5779 ;;  f2              3   52[COMRAM] float 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  f3              3   59[COMRAM] float 
  5782 ;;  sign            1   63[COMRAM] unsigned char 
  5783 ;;  exp             1   62[COMRAM] unsigned char 
  5784 ;;  cntr            1   58[COMRAM] unsigned char 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  3   49[COMRAM] float 
  5787 ;; Registers used:
  5788 ;;		wreg, status,2, status,0, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5794 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;Total ram usage:       15 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    3
  5801 ;; This function calls:
  5802 ;;		___ftpack
  5803 ;; This function is called by:
  5804 ;;		_main
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text26
  5809  0024C0                     __ptext26:
  5810                           	opt stack 0
  5811  0024C0                     ___ftdiv:
  5812                           	opt stack 27
  5813                           
  5814                           ;incstack = 0
  5815  0024C0  C034  F038         	movff	___ftdiv@f1+2,??___ftdiv
  5816  0024C4  6A39               	clrf	(??___ftdiv+1)& (0+255),c
  5817  0024C6  6A3A               	clrf	(??___ftdiv+2)& (0+255),c
  5818  0024C8  3433               	rlcf	___ftdiv@f1+1,w,c
  5819  0024CA  3638               	rlcf	??___ftdiv& (0+255),f,c
  5820  0024CC  E301               	bnc	u4441
  5821  0024CE  8039               	bsf	(??___ftdiv+1)& (0+255),0,c
  5822  0024D0                     u4441:
  5823  0024D0  5038               	movf	??___ftdiv,w,c
  5824  0024D2  6E3F               	movwf	___ftdiv@exp,c
  5825  0024D4  503F               	movf	___ftdiv@exp,w,c
  5826  0024D6  A4D8               	btfss	status,2,c
  5827  0024D8  D002               	goto	l3727
  5828  0024DA  D00E               	goto	l3729
  5829  0024DC  D061               	goto	l683
  5830  0024DE                     l3727:
  5831  0024DE  C037  F038         	movff	___ftdiv@f2+2,??___ftdiv
  5832  0024E2  6A39               	clrf	(??___ftdiv+1)& (0+255),c
  5833  0024E4  6A3A               	clrf	(??___ftdiv+2)& (0+255),c
  5834  0024E6  3436               	rlcf	___ftdiv@f2+1,w,c
  5835  0024E8  3638               	rlcf	??___ftdiv& (0+255),f,c
  5836  0024EA  E301               	bnc	u4461
  5837  0024EC  8039               	bsf	(??___ftdiv+1)& (0+255),0,c
  5838  0024EE                     u4461:
  5839  0024EE  5038               	movf	??___ftdiv,w,c
  5840  0024F0  6E40               	movwf	___ftdiv@sign,c
  5841  0024F2  5040               	movf	___ftdiv@sign,w,c
  5842  0024F4  A4D8               	btfss	status,2,c
  5843  0024F6  D007               	goto	l3733
  5844  0024F8                     l3729:
  5845  0024F8  0E00               	movlw	0
  5846  0024FA  6E32               	movwf	?___ftdiv,c
  5847  0024FC  0E00               	movlw	0
  5848  0024FE  6E33               	movwf	?___ftdiv+1,c
  5849  002500  0E00               	movlw	0
  5850  002502  6E34               	movwf	?___ftdiv+2,c
  5851  002504  D04D               	goto	l683
  5852  002506                     l3733:
  5853  002506  0E00               	movlw	0
  5854  002508  6E3C               	movwf	___ftdiv@f3,c
  5855  00250A  0E00               	movlw	0
  5856  00250C  6E3D               	movwf	___ftdiv@f3+1,c
  5857  00250E  0E00               	movlw	0
  5858  002510  6E3E               	movwf	___ftdiv@f3+2,c
  5859  002512  5040               	movf	___ftdiv@sign,w,c
  5860  002514  0F89               	addlw	137
  5861  002516  5E3F               	subwf	___ftdiv@exp,f,c
  5862  002518  C034  F040         	movff	___ftdiv@f1+2,___ftdiv@sign
  5863  00251C  5037               	movf	___ftdiv@f2+2,w,c
  5864  00251E  1A40               	xorwf	___ftdiv@sign,f,c
  5865  002520  0E80               	movlw	128
  5866  002522  1640               	andwf	___ftdiv@sign,f,c
  5867  002524  8E33               	bsf	___ftdiv@f1+1,7,c
  5868  002526  0EFF               	movlw	255
  5869  002528  1632               	andwf	___ftdiv@f1,f,c
  5870  00252A  0EFF               	movlw	255
  5871  00252C  1633               	andwf	___ftdiv@f1+1,f,c
  5872  00252E  0E00               	movlw	0
  5873  002530  1634               	andwf	___ftdiv@f1+2,f,c
  5874  002532  8E36               	bsf	___ftdiv@f2+1,7,c
  5875  002534  0EFF               	movlw	255
  5876  002536  1635               	andwf	___ftdiv@f2,f,c
  5877  002538  0EFF               	movlw	255
  5878  00253A  1636               	andwf	___ftdiv@f2+1,f,c
  5879  00253C  0E00               	movlw	0
  5880  00253E  1637               	andwf	___ftdiv@f2+2,f,c
  5881  002540  0E18               	movlw	24
  5882  002542  6E3B               	movwf	___ftdiv@cntr,c
  5883  002544  D000               	goto	l3753
  5884  002546                     l3753:
  5885  002546  90D8               	bcf	status,0,c
  5886  002548  363C               	rlcf	___ftdiv@f3,f,c
  5887  00254A  363D               	rlcf	___ftdiv@f3+1,f,c
  5888  00254C  363E               	rlcf	___ftdiv@f3+2,f,c
  5889  00254E  5035               	movf	___ftdiv@f2,w,c
  5890  002550  5C32               	subwf	___ftdiv@f1,w,c
  5891  002552  5036               	movf	___ftdiv@f2+1,w,c
  5892  002554  5833               	subwfb	___ftdiv@f1+1,w,c
  5893  002556  5037               	movf	___ftdiv@f2+2,w,c
  5894  002558  5834               	subwfb	___ftdiv@f1+2,w,c
  5895  00255A  A0D8               	btfss	status,0,c
  5896  00255C  D007               	goto	l686
  5897  00255E  5035               	movf	___ftdiv@f2,w,c
  5898  002560  5E32               	subwf	___ftdiv@f1,f,c
  5899  002562  5036               	movf	___ftdiv@f2+1,w,c
  5900  002564  5A33               	subwfb	___ftdiv@f1+1,f,c
  5901  002566  5037               	movf	___ftdiv@f2+2,w,c
  5902  002568  5A34               	subwfb	___ftdiv@f1+2,f,c
  5903  00256A  803C               	bsf	___ftdiv@f3,0,c
  5904  00256C                     l686:
  5905  00256C  90D8               	bcf	status,0,c
  5906  00256E  3632               	rlcf	___ftdiv@f1,f,c
  5907  002570  3633               	rlcf	___ftdiv@f1+1,f,c
  5908  002572  3634               	rlcf	___ftdiv@f1+2,f,c
  5909  002574  2E3B               	decfsz	___ftdiv@cntr,f,c
  5910  002576  D7E7               	goto	l3753
  5911  002578  D000               	goto	l3763
  5912  00257A                     l3763:
  5913  00257A  C03C  F00F         	movff	___ftdiv@f3,___ftpack@arg
  5914  00257E  C03D  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5915  002582  C03E  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5916  002586  C03F  F012         	movff	___ftdiv@exp,___ftpack@exp
  5917  00258A  C040  F013         	movff	___ftdiv@sign,___ftpack@sign
  5918  00258E  ECD1  F012         	call	___ftpack	;wreg free
  5919  002592  C00F  F032         	movff	?___ftpack,?___ftdiv
  5920  002596  C010  F033         	movff	?___ftpack+1,?___ftdiv+1
  5921  00259A  C011  F034         	movff	?___ftpack+2,?___ftdiv+2
  5922  00259E  D000               	goto	l683
  5923  0025A0                     l683:
  5924  0025A0  0012               	return		;funcret
  5925  0025A2                     __end_of___ftdiv:
  5926                           	opt stack 0
  5927                           tblptru	equ	0xFF8
  5928                           tblptrh	equ	0xFF7
  5929                           tblptrl	equ	0xFF6
  5930                           tablat	equ	0xFF5
  5931                           prodh	equ	0xFF4
  5932                           prodl	equ	0xFF3
  5933                           intcon	equ	0xFF2
  5934                           intcon2	equ	0xFF1
  5935                           postinc0	equ	0xFEE
  5936                           wreg	equ	0xFE8
  5937                           postdec1	equ	0xFE5
  5938                           fsr1l	equ	0xFE1
  5939                           postinc2	equ	0xFDE
  5940                           postdec2	equ	0xFDD
  5941                           fsr2h	equ	0xFDA
  5942                           fsr2l	equ	0xFD9
  5943                           status	equ	0xFD8
  5944                           
  5945 ;; *************** function ___awtoft *****************
  5946 ;; Defined at:
  5947 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  c               2   22[COMRAM] int 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  sign            1   25[COMRAM] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  3   22[COMRAM] float 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5961 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;Total ram usage:        4 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    3
  5968 ;; This function calls:
  5969 ;;		___ftpack
  5970 ;; This function is called by:
  5971 ;;		_main
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text27
  5976  002B94                     __ptext27:
  5977                           	opt stack 0
  5978  002B94                     ___awtoft:
  5979                           	opt stack 27
  5980                           
  5981                           ;incstack = 0
  5982  002B94  0E00               	movlw	0
  5983  002B96  6E1A               	movwf	___awtoft@sign,c
  5984  002B98  AE18               	btfss	___awtoft@c+1,7,c
  5985  002B9A  D007               	goto	l3775
  5986  002B9C  6C17               	negf	___awtoft@c,c
  5987  002B9E  1E18               	comf	___awtoft@c+1,f,c
  5988  002BA0  B0D8               	btfsc	status,0,c
  5989  002BA2  2A18               	incf	___awtoft@c+1,f,c
  5990  002BA4  0E01               	movlw	1
  5991  002BA6  6E1A               	movwf	___awtoft@sign,c
  5992  002BA8  D000               	goto	l3775
  5993  002BAA                     l3775:
  5994  002BAA  C017  F00F         	movff	___awtoft@c,___ftpack@arg
  5995  002BAE  C018  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  5996  002BB2  6A11               	clrf	___ftpack@arg+2,c
  5997  002BB4  0E8E               	movlw	142
  5998  002BB6  6E12               	movwf	___ftpack@exp,c
  5999  002BB8  C01A  F013         	movff	___awtoft@sign,___ftpack@sign
  6000  002BBC  ECD1  F012         	call	___ftpack	;wreg free
  6001  002BC0  C00F  F017         	movff	?___ftpack,?___awtoft
  6002  002BC4  C010  F018         	movff	?___ftpack+1,?___awtoft+1
  6003  002BC8  C011  F019         	movff	?___ftpack+2,?___awtoft+2
  6004  002BCC  D000               	goto	l504
  6005  002BCE                     l504:
  6006  002BCE  0012               	return		;funcret
  6007  002BD0                     __end_of___awtoft:
  6008                           	opt stack 0
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           intcon	equ	0xFF2
  6016                           intcon2	equ	0xFF1
  6017                           postinc0	equ	0xFEE
  6018                           wreg	equ	0xFE8
  6019                           postdec1	equ	0xFE5
  6020                           fsr1l	equ	0xFE1
  6021                           postinc2	equ	0xFDE
  6022                           postdec2	equ	0xFDD
  6023                           fsr2h	equ	0xFDA
  6024                           fsr2l	equ	0xFD9
  6025                           status	equ	0xFD8
  6026                           
  6027 ;; *************** function ___ftpack *****************
  6028 ;; Defined at:
  6029 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;  arg             3   14[COMRAM] unsigned um
  6032 ;;  exp             1   17[COMRAM] unsigned char 
  6033 ;;  sign            1   18[COMRAM] unsigned char 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  3   14[COMRAM] float 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6045 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;Total ram usage:        8 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    2
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		___awtoft
  6056 ;;		___ftadd
  6057 ;;		___ftdiv
  6058 ;;		___ftmul
  6059 ;;		___lltoft
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text28
  6064  0025A2                     __ptext28:
  6065                           	opt stack 0
  6066  0025A2                     ___ftpack:
  6067                           	opt stack 25
  6068                           
  6069                           ;incstack = 0
  6070  0025A2  5012               	movf	___ftpack@exp,w,c
  6071  0025A4  B4D8               	btfsc	status,2,c
  6072  0025A6  D005               	goto	l2911
  6073  0025A8  500F               	movf	___ftpack@arg,w,c
  6074  0025AA  1010               	iorwf	___ftpack@arg+1,w,c
  6075  0025AC  1011               	iorwf	___ftpack@arg+2,w,c
  6076  0025AE  A4D8               	btfss	status,2,c
  6077  0025B0  D00E               	goto	l2917
  6078  0025B2                     l2911:
  6079  0025B2  0E00               	movlw	0
  6080  0025B4  6E0F               	movwf	?___ftpack,c
  6081  0025B6  0E00               	movlw	0
  6082  0025B8  6E10               	movwf	?___ftpack+1,c
  6083  0025BA  0E00               	movlw	0
  6084  0025BC  6E11               	movwf	?___ftpack+2,c
  6085  0025BE  D053               	goto	l611
  6086  0025C0  D006               	goto	l2917
  6087  0025C2                     l2915:
  6088  0025C2  2A12               	incf	___ftpack@exp,f,c
  6089  0025C4  90D8               	bcf	status,0,c
  6090  0025C6  3211               	rrcf	___ftpack@arg+2,f,c
  6091  0025C8  3210               	rrcf	___ftpack@arg+1,f,c
  6092  0025CA  320F               	rrcf	___ftpack@arg,f,c
  6093  0025CC  D000               	goto	l2917
  6094  0025CE                     l2917:
  6095  0025CE  0E00               	movlw	0
  6096  0025D0  140F               	andwf	___ftpack@arg,w,c
  6097  0025D2  6E14               	movwf	??___ftpack& (0+255),c
  6098  0025D4  0E00               	movlw	0
  6099  0025D6  1410               	andwf	___ftpack@arg+1,w,c
  6100  0025D8  6E15               	movwf	(??___ftpack+1)& (0+255),c
  6101  0025DA  0EFE               	movlw	254
  6102  0025DC  1411               	andwf	___ftpack@arg+2,w,c
  6103  0025DE  6E16               	movwf	(??___ftpack+2)& (0+255),c
  6104  0025E0  5014               	movf	??___ftpack,w,c
  6105  0025E2  1015               	iorwf	??___ftpack+1,w,c
  6106  0025E4  1016               	iorwf	??___ftpack+2,w,c
  6107  0025E6  B4D8               	btfsc	status,2,c
  6108  0025E8  D00E               	goto	l2923
  6109  0025EA  D7EB               	goto	l2915
  6110  0025EC  D00C               	goto	l2923
  6111  0025EE                     l2919:
  6112  0025EE  2A12               	incf	___ftpack@exp,f,c
  6113  0025F0  0E01               	movlw	1
  6114  0025F2  260F               	addwf	___ftpack@arg,f,c
  6115  0025F4  0E00               	movlw	0
  6116  0025F6  2210               	addwfc	___ftpack@arg+1,f,c
  6117  0025F8  0E00               	movlw	0
  6118  0025FA  2211               	addwfc	___ftpack@arg+2,f,c
  6119  0025FC  90D8               	bcf	status,0,c
  6120  0025FE  3211               	rrcf	___ftpack@arg+2,f,c
  6121  002600  3210               	rrcf	___ftpack@arg+1,f,c
  6122  002602  320F               	rrcf	___ftpack@arg,f,c
  6123  002604  D000               	goto	l2923
  6124  002606                     l2923:
  6125  002606  0E00               	movlw	0
  6126  002608  140F               	andwf	___ftpack@arg,w,c
  6127  00260A  6E14               	movwf	??___ftpack& (0+255),c
  6128  00260C  0E00               	movlw	0
  6129  00260E  1410               	andwf	___ftpack@arg+1,w,c
  6130  002610  6E15               	movwf	(??___ftpack+1)& (0+255),c
  6131  002612  0EFF               	movlw	255
  6132  002614  1411               	andwf	___ftpack@arg+2,w,c
  6133  002616  6E16               	movwf	(??___ftpack+2)& (0+255),c
  6134  002618  5014               	movf	??___ftpack,w,c
  6135  00261A  1015               	iorwf	??___ftpack+1,w,c
  6136  00261C  1016               	iorwf	??___ftpack+2,w,c
  6137  00261E  B4D8               	btfsc	status,2,c
  6138  002620  D008               	goto	l2927
  6139  002622  D7E5               	goto	l2919
  6140  002624  D006               	goto	l2927
  6141  002626                     l2925:
  6142  002626  0612               	decf	___ftpack@exp,f,c
  6143  002628  90D8               	bcf	status,0,c
  6144  00262A  360F               	rlcf	___ftpack@arg,f,c
  6145  00262C  3610               	rlcf	___ftpack@arg+1,f,c
  6146  00262E  3611               	rlcf	___ftpack@arg+2,f,c
  6147  002630  D000               	goto	l2927
  6148  002632                     l2927:
  6149  002632  BE10               	btfsc	___ftpack@arg+1,7,c
  6150  002634  D004               	goto	l622
  6151  002636  0E02               	movlw	2
  6152  002638  6012               	cpfslt	___ftpack@exp,c
  6153  00263A  D7F5               	goto	l2925
  6154  00263C  D000               	goto	l622
  6155  00263E                     l622:
  6156  00263E  B012               	btfsc	___ftpack@exp,0,c
  6157  002640  D002               	goto	l2933
  6158  002642  9E10               	bcf	___ftpack@arg+1,7,c
  6159  002644  D000               	goto	l2933
  6160  002646                     l2933:
  6161  002646  90D8               	bcf	status,0,c
  6162  002648  3212               	rrcf	___ftpack@exp,f,c
  6163  00264A  5012               	movf	___ftpack@exp,w,c
  6164  00264C  1211               	iorwf	___ftpack@arg+2,f,c
  6165  00264E  5013               	movf	___ftpack@sign,w,c
  6166  002650  B4D8               	btfsc	status,2,c
  6167  002652  D002               	goto	l2939
  6168  002654  8E11               	bsf	___ftpack@arg+2,7,c
  6169  002656  D000               	goto	l2939
  6170  002658                     l2939:
  6171  002658  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  6172  00265C  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  6173  002660  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  6174  002664  D000               	goto	l611
  6175  002666                     l611:
  6176  002666  0012               	return		;funcret
  6177  002668                     __end_of___ftpack:
  6178                           	opt stack 0
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           prodh	equ	0xFF4
  6184                           prodl	equ	0xFF3
  6185                           intcon	equ	0xFF2
  6186                           intcon2	equ	0xFF1
  6187                           postinc0	equ	0xFEE
  6188                           wreg	equ	0xFE8
  6189                           postdec1	equ	0xFE5
  6190                           fsr1l	equ	0xFE1
  6191                           postinc2	equ	0xFDE
  6192                           postdec2	equ	0xFDD
  6193                           fsr2h	equ	0xFDA
  6194                           fsr2l	equ	0xFD9
  6195                           status	equ	0xFD8
  6196                           
  6197 ;; *************** function _Select_ADC_Channel *****************
  6198 ;; Defined at:
  6199 ;;		line 92 in file "FireDetector2.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  channel         1    wreg     unsigned char 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  channel         1   14[COMRAM] unsigned char 
  6204 ;; Return value:  Size  Location     Type
  6205 ;;		None               void
  6206 ;; Registers used:
  6207 ;;		wreg, status,2, status,0, prodl, prodh
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6216 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6217 ;;Total ram usage:        1 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    2
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		_main
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text29
  6228  002D52                     __ptext29:
  6229                           	opt stack 0
  6230  002D52                     _Select_ADC_Channel:
  6231                           	opt stack 28
  6232                           
  6233                           ;incstack = 0
  6234                           ;Select_ADC_Channel@channel stored from wreg
  6235  002D52  6E0F               	movwf	Select_ADC_Channel@channel,c
  6236                           
  6237                           ;FireDetector2.c: 94: ADCON0 = channel * 4 + 1;
  6238  002D54  500F               	movf	Select_ADC_Channel@channel,w,c
  6239  002D56  0D04               	mullw	4
  6240  002D58  28F3               	incf	prodl,w,c
  6241  002D5A  6EC2               	movwf	4034,c	;volatile
  6242  002D5C  0012               	return		;funcret
  6243  002D5E                     __end_of_Select_ADC_Channel:
  6244                           	opt stack 0
  6245                           tblptru	equ	0xFF8
  6246                           tblptrh	equ	0xFF7
  6247                           tblptrl	equ	0xFF6
  6248                           tablat	equ	0xFF5
  6249                           prodh	equ	0xFF4
  6250                           prodl	equ	0xFF3
  6251                           intcon	equ	0xFF2
  6252                           intcon2	equ	0xFF1
  6253                           postinc0	equ	0xFEE
  6254                           wreg	equ	0xFE8
  6255                           postdec1	equ	0xFE5
  6256                           fsr1l	equ	0xFE1
  6257                           postinc2	equ	0xFDE
  6258                           postdec2	equ	0xFDD
  6259                           fsr2h	equ	0xFDA
  6260                           fsr2l	equ	0xFD9
  6261                           status	equ	0xFD8
  6262                           
  6263 ;; *************** function _Init_ADC *****************
  6264 ;; Defined at:
  6265 ;;		line 74 in file "FireDetector2.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;		None               void
  6272 ;; Registers used:
  6273 ;;		wreg, status,2
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    2
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_main
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text30
  6294  002D72                     __ptext30:
  6295                           	opt stack 0
  6296  002D72                     _Init_ADC:
  6297                           	opt stack 28
  6298                           
  6299                           ;FireDetector2.c: 77: ADCON1=0x1B ;
  6300                           
  6301                           ;incstack = 0
  6302  002D72  0E1B               	movlw	27
  6303  002D74  6EC1               	movwf	4033,c	;volatile
  6304                           
  6305                           ;FireDetector2.c: 79: ADCON2=0xA9;
  6306  002D76  0EA9               	movlw	169
  6307  002D78  6EC0               	movwf	4032,c	;volatile
  6308  002D7A  0012               	return		;funcret
  6309  002D7C                     __end_of_Init_ADC:
  6310                           	opt stack 0
  6311                           tblptru	equ	0xFF8
  6312                           tblptrh	equ	0xFF7
  6313                           tblptrl	equ	0xFF6
  6314                           tablat	equ	0xFF5
  6315                           prodh	equ	0xFF4
  6316                           prodl	equ	0xFF3
  6317                           intcon	equ	0xFF2
  6318                           intcon2	equ	0xFF1
  6319                           postinc0	equ	0xFEE
  6320                           wreg	equ	0xFE8
  6321                           postdec1	equ	0xFE5
  6322                           fsr1l	equ	0xFE1
  6323                           postinc2	equ	0xFDE
  6324                           postdec2	equ	0xFDD
  6325                           fsr2h	equ	0xFDA
  6326                           fsr2l	equ	0xFD9
  6327                           status	equ	0xFD8
  6328                           
  6329 ;; *************** function _Do_Flashing *****************
  6330 ;; Defined at:
  6331 ;;		line 243 in file "FireDetector2.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;		None
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;		None
  6336 ;; Return value:  Size  Location     Type
  6337 ;;		None               void
  6338 ;; Registers used:
  6339 ;;		wreg, status,2, status,0, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;Total ram usage:        0 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:    4
  6352 ;; This function calls:
  6353 ;;		_Wait_One_Second_With_Beep
  6354 ;; This function is called by:
  6355 ;;		_main
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           	psect	text31
  6360  002C00                     __ptext31:
  6361                           	opt stack 0
  6362  002C00                     _Do_Flashing:
  6363                           	opt stack 26
  6364                           
  6365                           ;FireDetector2.c: 244: FLASHING = 1;
  6366                           
  6367                           ;incstack = 0
  6368  002C00  0E01               	movlw	1
  6369  002C02  D008               	goto	L8
  6370  002C04                     l3547:
  6371                           
  6372                           ;FireDetector2.c: 246: {
  6373                           ;FireDetector2.c: 247: if(Manual_Alarm == 1)
  6374  002C04  0100               	movlb	0	; () banked
  6375  002C06  0597               	decf	_Manual_Alarm& (0+255),w,b
  6376  002C08  A4D8               	btfss	status,2,c
  6377  002C0A  D006               	goto	l164
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;FireDetector2.c: 248: {
  6381                           ;FireDetector2.c: 249: Manual_Alarm = 0;
  6382  002C0C  0E00               	movlw	0
  6383  002C0E  0100               	movlb	0	; () banked
  6384  002C10  6F97               	movwf	_Manual_Alarm& (0+255),b
  6385                           
  6386                           ;FireDetector2.c: 250: FLASHING = 0;
  6387  002C12  0E00               	movlw	0
  6388  002C14                     L8:
  6389  002C14  6E6E               	movwf	_FLASHING,c
  6390                           
  6391                           ;FireDetector2.c: 251: }
  6392  002C16  D007               	goto	l3555
  6393  002C18                     l164:
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;FireDetector2.c: 252: else
  6397                           ;FireDetector2.c: 253: {
  6398                           ;FireDetector2.c: 254: PORTDbits.RD7 = 1;
  6399  002C18  8E83               	bsf	3971,7,c	;volatile
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;FireDetector2.c: 255: Wait_One_Second_With_Beep();
  6403  002C1A  EC90  F016         	call	_Wait_One_Second_With_Beep	;wreg free
  6404                           
  6405                           ;FireDetector2.c: 256: PORTDbits.RD7 = 0;
  6406  002C1E  9E83               	bcf	3971,7,c	;volatile
  6407                           
  6408                           ;FireDetector2.c: 257: Wait_One_Second_With_Beep();
  6409  002C20  EC90  F016         	call	_Wait_One_Second_With_Beep	;wreg free
  6410  002C24  D000               	goto	l3555
  6411  002C26                     l3555:
  6412  002C26  046E               	decf	_FLASHING,w,c
  6413  002C28  B4D8               	btfsc	status,2,c
  6414  002C2A  D7EC               	goto	l3547
  6415  002C2C  0012               	return		;funcret
  6416  002C2E                     __end_of_Do_Flashing:
  6417                           	opt stack 0
  6418                           tblptru	equ	0xFF8
  6419                           tblptrh	equ	0xFF7
  6420                           tblptrl	equ	0xFF6
  6421                           tablat	equ	0xFF5
  6422                           prodh	equ	0xFF4
  6423                           prodl	equ	0xFF3
  6424                           intcon	equ	0xFF2
  6425                           intcon2	equ	0xFF1
  6426                           postinc0	equ	0xFEE
  6427                           wreg	equ	0xFE8
  6428                           postdec1	equ	0xFE5
  6429                           fsr1l	equ	0xFE1
  6430                           postinc2	equ	0xFDE
  6431                           postdec2	equ	0xFDD
  6432                           fsr2h	equ	0xFDA
  6433                           fsr2l	equ	0xFD9
  6434                           status	equ	0xFD8
  6435                           
  6436 ;; *************** function _Wait_One_Second_With_Beep *****************
  6437 ;; Defined at:
  6438 ;;		line 235 in file "FireDetector2.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;		None               void
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    3
  6459 ;; This function calls:
  6460 ;;		_Activate_Buzzer
  6461 ;;		_Deactivate_Buzzer
  6462 ;;		_Wait_Half_Second
  6463 ;; This function is called by:
  6464 ;;		_main
  6465 ;;		_Do_Flashing
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text32
  6470  002D20                     __ptext32:
  6471                           	opt stack 0
  6472  002D20                     _Wait_One_Second_With_Beep:
  6473                           	opt stack 27
  6474                           
  6475                           ;FireDetector2.c: 237: Activate_Buzzer();
  6476                           
  6477                           ;incstack = 0
  6478  002D20  EC99  F016         	call	_Activate_Buzzer	;wreg free
  6479                           
  6480                           ;FireDetector2.c: 238: Wait_Half_Second();
  6481  002D24  EC62  F016         	call	_Wait_Half_Second	;wreg free
  6482                           
  6483                           ;FireDetector2.c: 239: Deactivate_Buzzer();
  6484  002D28  ECC3  F016         	call	_Deactivate_Buzzer	;wreg free
  6485                           
  6486                           ;FireDetector2.c: 240: Wait_Half_Second();
  6487  002D2C  EC62  F016         	call	_Wait_Half_Second	;wreg free
  6488  002D30  0012               	return		;funcret
  6489  002D32                     __end_of_Wait_One_Second_With_Beep:
  6490                           	opt stack 0
  6491                           tblptru	equ	0xFF8
  6492                           tblptrh	equ	0xFF7
  6493                           tblptrl	equ	0xFF6
  6494                           tablat	equ	0xFF5
  6495                           prodh	equ	0xFF4
  6496                           prodl	equ	0xFF3
  6497                           intcon	equ	0xFF2
  6498                           intcon2	equ	0xFF1
  6499                           postinc0	equ	0xFEE
  6500                           wreg	equ	0xFE8
  6501                           postdec1	equ	0xFE5
  6502                           fsr1l	equ	0xFE1
  6503                           postinc2	equ	0xFDE
  6504                           postdec2	equ	0xFDD
  6505                           fsr2h	equ	0xFDA
  6506                           fsr2l	equ	0xFD9
  6507                           status	equ	0xFD8
  6508                           
  6509 ;; *************** function _Wait_Half_Second *****************
  6510 ;; Defined at:
  6511 ;;		line 225 in file "FireDetector2.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;		None
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;		None               void
  6518 ;; Registers used:
  6519 ;;		wreg, status,2
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;Total ram usage:        0 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    2
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_Wait_One_Second_With_Beep
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text33
  6540  002CC4                     __ptext33:
  6541                           	opt stack 0
  6542  002CC4                     _Wait_Half_Second:
  6543                           	opt stack 27
  6544                           
  6545                           ;FireDetector2.c: 227: T0CON = 0x03;
  6546                           
  6547                           ;incstack = 0
  6548  002CC4  0E03               	movlw	3
  6549  002CC6  6ED5               	movwf	4053,c	;volatile
  6550                           
  6551                           ;FireDetector2.c: 228: TMR0L = 0xDB;
  6552  002CC8  0EDB               	movlw	219
  6553  002CCA  6ED6               	movwf	4054,c	;volatile
  6554                           
  6555                           ;FireDetector2.c: 229: TMR0H = 0x0B;
  6556  002CCC  0E0B               	movlw	11
  6557  002CCE  6ED7               	movwf	4055,c	;volatile
  6558                           
  6559                           ;FireDetector2.c: 230: INTCONbits.TMR0IF = 0;
  6560  002CD0  94F2               	bcf	intcon,2,c	;volatile
  6561                           
  6562                           ;FireDetector2.c: 231: T0CONbits.TMR0ON = 1;
  6563  002CD2  8ED5               	bsf	4053,7,c	;volatile
  6564                           
  6565                           ;FireDetector2.c: 232: while (INTCONbits.TMR0IF == 0);
  6566  002CD4  D000               	goto	l153
  6567  002CD6                     l153:
  6568  002CD6  A4F2               	btfss	intcon,2,c	;volatile
  6569  002CD8  D7FE               	goto	l153
  6570                           
  6571                           ;FireDetector2.c: 233: T0CONbits.TMR0ON = 0;
  6572  002CDA  9ED5               	bcf	4053,7,c	;volatile
  6573  002CDC  0012               	return		;funcret
  6574  002CDE                     __end_of_Wait_Half_Second:
  6575                           	opt stack 0
  6576                           tblptru	equ	0xFF8
  6577                           tblptrh	equ	0xFF7
  6578                           tblptrl	equ	0xFF6
  6579                           tablat	equ	0xFF5
  6580                           prodh	equ	0xFF4
  6581                           prodl	equ	0xFF3
  6582                           intcon	equ	0xFF2
  6583                           intcon2	equ	0xFF1
  6584                           postinc0	equ	0xFEE
  6585                           wreg	equ	0xFE8
  6586                           postdec1	equ	0xFE5
  6587                           fsr1l	equ	0xFE1
  6588                           postinc2	equ	0xFDE
  6589                           postdec2	equ	0xFDD
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8
  6593                           
  6594 ;; *************** function _Deactivate_Buzzer *****************
  6595 ;; Defined at:
  6596 ;;		line 219 in file "FireDetector2.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;		None
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;		None
  6601 ;; Return value:  Size  Location     Type
  6602 ;;		None               void
  6603 ;; Registers used:
  6604 ;;		wreg, status,2
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;Total ram usage:        0 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; Hardware stack levels required when called:    2
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_Wait_One_Second_With_Beep
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text34
  6625  002D86                     __ptext34:
  6626                           	opt stack 0
  6627  002D86                     _Deactivate_Buzzer:
  6628                           	opt stack 27
  6629                           
  6630                           ;FireDetector2.c: 221: CCP2CON = 0x0;
  6631                           
  6632                           ;incstack = 0
  6633  002D86  0E00               	movlw	0
  6634  002D88  6EBA               	movwf	4026,c	;volatile
  6635                           
  6636                           ;FireDetector2.c: 222: PORTBbits.RB3 = 0;
  6637  002D8A  9681               	bcf	3969,3,c	;volatile
  6638  002D8C  0012               	return		;funcret
  6639  002D8E                     __end_of_Deactivate_Buzzer:
  6640                           	opt stack 0
  6641                           tblptru	equ	0xFF8
  6642                           tblptrh	equ	0xFF7
  6643                           tblptrl	equ	0xFF6
  6644                           tablat	equ	0xFF5
  6645                           prodh	equ	0xFF4
  6646                           prodl	equ	0xFF3
  6647                           intcon	equ	0xFF2
  6648                           intcon2	equ	0xFF1
  6649                           postinc0	equ	0xFEE
  6650                           wreg	equ	0xFE8
  6651                           postdec1	equ	0xFE5
  6652                           fsr1l	equ	0xFE1
  6653                           postinc2	equ	0xFDE
  6654                           postdec2	equ	0xFDD
  6655                           fsr2h	equ	0xFDA
  6656                           fsr2l	equ	0xFD9
  6657                           status	equ	0xFD8
  6658                           
  6659 ;; *************** function _Activate_Buzzer *****************
  6660 ;; Defined at:
  6661 ;;		line 211 in file "FireDetector2.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;		None               void
  6668 ;; Registers used:
  6669 ;;		wreg, status,2
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; Hardware stack levels required when called:    2
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		_Wait_One_Second_With_Beep
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text35
  6690  002D32                     __ptext35:
  6691                           	opt stack 0
  6692  002D32                     _Activate_Buzzer:
  6693                           	opt stack 27
  6694                           
  6695                           ;FireDetector2.c: 213: PR2 = 0b11111001;
  6696                           
  6697                           ;incstack = 0
  6698  002D32  0EF9               	movlw	249
  6699  002D34  6ECB               	movwf	4043,c	;volatile
  6700                           
  6701                           ;FireDetector2.c: 214: T2CON = 0b00000101;
  6702  002D36  0E05               	movlw	5
  6703  002D38  6ECA               	movwf	4042,c	;volatile
  6704                           
  6705                           ;FireDetector2.c: 215: CCPR2L = 0b01001010;
  6706  002D3A  0E4A               	movlw	74
  6707  002D3C  6EBB               	movwf	4027,c	;volatile
  6708                           
  6709                           ;FireDetector2.c: 216: CCP2CON = 0b00111100;
  6710  002D3E  0E3C               	movlw	60
  6711  002D40  6EBA               	movwf	4026,c	;volatile
  6712  002D42  0012               	return		;funcret
  6713  002D44                     __end_of_Activate_Buzzer:
  6714                           	opt stack 0
  6715                           tblptru	equ	0xFF8
  6716                           tblptrh	equ	0xFF7
  6717                           tblptrl	equ	0xFF6
  6718                           tablat	equ	0xFF5
  6719                           prodh	equ	0xFF4
  6720                           prodl	equ	0xFF3
  6721                           intcon	equ	0xFF2
  6722                           intcon2	equ	0xFF1
  6723                           postinc0	equ	0xFEE
  6724                           wreg	equ	0xFE8
  6725                           postdec1	equ	0xFE5
  6726                           fsr1l	equ	0xFE1
  6727                           postinc2	equ	0xFDE
  6728                           postdec2	equ	0xFDD
  6729                           fsr2h	equ	0xFDA
  6730                           fsr2l	equ	0xFD9
  6731                           status	equ	0xFD8
  6732                           
  6733 ;; *************** function _Display_Upper_Digit *****************
  6734 ;; Defined at:
  6735 ;;		line 199 in file "FireDetector2.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  digit           1    wreg     unsigned char 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  digit           1   15[COMRAM] unsigned char 
  6740 ;;  bit6            2   16[COMRAM] int 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;		None               void
  6743 ;; Registers used:
  6744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;Total ram usage:        4 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    2
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_main
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text36
  6765  002AB0                     __ptext36:
  6766                           	opt stack 0
  6767  002AB0                     _Display_Upper_Digit:
  6768                           	opt stack 28
  6769                           
  6770                           ;incstack = 0
  6771                           ;Display_Upper_Digit@digit stored from wreg
  6772  002AB0  6E10               	movwf	Display_Upper_Digit@digit,c
  6773                           
  6774                           ;FireDetector2.c: 201: PORTC = array[digit] & 0x3f;
  6775  002AB2  5010               	movf	Display_Upper_Digit@digit,w,c
  6776  002AB4  0D01               	mullw	1
  6777  002AB6  0E64               	movlw	low _array
  6778  002AB8  24F3               	addwf	prodl,w,c
  6779  002ABA  6ED9               	movwf	fsr2l,c
  6780  002ABC  0E00               	movlw	high _array
  6781  002ABE  20F4               	addwfc	prodh,w,c
  6782  002AC0  6EDA               	movwf	fsr2h,c
  6783  002AC2  50DF               	movf	indf2,w,c
  6784  002AC4  0B3F               	andlw	63
  6785  002AC6  6E82               	movwf	3970,c	;volatile
  6786                           
  6787                           ;FireDetector2.c: 202: int bit6 = array[digit]&0x40;
  6788  002AC8  5010               	movf	Display_Upper_Digit@digit,w,c
  6789  002ACA  0D01               	mullw	1
  6790  002ACC  0E64               	movlw	low _array
  6791  002ACE  24F3               	addwf	prodl,w,c
  6792  002AD0  6ED9               	movwf	fsr2l,c
  6793  002AD2  0E00               	movlw	high _array
  6794  002AD4  20F4               	addwfc	prodh,w,c
  6795  002AD6  6EDA               	movwf	fsr2h,c
  6796  002AD8  50DF               	movf	indf2,w,c
  6797  002ADA  6E0F               	movwf	??_Display_Upper_Digit& (0+255),c
  6798  002ADC  0E40               	movlw	64
  6799  002ADE  160F               	andwf	??_Display_Upper_Digit,f,c
  6800  002AE0  500F               	movf	??_Display_Upper_Digit,w,c
  6801  002AE2  6E11               	movwf	Display_Upper_Digit@bit6,c
  6802  002AE4  6A12               	clrf	Display_Upper_Digit@bit6+1,c
  6803                           
  6804                           ;FireDetector2.c: 203: if(bit6 == 0x40){
  6805  002AE6  0E40               	movlw	64
  6806  002AE8  1811               	xorwf	Display_Upper_Digit@bit6,w,c
  6807  002AEA  1012               	iorwf	Display_Upper_Digit@bit6+1,w,c
  6808  002AEC  A4D8               	btfss	status,2,c
  6809  002AEE  D002               	goto	l3563
  6810                           
  6811                           ;FireDetector2.c: 204: PORTE = 0x01;
  6812  002AF0  0E01               	movlw	1
  6813  002AF2  D005               	goto	L9
  6814  002AF4                     l3563:
  6815                           
  6816                           ;FireDetector2.c: 206: else if(bit6 == 0x00){
  6817  002AF4  5011               	movf	Display_Upper_Digit@bit6,w,c
  6818  002AF6  1012               	iorwf	Display_Upper_Digit@bit6+1,w,c
  6819  002AF8  A4D8               	btfss	status,2,c
  6820  002AFA  D003               	goto	l144
  6821                           
  6822                           ;FireDetector2.c: 207: PORTE = 0x00;
  6823  002AFC  0E00               	movlw	0
  6824  002AFE                     L9:
  6825  002AFE  6E84               	movwf	3972,c	;volatile
  6826  002B00  D000               	goto	l144
  6827  002B02                     l144:
  6828  002B02  0012               	return		;funcret
  6829  002B04                     __end_of_Display_Upper_Digit:
  6830                           	opt stack 0
  6831                           tblptru	equ	0xFF8
  6832                           tblptrh	equ	0xFF7
  6833                           tblptrl	equ	0xFF6
  6834                           tablat	equ	0xFF5
  6835                           prodh	equ	0xFF4
  6836                           prodl	equ	0xFF3
  6837                           intcon	equ	0xFF2
  6838                           intcon2	equ	0xFF1
  6839                           postinc0	equ	0xFEE
  6840                           wreg	equ	0xFE8
  6841                           postdec1	equ	0xFE5
  6842                           fsr1l	equ	0xFE1
  6843                           indf2	equ	0xFDF
  6844                           postinc2	equ	0xFDE
  6845                           postdec2	equ	0xFDD
  6846                           fsr2h	equ	0xFDA
  6847                           fsr2l	equ	0xFD9
  6848                           status	equ	0xFD8
  6849                           
  6850 ;; *************** function _Display_Lower_Digit *****************
  6851 ;; Defined at:
  6852 ;;		line 194 in file "FireDetector2.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  digit           1    wreg     unsigned char 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  digit           1   14[COMRAM] unsigned char 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;		None               void
  6859 ;; Registers used:
  6860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;Total ram usage:        1 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    2
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_main
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text37
  6881  002CDE                     __ptext37:
  6882                           	opt stack 0
  6883  002CDE                     _Display_Lower_Digit:
  6884                           	opt stack 28
  6885                           
  6886                           ;incstack = 0
  6887                           ;Display_Lower_Digit@digit stored from wreg
  6888  002CDE  6E0F               	movwf	Display_Lower_Digit@digit,c
  6889                           
  6890                           ;FireDetector2.c: 196: PORTD = array[digit];
  6891  002CE0  500F               	movf	Display_Lower_Digit@digit,w,c
  6892  002CE2  0D01               	mullw	1
  6893  002CE4  0E64               	movlw	low _array
  6894  002CE6  24F3               	addwf	prodl,w,c
  6895  002CE8  6ED9               	movwf	fsr2l,c
  6896  002CEA  0E00               	movlw	high _array
  6897  002CEC  20F4               	addwfc	prodh,w,c
  6898  002CEE  6EDA               	movwf	fsr2h,c
  6899  002CF0  50DF               	movf	indf2,w,c
  6900  002CF2  6E83               	movwf	3971,c	;volatile
  6901  002CF4  0012               	return		;funcret
  6902  002CF6                     __end_of_Display_Lower_Digit:
  6903                           	opt stack 0
  6904                           tblptru	equ	0xFF8
  6905                           tblptrh	equ	0xFF7
  6906                           tblptrl	equ	0xFF6
  6907                           tablat	equ	0xFF5
  6908                           prodh	equ	0xFF4
  6909                           prodl	equ	0xFF3
  6910                           intcon	equ	0xFF2
  6911                           intcon2	equ	0xFF1
  6912                           postinc0	equ	0xFEE
  6913                           wreg	equ	0xFE8
  6914                           postdec1	equ	0xFE5
  6915                           fsr1l	equ	0xFE1
  6916                           indf2	equ	0xFDF
  6917                           postinc2	equ	0xFDE
  6918                           postdec2	equ	0xFDD
  6919                           fsr2h	equ	0xFDA
  6920                           fsr2l	equ	0xFD9
  6921                           status	equ	0xFD8
  6922                           
  6923 ;; *************** function _Delay_One_Sec *****************
  6924 ;; Defined at:
  6925 ;;		line 38 in file "FireDetector2.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;		None
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;  I               2   14[COMRAM] int 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;		None               void
  6932 ;; Registers used:
  6933 ;;		wreg, status,2, status,0
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;Total ram usage:        2 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    2
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_main
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text38
  6954  002CA0                     __ptext38:
  6955                           	opt stack 0
  6956  002CA0                     _Delay_One_Sec:
  6957                           	opt stack 28
  6958                           
  6959                           ;FireDetector2.c: 40: for(int I=0; I <17000; I++);
  6960                           
  6961                           ;incstack = 0
  6962  002CA0  0E00               	movlw	0
  6963  002CA2  6E10               	movwf	Delay_One_Sec@I+1,c
  6964  002CA4  0E00               	movlw	0
  6965  002CA6  6E0F               	movwf	Delay_One_Sec@I,c
  6966  002CA8                     l3517:
  6967  002CA8  BE10               	btfsc	Delay_One_Sec@I+1,7,c
  6968  002CAA  D008               	goto	l3521
  6969  002CAC  0E68               	movlw	104
  6970  002CAE  5C0F               	subwf	Delay_One_Sec@I,w,c
  6971  002CB0  0E42               	movlw	66
  6972  002CB2  5810               	subwfb	Delay_One_Sec@I+1,w,c
  6973  002CB4  B0D8               	btfsc	status,0,c
  6974  002CB6  D005               	goto	l87
  6975  002CB8  D001               	goto	l3521
  6976  002CBA  D003               	goto	l87
  6977  002CBC                     l3521:
  6978  002CBC  4A0F               	infsnz	Delay_One_Sec@I,f,c
  6979  002CBE  2A10               	incf	Delay_One_Sec@I+1,f,c
  6980  002CC0  D7F3               	goto	l3517
  6981  002CC2                     l87:
  6982  002CC2  0012               	return		;funcret
  6983  002CC4                     __end_of_Delay_One_Sec:
  6984                           	opt stack 0
  6985                           tblptru	equ	0xFF8
  6986                           tblptrh	equ	0xFF7
  6987                           tblptrl	equ	0xFF6
  6988                           tablat	equ	0xFF5
  6989                           prodh	equ	0xFF4
  6990                           prodl	equ	0xFF3
  6991                           intcon	equ	0xFF2
  6992                           intcon2	equ	0xFF1
  6993                           postinc0	equ	0xFEE
  6994                           wreg	equ	0xFE8
  6995                           postdec1	equ	0xFE5
  6996                           fsr1l	equ	0xFE1
  6997                           indf2	equ	0xFDF
  6998                           postinc2	equ	0xFDE
  6999                           postdec2	equ	0xFDD
  7000                           fsr2h	equ	0xFDA
  7001                           fsr2l	equ	0xFD9
  7002                           status	equ	0xFD8
  7003                           
  7004 ;; *************** function _chkisr *****************
  7005 ;; Defined at:
  7006 ;;		line 63 in file "FireDetector2.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;		None
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;		None               void
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;Total ram usage:       14 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    1
  7027 ;; This function calls:
  7028 ;;		_INT0_ISR
  7029 ;; This function is called by:
  7030 ;;		Interrupt level 2
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	intcode
  7035  000008                     __pintcode:
  7036                           	opt stack 0
  7037  000008                     _chkisr:
  7038                           	opt stack 25
  7039                           
  7040                           ;incstack = 0
  7041  000008  CFFA F001          	movff	pclath,??_chkisr
  7042  00000C  CFFB F002          	movff	pclatu,??_chkisr+1
  7043  000010  CFE9 F003          	movff	fsr0l,??_chkisr+2
  7044  000014  ED51  F014         	call	int_func,f	;refresh shadow registers
  7045                           pclatu	equ	0xFFB
  7046                           pclath	equ	0xFFA
  7047                           tblptru	equ	0xFF8
  7048                           tblptrh	equ	0xFF7
  7049                           tblptrl	equ	0xFF6
  7050                           tablat	equ	0xFF5
  7051                           prodh	equ	0xFF4
  7052                           prodl	equ	0xFF3
  7053                           intcon	equ	0xFF2
  7054                           intcon2	equ	0xFF1
  7055                           postinc0	equ	0xFEE
  7056                           fsr0l	equ	0xFE9
  7057                           wreg	equ	0xFE8
  7058                           postdec1	equ	0xFE5
  7059                           fsr1l	equ	0xFE1
  7060                           indf2	equ	0xFDF
  7061                           postinc2	equ	0xFDE
  7062                           postdec2	equ	0xFDD
  7063                           fsr2h	equ	0xFDA
  7064                           fsr2l	equ	0xFD9
  7065                           status	equ	0xFD8
  7066                           
  7067                           	psect	intcode_body
  7068  0028A2                     __pintcode_body:
  7069                           	opt stack 25
  7070  0028A2                     int_func:
  7071                           	opt stack 25
  7072  0028A2  0006               	pop		; remove dummy address from shadow register refresh
  7073  0028A4  CFEA F004          	movff	fsr0h,??_chkisr+3
  7074  0028A8  CFE1 F005          	movff	fsr1l,??_chkisr+4
  7075  0028AC  CFE2 F006          	movff	fsr1h,??_chkisr+5
  7076  0028B0  CFD9 F007          	movff	fsr2l,??_chkisr+6
  7077  0028B4  CFDA F008          	movff	fsr2h,??_chkisr+7
  7078  0028B8  CFF3 F009          	movff	prodl,??_chkisr+8
  7079  0028BC  CFF4 F00A          	movff	prodh,??_chkisr+9
  7080  0028C0  CFF6 F00B          	movff	tblptrl,??_chkisr+10
  7081  0028C4  CFF7 F00C          	movff	tblptrh,??_chkisr+11
  7082  0028C8  CFF8 F00D          	movff	tblptru,??_chkisr+12
  7083  0028CC  CFF5 F00E          	movff	tablat,??_chkisr+13
  7084                           
  7085                           ;FireDetector2.c: 65: if (INTCONbits.INT0IF == 1) INT0_ISR();
  7086  0028D0  A2F2               	btfss	intcon,1,c	;volatile
  7087  0028D2  D003               	goto	i2l103
  7088  0028D4  ECBE  F016         	call	_INT0_ISR	;wreg free
  7089  0028D8  D000               	goto	i2l103
  7090  0028DA                     i2l103:
  7091  0028DA  C00E  FFF5         	movff	??_chkisr+13,tablat
  7092  0028DE  C00D  FFF8         	movff	??_chkisr+12,tblptru
  7093  0028E2  C00C  FFF7         	movff	??_chkisr+11,tblptrh
  7094  0028E6  C00B  FFF6         	movff	??_chkisr+10,tblptrl
  7095  0028EA  C00A  FFF4         	movff	??_chkisr+9,prodh
  7096  0028EE  C009  FFF3         	movff	??_chkisr+8,prodl
  7097  0028F2  C008  FFDA         	movff	??_chkisr+7,fsr2h
  7098  0028F6  C007  FFD9         	movff	??_chkisr+6,fsr2l
  7099  0028FA  C006  FFE2         	movff	??_chkisr+5,fsr1h
  7100  0028FE  C005  FFE1         	movff	??_chkisr+4,fsr1l
  7101  002902  C004  FFEA         	movff	??_chkisr+3,fsr0h
  7102  002906  C003  FFE9         	movff	??_chkisr+2,fsr0l
  7103  00290A  C002  FFFB         	movff	??_chkisr+1,pclatu
  7104  00290E  C001  FFFA         	movff	??_chkisr,pclath
  7105  002912  0011               	retfie		f
  7106  002914                     __end_of_chkisr:
  7107                           	opt stack 0
  7108                           pclatu	equ	0xFFB
  7109                           pclath	equ	0xFFA
  7110                           tblptru	equ	0xFF8
  7111                           tblptrh	equ	0xFF7
  7112                           tblptrl	equ	0xFF6
  7113                           tablat	equ	0xFF5
  7114                           prodh	equ	0xFF4
  7115                           prodl	equ	0xFF3
  7116                           intcon	equ	0xFF2
  7117                           intcon2	equ	0xFF1
  7118                           postinc0	equ	0xFEE
  7119                           fsr0h	equ	0xFEA
  7120                           fsr0l	equ	0xFE9
  7121                           wreg	equ	0xFE8
  7122                           postdec1	equ	0xFE5
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           indf2	equ	0xFDF
  7126                           postinc2	equ	0xFDE
  7127                           postdec2	equ	0xFDD
  7128                           fsr2h	equ	0xFDA
  7129                           fsr2l	equ	0xFD9
  7130                           status	equ	0xFD8
  7131                           
  7132 ;; *************** function _INT0_ISR *****************
  7133 ;; Defined at:
  7134 ;;		line 57 in file "FireDetector2.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;		None
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;		None               void
  7141 ;; Registers used:
  7142 ;;		wreg, status,2
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;Total ram usage:        0 bytes
  7153 ;; Hardware stack levels used:    1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_chkisr
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text40
  7162  002D7C                     __ptext40:
  7163                           	opt stack 0
  7164  002D7C                     _INT0_ISR:
  7165                           	opt stack 25
  7166                           
  7167                           ;FireDetector2.c: 59: INTCONbits.INT0IF=0;
  7168                           
  7169                           ;incstack = 0
  7170  002D7C  92F2               	bcf	intcon,1,c	;volatile
  7171                           
  7172                           ;FireDetector2.c: 60: Manual_Alarm = 1;
  7173  002D7E  0E01               	movlw	1
  7174  002D80  0100               	movlb	0	; () banked
  7175  002D82  6F97               	movwf	_Manual_Alarm& (0+255),b
  7176                           
  7177                           ; BSR set to: 0
  7178  002D84  0012               	return		;funcret
  7179  002D86                     __end_of_INT0_ISR:
  7180                           	opt stack 0
  7181                           pclatu	equ	0xFFB
  7182                           pclath	equ	0xFFA
  7183                           tblptru	equ	0xFF8
  7184                           tblptrh	equ	0xFF7
  7185                           tblptrl	equ	0xFF6
  7186                           tablat	equ	0xFF5
  7187                           prodh	equ	0xFF4
  7188                           prodl	equ	0xFF3
  7189                           intcon	equ	0xFF2
  7190                           intcon2	equ	0xFF1
  7191                           postinc0	equ	0xFEE
  7192                           fsr0h	equ	0xFEA
  7193                           fsr0l	equ	0xFE9
  7194                           wreg	equ	0xFE8
  7195                           postdec1	equ	0xFE5
  7196                           fsr1h	equ	0xFE2
  7197                           fsr1l	equ	0xFE1
  7198                           indf2	equ	0xFDF
  7199                           postinc2	equ	0xFDE
  7200                           postdec2	equ	0xFDD
  7201                           fsr2h	equ	0xFDA
  7202                           fsr2l	equ	0xFD9
  7203                           status	equ	0xFD8
  7204                           pclatu	equ	0xFFB
  7205                           pclath	equ	0xFFA
  7206                           tblptru	equ	0xFF8
  7207                           tblptrh	equ	0xFF7
  7208                           tblptrl	equ	0xFF6
  7209                           tablat	equ	0xFF5
  7210                           prodh	equ	0xFF4
  7211                           prodl	equ	0xFF3
  7212                           intcon	equ	0xFF2
  7213                           intcon2	equ	0xFF1
  7214                           postinc0	equ	0xFEE
  7215                           fsr0h	equ	0xFEA
  7216                           fsr0l	equ	0xFE9
  7217                           wreg	equ	0xFE8
  7218                           postdec1	equ	0xFE5
  7219                           fsr1h	equ	0xFE2
  7220                           fsr1l	equ	0xFE1
  7221                           indf2	equ	0xFDF
  7222                           postinc2	equ	0xFDE
  7223                           postdec2	equ	0xFDD
  7224                           fsr2h	equ	0xFDA
  7225                           fsr2l	equ	0xFD9
  7226                           status	equ	0xFD8
  7227                           
  7228                           	psect	rparam
  7229  0000                     pclatu	equ	0xFFB
  7230                           pclath	equ	0xFFA
  7231                           tblptru	equ	0xFF8
  7232                           tblptrh	equ	0xFF7
  7233                           tblptrl	equ	0xFF6
  7234                           tablat	equ	0xFF5
  7235                           prodh	equ	0xFF4
  7236                           prodl	equ	0xFF3
  7237                           intcon	equ	0xFF2
  7238                           intcon2	equ	0xFF1
  7239                           postinc0	equ	0xFEE
  7240                           fsr0h	equ	0xFEA
  7241                           fsr0l	equ	0xFE9
  7242                           wreg	equ	0xFE8
  7243                           postdec1	equ	0xFE5
  7244                           fsr1h	equ	0xFE2
  7245                           fsr1l	equ	0xFE1
  7246                           indf2	equ	0xFDF
  7247                           postinc2	equ	0xFDE
  7248                           postdec2	equ	0xFDD
  7249                           fsr2h	equ	0xFDA
  7250                           fsr2l	equ	0xFD9
  7251                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    118
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     99     110
    BANK0           128     23      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_UART->_OpenUSART
    ___ftdiv->___ftmul
    ___awtoft->___ftpack

Critical Paths under _chkisr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   58758
                                             88 COMRAM    11    11      0
                      _Delay_One_Sec
                _Display_Lower_Digit
                _Display_Upper_Digit
                        _Do_Flashing
                           _Init_ADC
                 _Select_ADC_Channel
          _Wait_One_Second_With_Beep
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___lwdiv
                            ___lwmod
                       _get_full_ADC
                            _init_IO
                     _init_Interrupt
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   46523
                                             77 COMRAM    11     6      5
                                              0 BANK0     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   11013
                                             49 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   10734
                                             49 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2312
                                             28 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4656
                                             34 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1603
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1745
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     584
                                             14 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     803
                                             14 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2295
                                             22 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     622
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     501
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     566
                                             56 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4019
                                             71 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3703
                                             59 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     130
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     718
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     375
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     375
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_Interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      34
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     362
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     371
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2768
                                             49 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2326
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2128
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Do_Flashing                                          0     0      0       0
          _Wait_One_Second_With_Beep
 ---------------------------------------------------------------------------------
 (1) _Wait_One_Second_With_Beep                            0     0      0       0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (2) _Wait_Half_Second                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Upper_Digit                                  4     4      0     127
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Display_Lower_Digit                                  1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay_One_Sec                                        2     2      0      68
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _chkisr                                              14    14      0       0
                                              0 COMRAM    14    14      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_One_Sec
   _Display_Lower_Digit
   _Display_Upper_Digit
   _Do_Flashing
     _Wait_One_Second_With_Beep
       _Activate_Buzzer
       _Deactivate_Buzzer
       _Wait_Half_Second
   _Init_ADC
   _Select_ADC_Channel
   _Wait_One_Second_With_Beep
     _Activate_Buzzer
     _Deactivate_Buzzer
     _Wait_Half_Second
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwdiv
   ___lwmod
   _get_full_ADC
   _init_IO
   _init_Interrupt
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _chkisr (ROOT)
   _INT0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     17      18       5       18.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     63      6E       1       86.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86      34        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu May 13 11:39:05 2021

         _Wait_One_Second_With_Beep 2D20                                  l93 2D48  
                                l87 2CC2                        ___awdiv@sign 001A  
               ___wmul@multiplicand 001F                        ___ftadd@exp1 0047  
                      ___ftadd@exp2 0046                        ___ftadd@sign 0045  
                               l112 2C5A                                 l115 2C7A  
                               l125 2006                                 l126 200A  
                               l144 2B02                                 l153 2CD6  
                               l250 1766                                 l164 2C18  
                               l239 159E                                 l504 2BCE  
                               l280 29D6                                 l281 29D8  
                               l274 29B0                                 l194 1B46  
                               l611 2666                                 l283 29F2  
                               l187 1D8A                                 l700 21C6  
                               l622 263E                                 l278 29CA  
                               l286 2C54                                 l279 29CC  
                               l570 22E0                                 l651 1DD0  
                               l715 23D8                                 l652 1F4E  
                               l732 2B92                                 l492 28A0  
                               l709 2792                                 l725 2C92  
                               l805 2A52                                 l655 1DFA  
                               l479 26FC                                 l736 24BE  
                               l666 1EBC                                 l683 25A0  
                               l675 1ED8                                 l579 22D0  
                               l691 21D6                                 l693 213E  
                               l686 256C                                 l838 2AA6  
                               l694 2166                                 l775 280E  
                               l848 2B46                                 l785 2972  
                 ?_Wait_Half_Second 0001                                 _PR2 000FCB  
                 _Deactivate_Buzzer 2D86                        ___awmod@sign 0014  
                               prod 000FF3                                 wreg 000FE8  
                ??_Wait_Half_Second 000F                  ?_Deactivate_Buzzer 0001  
                      __CFG_LVP$OFF 000000                        ___ftdiv@cntr 003B  
                      ___ftdiv@sign 0040                        __CFG_WDT$OFF 000000  
                              l3001 1E78                                l3011 1EB0  
                              l3003 1E80                                l3101 26B0  
                              l3111 26D6                                l3103 26B8  
                              l3017 1EF6                                l3009 1EA4  
                              l3027 1F28                                l3115 26E2  
                              l3131 2836                                l3043 2328  
                              l3141 285C                                l3061 236E  
                              l3037 2300                                l3119 26F2  
                              l3143 2864                                l3151 2886  
                              l3135 2844                                l3071 239C  
                              l3039 231A                                l3321 2198  
                              l3065 2384                                l3057 235C  
                              l3233 1D4A                                l3225 1C86  
                              l3403 2730                                l3323 219E  
                              l3155 2896                                l3147 287A  
                              l3139 2852                                l3075 23B2  
                              l3067 238A                                l3173 29A8  
                              l3165 2996                                l3413 278E  
                              l3501 2962                                l3317 2188  
                              l3309 2174                                l3093 2690  
                              l3253 193C                                l3407 2762  
                              l3343 21F8                                l3327 21B2  
                              l3087 267E                                l3271 1B22  
                              l3247 1894                                l3521 2CBC  
                              l3185 29C2                                l3177 29B4  
                              l3169 29A0                                l3337 21E8  
                              l3329 21C0                                l3281 20E6  
                              l3265 1A70                                l3257 194C  
                              l3451 2468                                l3427 23F8  
                              l3507 29FA                                l3099 26A6  
                              l3517 2CA8                                l3445 2452  
                              l3509 2A08                                l3381 22A2  
                              l3365 226E                                l3357 223C  
                              l3701 161C                                l3621 125E  
                              l3613 11F6                                l2911 25B2  
                              l3463 24AC                                l3455 247C  
                              l3383 22A8                                l3287 2104  
                              l3631 12E4                                l3457 248A  
                              l3449 2462                                l3473 27B6  
                              l3377 2292                                l3369 227E  
                              l3713 1718                                l3641 1350  
                              l3625 1286                                l3563 2AF4  
                              l3547 2C04                                l3555 2C26  
                              l2923 2606                                l2915 25C2  
                              l3395 2B68                                l3459 2494  
                              l3475 27C4                                l3387 22BC  
                              l3707 16F8                                l3643 135C  
                              l3651 13E2                                l3627 129C  
                              l3715 1728                                l3571 10A6  
                              l2933 2646                                l2925 2626  
                              l2917 25CE                                l3733 2506  
                              l3813 2B3A                                l3805 2B12  
                              l3485 27FE                                l3477 27CC  
                              l3493 2926                                l3389 22CA  
                              l3709 1708                                l3661 145E  
                              l3637 132A                                l3629 12CE  
                              l3581 10D2                                l2927 2632  
                              l2919 25EE                                l3727 24DE  
                              l3807 2B1C                                l3495 2934  
                              l3655 144A                                l3647 13A0  
                              l3583 10F6                                l3575 10BA  
                              l3719 1748                                l3753 2546  
                              l3729 24F8                                l3809 2B24  
                              l3497 293C                                l3681 155C  
                              l3673 14BE                                l3665 1498  
                              l3657 1450                                l3649 13CE  
                              l3577 10C8                                l2939 2658  
                              l3763 257A                                l3691 15A4  
                              l3851 2014                                l2981 1E14  
                              l3685 156C                                l3669 149E  
                              l3597 1152                                l3829 1F70  
                              l3775 2BAA                                l2991 1E3C  
                              l2975 1E08                                l3687 1580  
                              l3679 154C                                l3871 2080  
                              l3863 2036                                l3855 2020  
                              l3785 2A6A                                l2969 1DDE  
                              l3697 15CA                                l3787 2A74  
                              l3883 20A6                                l3797 2A9A  
                              l3789 2A7C                                l2997 1E60  
                              l2999 1E6C                                STR_1 1077  
                              u3411 2310                                u4220 1192  
                              u3181 1D9C                                u3191 1DB0  
                              u4225 1188                        printf@tmpval 008F  
                              u3391 22F2                                u4441 24D0  
                              u4610 208C                                u4380 1596  
                              u4461 24EE                                u3751 20D8  
                              u3771 20F6                                u3961 23EA  
                              u3980 2416                                u3985 240E  
                              _RBPU 007F8F                                _TRMT 007D61  
               ??_Deactivate_Buzzer 000F                                _main 1F50  
                      ___ftpack@arg 000F                        ___ftpack@exp 0012  
                              fsr0h 000FEA                                fsr1h 000FE2  
                    ??_get_full_ADC 0011                                fsr0l 000FE9  
                              fsr2h 000FDA                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                              pclat 000FFA                                prodh 000FF4  
                              prodl 000FF3                                start 0018  
                      ___ftmul@cntr 0030                        ___param_bank 000010  
                      ___ftmul@sign 0031                        ___fttol@exp1 0047  
                      ___fttol@lval 0043                    __end_of_INT0_ISR 2D86  
                       _Do_Flashing 2C00           __end_of_Deactivate_Buzzer 2D8E  
                             ?_main 0001                     __end_of___awdiv 26FE  
                   __end_of___ftadd 1F50                     __end_of___awmod 28A2  
                   __end_of___ftdiv 25A2                     __end_of___ftneg 2CA0  
                   __end_of___lldiv 2820                     __end_of___ftmul 23DA  
                             _T0CON 000FD5                     ___awdiv@divisor 0017  
                   __end_of___llmod 2984                     __end_of___ftsub 2B94  
                   __end_of___fttol 24C0                               _T2CON 000FCA  
                   __end_of___lwdiv 2AB0                               i2l103 28DA  
                   __end_of___lwmod 2B50                     ___awdiv@counter 0019  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR0L 000FD6                               _SPBRG 000FAF  
                             _PORTC 000F82                               _PORTD 000F83  
                             _PORTE 000F84                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                      ___lltoft@exp 001F                       ___awtoft@sign 001A  
                   __end_of_init_IO 2D0C                     __end_of_dpowers 1029  
                             _array 0064                               _scale 1768  
                     ___ftpack@sign 0013                               main@L 005C  
                             main@U 005B                               _putch 2D44  
                    __CFG_BOREN$OFF 000000                               tablat 000FF5  
                             status 000FD8                     __initialization 2BD0  
                      __end_of_main 20C8            Display_Lower_Digit@digit 000F  
                  __end_of_Init_ADC 2D7C                              ??_main 0059  
                     ___fttol@sign1 0042                       __activetblptr 000002  
              __size_of__tdiv_to_l_ 0110         __end_of_Display_Lower_Digit 2CF6  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                    ___llmod@dividend 000F  
                            ?_scale 0032                              _ADRESH 000FC4  
                            _ADRESL 000FC3                              _CCPR2L 000FBB  
                  ___awdiv@dividend 0015                    __end_of___awtoft 2BD0  
                            ?_putch 0001                    __end_of___ftpack 2668  
                  __end_of___lltoft 2A54                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                    __end_of__powers_ 1077  
                __size_of_OpenUSART 0070                              ___ftge 26FE  
          __size_of_Activate_Buzzer 0012                              ___wmul 2C2E  
                         ??___awdiv 0019                           ??___ftadd 0042  
                         ??___awmod 0013                           ??___ftdiv 0038  
                         ??___ftneg 0012                           ??___lldiv 0017  
                         ??___ftmul 0029                           ??___llmod 0017  
                         ??___ftsub 004E                           ??___fttol 003D  
                            _chkisr 0008                           ??___lwdiv 0013  
                         ??___lwmod 0013                              _fround 1B48  
                  ___awdiv@quotient 001B                     ___awmod@divisor 0011  
        __size_of_Deactivate_Buzzer 0008                     ___awmod@counter 0013  
                            _printf 1098               ___ftmul@f3_as_product 002D  
                     main@num_step1 0059                __end_of_get_full_ADC 2C7C  
                         ??_init_IO 000F                        __pdataCOMRAM 0064  
__size_of_Wait_One_Second_With_Beep 0012                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                              putch@c 000F  
                        __accesstop 0080             __end_of__initialization 2BF6  
                         ?_INT0_ISR 0001                          ___ftadd@f1 003C  
                        ___ftadd@f2 003F                          ___ftge@ff1 000F  
                        ___ftge@ff2 0012                       ___rparam_used 000001  
                        ___ftdiv@f1 0032                          ___ftdiv@f2 0035  
                        ___ftdiv@f3 003C                          ___ftneg@f1 000F  
                        ___awtoft@c 0017                          ___ftmul@f1 0023  
                        ___ftmul@f2 0026                          ___ftsub@f1 0048  
                        ___ftsub@f2 004B                          ___fttol@f1 0039  
                    __pcstackCOMRAM 0001                          ___lltoft@c 0017  
                     __end_of_scale 1B48                       __end_of_putch 2D52  
                        __div_to_l_ 21D8         __end_of_Display_Upper_Digit 2B04  
           __size_of_init_Interrupt 000A                   __end_of_OpenUSART 29F4  
                   __div_to_l_@exp1 001A                     __div_to_l_@cntr 0019  
                           ??_scale 0035                     __div_to_l_@quot 0015  
                           ??_putch 000F                          __pbssBANK0 0097  
                         ?_Init_ADC 0001                      Delay_One_Sec@I 000F  
                __size_of_init_UART 0014          __end_of_Select_ADC_Channel 2D5E  
                        ??_INT0_ISR 0001           __size_of_Wait_Half_Second 001A  
                     __div_to_l_@f1 000F                       __div_to_l_@f2 0012  
                __CFG_CCP2MX$PORTBE 000000                             ?___ftge 000F  
                           ?___wmul 001D                             ?_chkisr 0001  
                           _CCP2CON 000FBA              __size_of_Delay_One_Sec 0024  
                      ?_Do_Flashing 0001                             ?_fround 0032  
                         ?___awtoft 0017                           ?___ftpack 000F  
                           ?_printf 004E           Select_ADC_Channel@channel 000F  
                         ?___lltoft 0017                   ??_Activate_Buzzer 000F  
                        ??_Init_ADC 000F                   __end_of__npowers_ 1050  
                           __Hparam 0000                          _scale$1579 0035  
                           __Lparam 0000                     __size_of___ftge 0096  
                           ___awdiv 2668                             ___ftadd 1D8C  
                           ___awmod 2820                             ___ftdiv 24C0  
                           ___ftneg 2C7C                             ___lldiv 2794  
                   __size_of___wmul 0028                             ___ftmul 22E2  
                           ___llmod 2914                             ___ftsub 2B50  
                           ___fttol 23DA                             ___lwdiv 2A54  
                           ___lwmod 2B04               __size_of_get_full_ADC 0026  
                   __size_of_chkisr 290C                        __psmallconst 1000  
                           __pcinit 2BD0                          ??___awtoft 001A  
                        ??___ftpack 0014                     __size_of_fround 0244  
                           __ramtop 1000                          ??___lltoft 001B  
                           __ptext0 1F50                             __ptext1 1098  
                           __ptext2 1768                             __ptext3 2D44  
                           __ptext4 1B48                             __ptext5 2C2E  
                           __ptext6 22E2                             __ptext7 2820  
                           __ptext8 2668                             __ptext9 20C8  
                   __size_of_printf 06D0                   __end_of_init_UART 2D20  
                         _T0CONbits 000FD5                         ?__div_to_l_ 000F  
                           _init_IO 2CF6                             _dpowers 1001  
                  ___awmod@dividend 000F                      __pintcode_body 28A2  
              end_of_initialization 2BF6                       _Delay_One_Sec 2CA0  
                     __Lmediumconst 0000                             int_func 28A2  
                      _get_full_ADC 2C56                     ___lldiv@divisor 0013  
                   ___lldiv@counter 001B                           _RCSTAbits 000FAB  
                           printf@c 0096                             printf@f 004E  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
                    __tdiv_to_l_@f1 000F                      __tdiv_to_l_@f2 0012  
                     ??__tdiv_to_l_ 0015                           _PORTAbits 000F80  
                         _PORTBbits 000F81                           _PORTCbits 000F82  
                         _PORTDbits 000F83                      _init_Interrupt 2D68  
                         _TRISCbits 000F94                      ?_Delay_One_Sec 0001  
      __size_of_Display_Lower_Digit 0018                    _Wait_Half_Second 2CC4  
                       ___ftdiv@exp 003F                        _Manual_Alarm 0097  
                         _TXSTAbits 000FAC                          main@people 0062  
                get_full_ADC@result 0013                   __size_of_INT0_ISR 000A  
               __size_of__div_to_l_ 010A                         ___ftmul@exp 002C  
          Display_Upper_Digit@digit 0010                      __end_of___ftge 2794  
                    __end_of___wmul 2C56                       __pidataCOMRAM 2D5E  
                    __end_of_chkisr 2914                      __end_of_fround 1D8C  
              __size_of_Do_Flashing 002E              __end_of_init_Interrupt 2D72  
                    __end_of_printf 1768                 start_initialization 2BD0  
               __end_of__tdiv_to_l_ 21D8                           _OpenUSART 2984  
                   ___llmod@divisor 0013                    __CFG_OSC$INTIO67 000000  
                 __size_of_Init_ADC 000A                     ___llmod@counter 0017  
                   _Activate_Buzzer 2D32                            ??___ftge 0015  
                          ??___wmul 0021                            ??_chkisr 0001  
                _Select_ADC_Channel 2D52                            ??_fround 0035  
                          ??_printf 0053                     ?_init_Interrupt 0001  
                        fround@prec 003B                   __size_of___awtoft 003C  
                 __size_of___ftpack 00C6                 ?_Select_ADC_Channel 0001  
                 __size_of___lltoft 0060                         __pbssCOMRAM 006E  
                     __pcstackBANK0 0080                     ??_Delay_One_Sec 000F  
        ?_Wait_One_Second_With_Beep 0001        __size_of_Display_Upper_Digit 0054  
                        ?_OpenUSART 000F                ??_Select_ADC_Channel 000F  
                  ___lwdiv@dividend 000F                           __pintcode 0008  
                          ?___awdiv 0015                            ?___ftadd 003C  
                          ?___awmod 000F                            ?___ftdiv 0032  
                          ?___ftneg 000F                            ?___lldiv 000F  
                          ?___ftmul 0023                            ?___llmod 000F  
                          ?___ftsub 0048                           __npowers_ 1029  
                          ?___fttol 0039                            ?___lwdiv 000F  
                          ?___lwmod 000F                         __tdiv_to_l_ 20C8  
                      ??__div_to_l_ 0015                         __smallconst 1000  
                          ?_init_IO 0001                           _init_UART 2D0C  
                  ___lwdiv@quotient 0014                            _FLASHING 006E  
                    __size_of_scale 03E0                      __size_of_putch 000E  
 __end_of_Wait_One_Second_With_Beep 2D32             __end_of_Activate_Buzzer 2D44  
                          _INT0_ISR 2D7C                      ___wmul@product 0021  
                          _PIE1bits 000F9D                            _PIR1bits 000F9E  
                __end_of__div_to_l_ 22E2                           main@L_676 005E  
                         main@U_675 005D                 _Display_Lower_Digit 2CDE  
                        _ADCON0bits 000FC2            __end_of_Wait_Half_Second 2CDE  
                 ___wmul@multiplier 001D                          printf@flag 0085  
                        printf@fval 0093                          printf@prec 0087  
                        ?_init_UART 0001             Display_Upper_Digit@bit6 0011  
                       _INTCON2bits 000FF1                           copy_data0 2BEA  
                          _Init_ADC 2D72                ?_Display_Lower_Digit 0001  
                       ??_OpenUSART 0011                     OpenUSART@config 0011  
                          __Hrparam 0000                            __Lrparam 0000  
                  __size_of___awdiv 0096                    __size_of___ftadd 01C4  
                  __size_of___awmod 0082                    __size_of___ftdiv 00E2  
                  __size_of___ftneg 0024                    __size_of___lldiv 008C  
                  __size_of___ftmul 00F8                    __size_of___llmod 0070  
                  __size_of___ftsub 0044                    __size_of___fttol 00E6  
                  __size_of___lwdiv 005C                    __size_of___lwmod 004C  
                          ___awtoft 2B94                            ___ftpack 25A2  
                       _fround$1577 0038                         _fround$1578 0035  
                          ___lltoft 29F4                    __size_of_init_IO 0016  
                   ___lwdiv@divisor 0011                     ___lwdiv@counter 0013  
                          __ptext10 21D8                            __ptext11 29F4  
                          __ptext20 2984                            __ptext12 2914  
                          __ptext21 2D68                            __ptext13 2794  
                          __ptext30 2D72                            __ptext22 2CF6  
                          __ptext14 23DA                            __ptext31 2C00  
                          __ptext23 2C56                            __ptext15 2B50  
                          __ptext40 2D7C                            __ptext32 2D20  
                          __ptext24 2B04                            __ptext16 1D8C  
                          __ptext33 2CC4                            __ptext25 2A54  
                          __ptext17 2C7C                            __ptext34 2D86  
                          __ptext26 24C0                            __ptext18 26FE  
                          __ptext35 2D32                            __ptext27 2B94  
                          __ptext19 2D0C                            __ptext36 2AB0  
                          __ptext28 25A2                            __ptext37 2CDE  
                          __ptext29 2D52                            __ptext38 2CA0  
                          __powers_ 1050               ??_Display_Lower_Digit 000F  
                  ?_Activate_Buzzer 0001                       __size_of_main 0178  
                  ??_init_Interrupt 000F                       ??_Do_Flashing 000F  
                         printf@exp 008D                           printf@val 0089  
               _Display_Upper_Digit 2AB0                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 000F                         ??_init_UART 0012  
                          scale@scl 0038         ??_Wait_One_Second_With_Beep 000F  
                          intlevel2 0000                    __tdiv_to_l_@exp1 001D  
                  __tdiv_to_l_@cntr 001C                ?_Display_Upper_Digit 0001  
                  __tdiv_to_l_@quot 0018                    ___lwmod@dividend 000F  
                  ___lldiv@dividend 000F                            printf@ap 0083  
                      ?__tdiv_to_l_ 000F                         _printf$1580 0080  
                  ___lldiv@quotient 0017                     ___lwmod@divisor 0011  
                   ___lwmod@counter 0013                 __end_of_Do_Flashing 2C2E  
             __end_of_Delay_One_Sec 2CC4               ??_Display_Upper_Digit 000F  
                     ?_get_full_ADC 000F         __size_of_Select_ADC_Channel 000C  
                   main@voltage_mv1 005F  
